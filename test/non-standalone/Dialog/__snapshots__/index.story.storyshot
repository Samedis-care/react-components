// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Storyshots Non-Standalone/Dialog Confirm 1`] = `
<Memo(ComponentsCareFramework)
  defaultTheme={[Function]}
>
  <Suspense
    fallback={<Memo(Loader) />}
  >
    <Memo(CCI18nProvider)>
      <I18nextProvider
        defaultNS="translation"
        i18n={
          I18n {
            "addResource": [Function],
            "addResourceBundle": [Function],
            "addResources": [Function],
            "format": undefined,
            "getDataByLanguage": [Function],
            "getResource": [Function],
            "getResourceBundle": [Function],
            "hasResourceBundle": [Function],
            "isInitialized": true,
            "isLanguageChangingTo": undefined,
            "language": "en",
            "languages": Array [
              "en",
            ],
            "logger": Logger {
              "debug": true,
              "logger": Object {
                "error": [Function],
                "log": [Function],
                "output": [Function],
                "type": "logger",
                "warn": [Function],
              },
              "options": Object {
                "appendNamespaceToCIMode": false,
                "appendNamespaceToMissingKey": false,
                "contextSeparator": "_",
                "debug": true,
                "defaultNS": "translation",
                "fallbackLng": Array [
                  "en",
                ],
                "fallbackNS": false,
                "initImmediate": false,
                "interpolation": Object {
                  "escapeValue": false,
                },
                "joinArrays": false,
                "keySeparator": ".",
                "load": "all",
                "missingInterpolationHandler": false,
                "missingKeyHandler": false,
                "nonExplicitSupportedLngs": true,
                "nonExplicitWhitelist": false,
                "ns": Array [],
                "nsSeparator": ":",
                "overloadTranslationOptionHandler": [Function],
                "parseMissingKeyHandler": false,
                "partialBundledLanguages": false,
                "pluralSeparator": "_",
                "postProcess": false,
                "postProcessPassResolved": false,
                "preload": false,
                "resources": Object {
                  "de": Object {},
                  "en": Object {},
                  "fr": Object {},
                  "ru": Object {},
                  "uz": Object {},
                },
                "returnEmptyString": true,
                "returnNull": true,
                "returnObjects": false,
                "returnedObjectHandler": false,
                "saveMissing": false,
                "saveMissingPlurals": true,
                "saveMissingTo": "fallback",
                "simplifyPluralSuffix": true,
                "supportedLngs": Array [
                  "de",
                  "en",
                  "fr",
                  "ru",
                  "uz",
                  "cimode",
                ],
                "updateMissing": false,
                "whitelist": false,
              },
              "prefix": "i18next:",
            },
            "modules": Object {
              "external": Array [],
              "languageDetector": [Function],
            },
            "observers": Object {
              "languageChanged": Array [
                [Function],
                [Function],
              ],
            },
            "options": Object {
              "appendNamespaceToCIMode": false,
              "appendNamespaceToMissingKey": false,
              "contextSeparator": "_",
              "debug": true,
              "defaultNS": "translation",
              "fallbackLng": Array [
                "en",
              ],
              "fallbackNS": false,
              "initImmediate": false,
              "interpolation": Object {
                "escapeValue": false,
              },
              "joinArrays": false,
              "keySeparator": ".",
              "load": "all",
              "missingInterpolationHandler": false,
              "missingKeyHandler": false,
              "nonExplicitSupportedLngs": true,
              "nonExplicitWhitelist": false,
              "ns": Array [],
              "nsSeparator": ":",
              "overloadTranslationOptionHandler": [Function],
              "parseMissingKeyHandler": false,
              "partialBundledLanguages": false,
              "pluralSeparator": "_",
              "postProcess": false,
              "postProcessPassResolved": false,
              "preload": false,
              "resources": Object {
                "de": Object {},
                "en": Object {},
                "fr": Object {},
                "ru": Object {},
                "uz": Object {},
              },
              "returnEmptyString": true,
              "returnNull": true,
              "returnObjects": false,
              "returnedObjectHandler": false,
              "saveMissing": false,
              "saveMissingPlurals": true,
              "saveMissingTo": "fallback",
              "simplifyPluralSuffix": true,
              "supportedLngs": Array [
                "de",
                "en",
                "fr",
                "ru",
                "uz",
                "cimode",
              ],
              "updateMissing": false,
              "whitelist": false,
            },
            "removeResourceBundle": [Function],
            "reportNamespaces": ReportNamespaces {
              "usedNamespaces": Object {
                "translation": true,
              },
            },
            "services": Object {
              "backendConnector": Connector {
                "backend": null,
                "languageUtils": LanguageUtil {
                  "logger": Logger {
                    "debug": true,
                    "logger": Object {
                      "error": [Function],
                      "log": [Function],
                      "output": [Function],
                      "type": "logger",
                      "warn": [Function],
                    },
                    "options": Object {
                      "appendNamespaceToCIMode": false,
                      "appendNamespaceToMissingKey": false,
                      "contextSeparator": "_",
                      "debug": true,
                      "defaultNS": "translation",
                      "fallbackLng": Array [
                        "en",
                      ],
                      "fallbackNS": false,
                      "initImmediate": false,
                      "interpolation": Object {
                        "escapeValue": false,
                      },
                      "joinArrays": false,
                      "keySeparator": ".",
                      "load": "all",
                      "missingInterpolationHandler": false,
                      "missingKeyHandler": false,
                      "nonExplicitSupportedLngs": true,
                      "nonExplicitWhitelist": false,
                      "ns": Array [],
                      "nsSeparator": ":",
                      "overloadTranslationOptionHandler": [Function],
                      "parseMissingKeyHandler": false,
                      "partialBundledLanguages": false,
                      "pluralSeparator": "_",
                      "postProcess": false,
                      "postProcessPassResolved": false,
                      "prefix": "i18next::languageUtils:",
                      "preload": false,
                      "resources": Object {
                        "de": Object {},
                        "en": Object {},
                        "fr": Object {},
                        "ru": Object {},
                        "uz": Object {},
                      },
                      "returnEmptyString": true,
                      "returnNull": true,
                      "returnObjects": false,
                      "returnedObjectHandler": false,
                      "saveMissing": false,
                      "saveMissingPlurals": true,
                      "saveMissingTo": "fallback",
                      "simplifyPluralSuffix": true,
                      "supportedLngs": Array [
                        "de",
                        "en",
                        "fr",
                        "ru",
                        "uz",
                        "cimode",
                      ],
                      "updateMissing": false,
                      "whitelist": false,
                    },
                    "prefix": "i18next::languageUtils:",
                  },
                  "options": Object {
                    "appendNamespaceToCIMode": false,
                    "appendNamespaceToMissingKey": false,
                    "contextSeparator": "_",
                    "debug": true,
                    "defaultNS": "translation",
                    "fallbackLng": Array [
                      "en",
                    ],
                    "fallbackNS": false,
                    "initImmediate": false,
                    "interpolation": Object {
                      "escapeValue": false,
                    },
                    "joinArrays": false,
                    "keySeparator": ".",
                    "load": "all",
                    "missingInterpolationHandler": false,
                    "missingKeyHandler": false,
                    "nonExplicitSupportedLngs": true,
                    "nonExplicitWhitelist": false,
                    "ns": Array [],
                    "nsSeparator": ":",
                    "overloadTranslationOptionHandler": [Function],
                    "parseMissingKeyHandler": false,
                    "partialBundledLanguages": false,
                    "pluralSeparator": "_",
                    "postProcess": false,
                    "postProcessPassResolved": false,
                    "preload": false,
                    "resources": Object {
                      "de": Object {},
                      "en": Object {},
                      "fr": Object {},
                      "ru": Object {},
                      "uz": Object {},
                    },
                    "returnEmptyString": true,
                    "returnNull": true,
                    "returnObjects": false,
                    "returnedObjectHandler": false,
                    "saveMissing": false,
                    "saveMissingPlurals": true,
                    "saveMissingTo": "fallback",
                    "simplifyPluralSuffix": true,
                    "supportedLngs": Array [
                      "de",
                      "en",
                      "fr",
                      "ru",
                      "uz",
                      "cimode",
                    ],
                    "updateMissing": false,
                    "whitelist": false,
                  },
                  "supportedLngs": Array [
                    "de",
                    "en",
                    "fr",
                    "ru",
                    "uz",
                    "cimode",
                  ],
                  "whitelist": Array [
                    "de",
                    "en",
                    "fr",
                    "ru",
                    "uz",
                    "cimode",
                  ],
                },
                "logger": Logger {
                  "debug": true,
                  "logger": Object {
                    "error": [Function],
                    "log": [Function],
                    "output": [Function],
                    "type": "logger",
                    "warn": [Function],
                  },
                  "options": Object {
                    "appendNamespaceToCIMode": false,
                    "appendNamespaceToMissingKey": false,
                    "contextSeparator": "_",
                    "debug": true,
                    "defaultNS": "translation",
                    "fallbackLng": Array [
                      "en",
                    ],
                    "fallbackNS": false,
                    "initImmediate": false,
                    "interpolation": Object {
                      "escapeValue": false,
                    },
                    "joinArrays": false,
                    "keySeparator": ".",
                    "load": "all",
                    "missingInterpolationHandler": false,
                    "missingKeyHandler": false,
                    "nonExplicitSupportedLngs": true,
                    "nonExplicitWhitelist": false,
                    "ns": Array [],
                    "nsSeparator": ":",
                    "overloadTranslationOptionHandler": [Function],
                    "parseMissingKeyHandler": false,
                    "partialBundledLanguages": false,
                    "pluralSeparator": "_",
                    "postProcess": false,
                    "postProcessPassResolved": false,
                    "prefix": "i18next::backendConnector:",
                    "preload": false,
                    "resources": Object {
                      "de": Object {},
                      "en": Object {},
                      "fr": Object {},
                      "ru": Object {},
                      "uz": Object {},
                    },
                    "returnEmptyString": true,
                    "returnNull": true,
                    "returnObjects": false,
                    "returnedObjectHandler": false,
                    "saveMissing": false,
                    "saveMissingPlurals": true,
                    "saveMissingTo": "fallback",
                    "simplifyPluralSuffix": true,
                    "supportedLngs": Array [
                      "de",
                      "en",
                      "fr",
                      "ru",
                      "uz",
                      "cimode",
                    ],
                    "updateMissing": false,
                    "whitelist": false,
                  },
                  "prefix": "i18next::backendConnector:",
                },
                "observers": Object {
                  "*": Array [
                    [Function],
                  ],
                },
                "options": Object {
                  "appendNamespaceToCIMode": false,
                  "appendNamespaceToMissingKey": false,
                  "contextSeparator": "_",
                  "debug": true,
                  "defaultNS": "translation",
                  "fallbackLng": Array [
                    "en",
                  ],
                  "fallbackNS": false,
                  "initImmediate": false,
                  "interpolation": Object {
                    "escapeValue": false,
                  },
                  "joinArrays": false,
                  "keySeparator": ".",
                  "load": "all",
                  "missingInterpolationHandler": false,
                  "missingKeyHandler": false,
                  "nonExplicitSupportedLngs": true,
                  "nonExplicitWhitelist": false,
                  "ns": Array [],
                  "nsSeparator": ":",
                  "overloadTranslationOptionHandler": [Function],
                  "parseMissingKeyHandler": false,
                  "partialBundledLanguages": false,
                  "pluralSeparator": "_",
                  "postProcess": false,
                  "postProcessPassResolved": false,
                  "preload": false,
                  "resources": Object {
                    "de": Object {},
                    "en": Object {},
                    "fr": Object {},
                    "ru": Object {},
                    "uz": Object {},
                  },
                  "returnEmptyString": true,
                  "returnNull": true,
                  "returnObjects": false,
                  "returnedObjectHandler": false,
                  "saveMissing": false,
                  "saveMissingPlurals": true,
                  "saveMissingTo": "fallback",
                  "simplifyPluralSuffix": true,
                  "supportedLngs": Array [
                    "de",
                    "en",
                    "fr",
                    "ru",
                    "uz",
                    "cimode",
                  ],
                  "updateMissing": false,
                  "whitelist": false,
                },
                "queue": Array [],
                "services": [Circular],
                "state": Object {},
                "store": Object {
                  "de": Object {},
                  "en": Object {},
                  "fr": Object {},
                  "ru": Object {},
                  "uz": Object {},
                },
              },
              "interpolator": Interpolator {
                "alwaysFormat": false,
                "escape": [Function],
                "escapeValue": false,
                "format": [Function],
                "formatSeparator": ",",
                "logger": Logger {
                  "debug": true,
                  "logger": Object {
                    "error": [Function],
                    "log": [Function],
                    "output": [Function],
                    "type": "logger",
                    "warn": [Function],
                  },
                  "options": Object {
                    "appendNamespaceToCIMode": false,
                    "appendNamespaceToMissingKey": false,
                    "contextSeparator": "_",
                    "debug": true,
                    "defaultNS": "translation",
                    "fallbackLng": Array [
                      "en",
                    ],
                    "fallbackNS": false,
                    "initImmediate": false,
                    "interpolation": Object {
                      "escapeValue": false,
                    },
                    "joinArrays": false,
                    "keySeparator": ".",
                    "load": "all",
                    "missingInterpolationHandler": false,
                    "missingKeyHandler": false,
                    "nonExplicitSupportedLngs": true,
                    "nonExplicitWhitelist": false,
                    "ns": Array [],
                    "nsSeparator": ":",
                    "overloadTranslationOptionHandler": [Function],
                    "parseMissingKeyHandler": false,
                    "partialBundledLanguages": false,
                    "pluralSeparator": "_",
                    "postProcess": false,
                    "postProcessPassResolved": false,
                    "prefix": "i18next::interpolator:",
                    "preload": false,
                    "resources": Object {
                      "de": Object {},
                      "en": Object {},
                      "fr": Object {},
                      "ru": Object {},
                      "uz": Object {},
                    },
                    "returnEmptyString": true,
                    "returnNull": true,
                    "returnObjects": false,
                    "returnedObjectHandler": false,
                    "saveMissing": false,
                    "saveMissingPlurals": true,
                    "saveMissingTo": "fallback",
                    "simplifyPluralSuffix": true,
                    "supportedLngs": Array [
                      "de",
                      "en",
                      "fr",
                      "ru",
                      "uz",
                      "cimode",
                    ],
                    "updateMissing": false,
                    "whitelist": false,
                  },
                  "prefix": "i18next::interpolator:",
                },
                "maxReplaces": 1000,
                "nestingOptionsSeparator": ",",
                "nestingPrefix": "\\\\$t\\\\(",
                "nestingRegexp": /\\\\\\$t\\\\\\(\\(\\.\\+\\?\\)\\\\\\)/g,
                "nestingSuffix": "\\\\)",
                "options": Object {
                  "appendNamespaceToCIMode": false,
                  "appendNamespaceToMissingKey": false,
                  "contextSeparator": "_",
                  "debug": true,
                  "defaultNS": "translation",
                  "fallbackLng": Array [
                    "en",
                  ],
                  "fallbackNS": false,
                  "initImmediate": false,
                  "interpolation": Object {
                    "escapeValue": false,
                  },
                  "joinArrays": false,
                  "keySeparator": ".",
                  "load": "all",
                  "missingInterpolationHandler": false,
                  "missingKeyHandler": false,
                  "nonExplicitSupportedLngs": true,
                  "nonExplicitWhitelist": false,
                  "ns": Array [],
                  "nsSeparator": ":",
                  "overloadTranslationOptionHandler": [Function],
                  "parseMissingKeyHandler": false,
                  "partialBundledLanguages": false,
                  "pluralSeparator": "_",
                  "postProcess": false,
                  "postProcessPassResolved": false,
                  "preload": false,
                  "resources": Object {
                    "de": Object {},
                    "en": Object {},
                    "fr": Object {},
                    "ru": Object {},
                    "uz": Object {},
                  },
                  "returnEmptyString": true,
                  "returnNull": true,
                  "returnObjects": false,
                  "returnedObjectHandler": false,
                  "saveMissing": false,
                  "saveMissingPlurals": true,
                  "saveMissingTo": "fallback",
                  "simplifyPluralSuffix": true,
                  "supportedLngs": Array [
                    "de",
                    "en",
                    "fr",
                    "ru",
                    "uz",
                    "cimode",
                  ],
                  "updateMissing": false,
                  "whitelist": false,
                },
                "prefix": "{{",
                "regexp": /\\{\\{\\(\\.\\+\\?\\)\\}\\}/g,
                "regexpUnescape": /\\{\\{-\\(\\.\\+\\?\\)\\}\\}/g,
                "suffix": "}}",
                "unescapePrefix": "-",
                "unescapeSuffix": "",
                "useRawValueToEscape": false,
              },
              "languageDetector": Browser {
                "detectors": Object {
                  "cookie": Object {
                    "cacheUserLanguage": [Function],
                    "lookup": [Function],
                    "name": "cookie",
                  },
                  "htmlTag": Object {
                    "lookup": [Function],
                    "name": "htmlTag",
                  },
                  "localStorage": Object {
                    "cacheUserLanguage": [Function],
                    "lookup": [Function],
                    "name": "localStorage",
                  },
                  "navigator": Object {
                    "lookup": [Function],
                    "name": "navigator",
                  },
                  "path": Object {
                    "lookup": [Function],
                    "name": "path",
                  },
                  "querystring": Object {
                    "lookup": [Function],
                    "name": "querystring",
                  },
                  "sessionStorage": Object {
                    "cacheUserLanguage": [Function],
                    "lookup": [Function],
                    "name": "sessionStorage",
                  },
                  "subdomain": Object {
                    "lookup": [Function],
                    "name": "subdomain",
                  },
                },
                "i18nOptions": Object {
                  "appendNamespaceToCIMode": false,
                  "appendNamespaceToMissingKey": false,
                  "contextSeparator": "_",
                  "debug": true,
                  "defaultNS": "translation",
                  "fallbackLng": Array [
                    "en",
                  ],
                  "fallbackNS": false,
                  "initImmediate": false,
                  "interpolation": Object {
                    "escapeValue": false,
                  },
                  "joinArrays": false,
                  "keySeparator": ".",
                  "load": "all",
                  "missingInterpolationHandler": false,
                  "missingKeyHandler": false,
                  "nonExplicitSupportedLngs": true,
                  "nonExplicitWhitelist": false,
                  "ns": Array [],
                  "nsSeparator": ":",
                  "overloadTranslationOptionHandler": [Function],
                  "parseMissingKeyHandler": false,
                  "partialBundledLanguages": false,
                  "pluralSeparator": "_",
                  "postProcess": false,
                  "postProcessPassResolved": false,
                  "preload": false,
                  "resources": Object {
                    "de": Object {},
                    "en": Object {},
                    "fr": Object {},
                    "ru": Object {},
                    "uz": Object {},
                  },
                  "returnEmptyString": true,
                  "returnNull": true,
                  "returnObjects": false,
                  "returnedObjectHandler": false,
                  "saveMissing": false,
                  "saveMissingPlurals": true,
                  "saveMissingTo": "fallback",
                  "simplifyPluralSuffix": true,
                  "supportedLngs": Array [
                    "de",
                    "en",
                    "fr",
                    "ru",
                    "uz",
                    "cimode",
                  ],
                  "updateMissing": false,
                  "whitelist": false,
                },
                "options": Object {
                  "caches": Array [
                    "localStorage",
                  ],
                  "excludeCacheFor": Array [
                    "cimode",
                  ],
                  "lookupCookie": "i18next",
                  "lookupLocalStorage": "i18nextLng",
                  "lookupQuerystring": "lng",
                  "lookupSessionStorage": "i18nextLng",
                  "order": Array [
                    "querystring",
                    "cookie",
                    "localStorage",
                    "sessionStorage",
                    "navigator",
                    "htmlTag",
                  ],
                },
                "services": [Circular],
                "type": "languageDetector",
              },
              "languageUtils": LanguageUtil {
                "logger": Logger {
                  "debug": true,
                  "logger": Object {
                    "error": [Function],
                    "log": [Function],
                    "output": [Function],
                    "type": "logger",
                    "warn": [Function],
                  },
                  "options": Object {
                    "appendNamespaceToCIMode": false,
                    "appendNamespaceToMissingKey": false,
                    "contextSeparator": "_",
                    "debug": true,
                    "defaultNS": "translation",
                    "fallbackLng": Array [
                      "en",
                    ],
                    "fallbackNS": false,
                    "initImmediate": false,
                    "interpolation": Object {
                      "escapeValue": false,
                    },
                    "joinArrays": false,
                    "keySeparator": ".",
                    "load": "all",
                    "missingInterpolationHandler": false,
                    "missingKeyHandler": false,
                    "nonExplicitSupportedLngs": true,
                    "nonExplicitWhitelist": false,
                    "ns": Array [],
                    "nsSeparator": ":",
                    "overloadTranslationOptionHandler": [Function],
                    "parseMissingKeyHandler": false,
                    "partialBundledLanguages": false,
                    "pluralSeparator": "_",
                    "postProcess": false,
                    "postProcessPassResolved": false,
                    "prefix": "i18next::languageUtils:",
                    "preload": false,
                    "resources": Object {
                      "de": Object {},
                      "en": Object {},
                      "fr": Object {},
                      "ru": Object {},
                      "uz": Object {},
                    },
                    "returnEmptyString": true,
                    "returnNull": true,
                    "returnObjects": false,
                    "returnedObjectHandler": false,
                    "saveMissing": false,
                    "saveMissingPlurals": true,
                    "saveMissingTo": "fallback",
                    "simplifyPluralSuffix": true,
                    "supportedLngs": Array [
                      "de",
                      "en",
                      "fr",
                      "ru",
                      "uz",
                      "cimode",
                    ],
                    "updateMissing": false,
                    "whitelist": false,
                  },
                  "prefix": "i18next::languageUtils:",
                },
                "options": Object {
                  "appendNamespaceToCIMode": false,
                  "appendNamespaceToMissingKey": false,
                  "contextSeparator": "_",
                  "debug": true,
                  "defaultNS": "translation",
                  "fallbackLng": Array [
                    "en",
                  ],
                  "fallbackNS": false,
                  "initImmediate": false,
                  "interpolation": Object {
                    "escapeValue": false,
                  },
                  "joinArrays": false,
                  "keySeparator": ".",
                  "load": "all",
                  "missingInterpolationHandler": false,
                  "missingKeyHandler": false,
                  "nonExplicitSupportedLngs": true,
                  "nonExplicitWhitelist": false,
                  "ns": Array [],
                  "nsSeparator": ":",
                  "overloadTranslationOptionHandler": [Function],
                  "parseMissingKeyHandler": false,
                  "partialBundledLanguages": false,
                  "pluralSeparator": "_",
                  "postProcess": false,
                  "postProcessPassResolved": false,
                  "preload": false,
                  "resources": Object {
                    "de": Object {},
                    "en": Object {},
                    "fr": Object {},
                    "ru": Object {},
                    "uz": Object {},
                  },
                  "returnEmptyString": true,
                  "returnNull": true,
                  "returnObjects": false,
                  "returnedObjectHandler": false,
                  "saveMissing": false,
                  "saveMissingPlurals": true,
                  "saveMissingTo": "fallback",
                  "simplifyPluralSuffix": true,
                  "supportedLngs": Array [
                    "de",
                    "en",
                    "fr",
                    "ru",
                    "uz",
                    "cimode",
                  ],
                  "updateMissing": false,
                  "whitelist": false,
                },
                "supportedLngs": Array [
                  "de",
                  "en",
                  "fr",
                  "ru",
                  "uz",
                  "cimode",
                ],
                "whitelist": Array [
                  "de",
                  "en",
                  "fr",
                  "ru",
                  "uz",
                  "cimode",
                ],
              },
              "logger": Logger {
                "debug": true,
                "logger": Object {
                  "error": [Function],
                  "log": [Function],
                  "output": [Function],
                  "type": "logger",
                  "warn": [Function],
                },
                "options": Object {
                  "appendNamespaceToCIMode": false,
                  "appendNamespaceToMissingKey": false,
                  "contextSeparator": "_",
                  "debug": true,
                  "defaultNS": "translation",
                  "fallbackLng": Array [
                    "en",
                  ],
                  "fallbackNS": false,
                  "initImmediate": false,
                  "interpolation": Object {
                    "escapeValue": false,
                  },
                  "joinArrays": false,
                  "keySeparator": ".",
                  "load": "all",
                  "missingInterpolationHandler": false,
                  "missingKeyHandler": false,
                  "nonExplicitSupportedLngs": true,
                  "nonExplicitWhitelist": false,
                  "ns": Array [],
                  "nsSeparator": ":",
                  "overloadTranslationOptionHandler": [Function],
                  "parseMissingKeyHandler": false,
                  "partialBundledLanguages": false,
                  "pluralSeparator": "_",
                  "postProcess": false,
                  "postProcessPassResolved": false,
                  "preload": false,
                  "resources": Object {
                    "de": Object {},
                    "en": Object {},
                    "fr": Object {},
                    "ru": Object {},
                    "uz": Object {},
                  },
                  "returnEmptyString": true,
                  "returnNull": true,
                  "returnObjects": false,
                  "returnedObjectHandler": false,
                  "saveMissing": false,
                  "saveMissingPlurals": true,
                  "saveMissingTo": "fallback",
                  "simplifyPluralSuffix": true,
                  "supportedLngs": Array [
                    "de",
                    "en",
                    "fr",
                    "ru",
                    "uz",
                    "cimode",
                  ],
                  "updateMissing": false,
                  "whitelist": false,
                },
                "prefix": "i18next:",
              },
              "pluralResolver": PluralResolver {
                "languageUtils": LanguageUtil {
                  "logger": Logger {
                    "debug": true,
                    "logger": Object {
                      "error": [Function],
                      "log": [Function],
                      "output": [Function],
                      "type": "logger",
                      "warn": [Function],
                    },
                    "options": Object {
                      "appendNamespaceToCIMode": false,
                      "appendNamespaceToMissingKey": false,
                      "contextSeparator": "_",
                      "debug": true,
                      "defaultNS": "translation",
                      "fallbackLng": Array [
                        "en",
                      ],
                      "fallbackNS": false,
                      "initImmediate": false,
                      "interpolation": Object {
                        "escapeValue": false,
                      },
                      "joinArrays": false,
                      "keySeparator": ".",
                      "load": "all",
                      "missingInterpolationHandler": false,
                      "missingKeyHandler": false,
                      "nonExplicitSupportedLngs": true,
                      "nonExplicitWhitelist": false,
                      "ns": Array [],
                      "nsSeparator": ":",
                      "overloadTranslationOptionHandler": [Function],
                      "parseMissingKeyHandler": false,
                      "partialBundledLanguages": false,
                      "pluralSeparator": "_",
                      "postProcess": false,
                      "postProcessPassResolved": false,
                      "prefix": "i18next::languageUtils:",
                      "preload": false,
                      "resources": Object {
                        "de": Object {},
                        "en": Object {},
                        "fr": Object {},
                        "ru": Object {},
                        "uz": Object {},
                      },
                      "returnEmptyString": true,
                      "returnNull": true,
                      "returnObjects": false,
                      "returnedObjectHandler": false,
                      "saveMissing": false,
                      "saveMissingPlurals": true,
                      "saveMissingTo": "fallback",
                      "simplifyPluralSuffix": true,
                      "supportedLngs": Array [
                        "de",
                        "en",
                        "fr",
                        "ru",
                        "uz",
                        "cimode",
                      ],
                      "updateMissing": false,
                      "whitelist": false,
                    },
                    "prefix": "i18next::languageUtils:",
                  },
                  "options": Object {
                    "appendNamespaceToCIMode": false,
                    "appendNamespaceToMissingKey": false,
                    "contextSeparator": "_",
                    "debug": true,
                    "defaultNS": "translation",
                    "fallbackLng": Array [
                      "en",
                    ],
                    "fallbackNS": false,
                    "initImmediate": false,
                    "interpolation": Object {
                      "escapeValue": false,
                    },
                    "joinArrays": false,
                    "keySeparator": ".",
                    "load": "all",
                    "missingInterpolationHandler": false,
                    "missingKeyHandler": false,
                    "nonExplicitSupportedLngs": true,
                    "nonExplicitWhitelist": false,
                    "ns": Array [],
                    "nsSeparator": ":",
                    "overloadTranslationOptionHandler": [Function],
                    "parseMissingKeyHandler": false,
                    "partialBundledLanguages": false,
                    "pluralSeparator": "_",
                    "postProcess": false,
                    "postProcessPassResolved": false,
                    "preload": false,
                    "resources": Object {
                      "de": Object {},
                      "en": Object {},
                      "fr": Object {},
                      "ru": Object {},
                      "uz": Object {},
                    },
                    "returnEmptyString": true,
                    "returnNull": true,
                    "returnObjects": false,
                    "returnedObjectHandler": false,
                    "saveMissing": false,
                    "saveMissingPlurals": true,
                    "saveMissingTo": "fallback",
                    "simplifyPluralSuffix": true,
                    "supportedLngs": Array [
                      "de",
                      "en",
                      "fr",
                      "ru",
                      "uz",
                      "cimode",
                    ],
                    "updateMissing": false,
                    "whitelist": false,
                  },
                  "supportedLngs": Array [
                    "de",
                    "en",
                    "fr",
                    "ru",
                    "uz",
                    "cimode",
                  ],
                  "whitelist": Array [
                    "de",
                    "en",
                    "fr",
                    "ru",
                    "uz",
                    "cimode",
                  ],
                },
                "logger": Logger {
                  "debug": true,
                  "logger": Object {
                    "error": [Function],
                    "log": [Function],
                    "output": [Function],
                    "type": "logger",
                    "warn": [Function],
                  },
                  "options": Object {
                    "appendNamespaceToCIMode": false,
                    "appendNamespaceToMissingKey": false,
                    "contextSeparator": "_",
                    "debug": true,
                    "defaultNS": "translation",
                    "fallbackLng": Array [
                      "en",
                    ],
                    "fallbackNS": false,
                    "initImmediate": false,
                    "interpolation": Object {
                      "escapeValue": false,
                    },
                    "joinArrays": false,
                    "keySeparator": ".",
                    "load": "all",
                    "missingInterpolationHandler": false,
                    "missingKeyHandler": false,
                    "nonExplicitSupportedLngs": true,
                    "nonExplicitWhitelist": false,
                    "ns": Array [],
                    "nsSeparator": ":",
                    "overloadTranslationOptionHandler": [Function],
                    "parseMissingKeyHandler": false,
                    "partialBundledLanguages": false,
                    "pluralSeparator": "_",
                    "postProcess": false,
                    "postProcessPassResolved": false,
                    "prefix": "i18next::pluralResolver:",
                    "preload": false,
                    "resources": Object {
                      "de": Object {},
                      "en": Object {},
                      "fr": Object {},
                      "ru": Object {},
                      "uz": Object {},
                    },
                    "returnEmptyString": true,
                    "returnNull": true,
                    "returnObjects": false,
                    "returnedObjectHandler": false,
                    "saveMissing": false,
                    "saveMissingPlurals": true,
                    "saveMissingTo": "fallback",
                    "simplifyPluralSuffix": true,
                    "supportedLngs": Array [
                      "de",
                      "en",
                      "fr",
                      "ru",
                      "uz",
                      "cimode",
                    ],
                    "updateMissing": false,
                    "whitelist": false,
                  },
                  "prefix": "i18next::pluralResolver:",
                },
                "options": Object {
                  "compatibilityJSON": undefined,
                  "prepend": "_",
                  "simplifyPluralSuffix": true,
                },
                "rules": Object {
                  "ach": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "af": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "ak": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "am": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "an": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "ar": Object {
                    "numbers": Array [
                      0,
                      1,
                      2,
                      3,
                      11,
                      100,
                    ],
                    "plurals": [Function],
                  },
                  "arn": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "ast": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "ay": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "az": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "be": Object {
                    "numbers": Array [
                      1,
                      2,
                      5,
                    ],
                    "plurals": [Function],
                  },
                  "bg": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "bn": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "bo": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "br": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "bs": Object {
                    "numbers": Array [
                      1,
                      2,
                      5,
                    ],
                    "plurals": [Function],
                  },
                  "ca": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "cgg": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "cnr": Object {
                    "numbers": Array [
                      1,
                      2,
                      5,
                    ],
                    "plurals": [Function],
                  },
                  "cs": Object {
                    "numbers": Array [
                      1,
                      2,
                      5,
                    ],
                    "plurals": [Function],
                  },
                  "csb": Object {
                    "numbers": Array [
                      1,
                      2,
                      5,
                    ],
                    "plurals": [Function],
                  },
                  "cy": Object {
                    "numbers": Array [
                      1,
                      2,
                      3,
                      8,
                    ],
                    "plurals": [Function],
                  },
                  "da": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "de": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "dev": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "dz": Object {
                    "numbers": Array [
                      1,
                      2,
                      5,
                    ],
                    "plurals": [Function],
                  },
                  "el": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "en": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "eo": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "es": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "et": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "eu": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "fa": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "fi": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "fil": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "fo": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "fr": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "fur": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "fy": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "ga": Object {
                    "numbers": Array [
                      1,
                      2,
                      3,
                      7,
                      11,
                    ],
                    "plurals": [Function],
                  },
                  "gd": Object {
                    "numbers": Array [
                      1,
                      2,
                      3,
                      20,
                    ],
                    "plurals": [Function],
                  },
                  "gl": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "gu": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "gun": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "ha": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "he": Object {
                    "numbers": Array [
                      1,
                      2,
                      20,
                      21,
                    ],
                    "plurals": [Function],
                  },
                  "hi": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "hr": Object {
                    "numbers": Array [
                      1,
                      2,
                      5,
                    ],
                    "plurals": [Function],
                  },
                  "ht": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "hu": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "hy": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "ia": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "id": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "is": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "it": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "iw": Object {
                    "numbers": Array [
                      1,
                      2,
                      20,
                      21,
                    ],
                    "plurals": [Function],
                  },
                  "ja": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "jbo": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "jv": Object {
                    "numbers": Array [
                      0,
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "ka": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "kk": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "km": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "kn": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "ko": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "ku": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "kw": Object {
                    "numbers": Array [
                      1,
                      2,
                      3,
                      4,
                    ],
                    "plurals": [Function],
                  },
                  "ky": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "lb": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "ln": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "lo": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "lt": Object {
                    "numbers": Array [
                      1,
                      2,
                      10,
                    ],
                    "plurals": [Function],
                  },
                  "lv": Object {
                    "numbers": Array [
                      1,
                      2,
                      0,
                    ],
                    "plurals": [Function],
                  },
                  "mai": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "mfe": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "mg": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "mi": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "mk": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "ml": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "mn": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "mnk": Object {
                    "numbers": Array [
                      0,
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "mr": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "ms": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "mt": Object {
                    "numbers": Array [
                      1,
                      2,
                      11,
                      20,
                    ],
                    "plurals": [Function],
                  },
                  "nah": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "nap": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "nb": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "ne": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "nl": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "nn": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "no": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "nso": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "oc": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "or": Object {
                    "numbers": Array [
                      2,
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "pa": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "pap": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "pl": Object {
                    "numbers": Array [
                      1,
                      2,
                      5,
                    ],
                    "plurals": [Function],
                  },
                  "pms": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "ps": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "pt": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "pt-BR": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "pt-PT": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "rm": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "ro": Object {
                    "numbers": Array [
                      1,
                      2,
                      20,
                    ],
                    "plurals": [Function],
                  },
                  "ru": Object {
                    "numbers": Array [
                      1,
                      2,
                      5,
                    ],
                    "plurals": [Function],
                  },
                  "sah": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "sco": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "se": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "si": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "sk": Object {
                    "numbers": Array [
                      1,
                      2,
                      5,
                    ],
                    "plurals": [Function],
                  },
                  "sl": Object {
                    "numbers": Array [
                      5,
                      1,
                      2,
                      3,
                    ],
                    "plurals": [Function],
                  },
                  "so": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "son": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "sq": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "sr": Object {
                    "numbers": Array [
                      1,
                      2,
                      5,
                    ],
                    "plurals": [Function],
                  },
                  "su": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "sv": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "sw": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "ta": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "te": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "tg": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "th": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "ti": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "tk": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "tr": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "tt": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "ug": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "uk": Object {
                    "numbers": Array [
                      1,
                      2,
                      5,
                    ],
                    "plurals": [Function],
                  },
                  "ur": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "uz": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "vi": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "wa": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "wo": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "yo": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "zh": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                },
              },
              "resourceStore": Object {
                "de": Object {},
                "en": Object {},
                "fr": Object {},
                "ru": Object {},
                "uz": Object {},
              },
              "utils": Object {
                "hasLoadedNamespace": [Function],
              },
            },
            "store": Object {
              "de": Object {},
              "en": Object {},
              "fr": Object {},
              "ru": Object {},
              "uz": Object {},
            },
            "translator": Translator {
              "backendConnector": Connector {
                "backend": null,
                "languageUtils": LanguageUtil {
                  "logger": Logger {
                    "debug": true,
                    "logger": Object {
                      "error": [Function],
                      "log": [Function],
                      "output": [Function],
                      "type": "logger",
                      "warn": [Function],
                    },
                    "options": Object {
                      "appendNamespaceToCIMode": false,
                      "appendNamespaceToMissingKey": false,
                      "contextSeparator": "_",
                      "debug": true,
                      "defaultNS": "translation",
                      "fallbackLng": Array [
                        "en",
                      ],
                      "fallbackNS": false,
                      "initImmediate": false,
                      "interpolation": Object {
                        "escapeValue": false,
                      },
                      "joinArrays": false,
                      "keySeparator": ".",
                      "load": "all",
                      "missingInterpolationHandler": false,
                      "missingKeyHandler": false,
                      "nonExplicitSupportedLngs": true,
                      "nonExplicitWhitelist": false,
                      "ns": Array [],
                      "nsSeparator": ":",
                      "overloadTranslationOptionHandler": [Function],
                      "parseMissingKeyHandler": false,
                      "partialBundledLanguages": false,
                      "pluralSeparator": "_",
                      "postProcess": false,
                      "postProcessPassResolved": false,
                      "prefix": "i18next::languageUtils:",
                      "preload": false,
                      "resources": Object {
                        "de": Object {},
                        "en": Object {},
                        "fr": Object {},
                        "ru": Object {},
                        "uz": Object {},
                      },
                      "returnEmptyString": true,
                      "returnNull": true,
                      "returnObjects": false,
                      "returnedObjectHandler": false,
                      "saveMissing": false,
                      "saveMissingPlurals": true,
                      "saveMissingTo": "fallback",
                      "simplifyPluralSuffix": true,
                      "supportedLngs": Array [
                        "de",
                        "en",
                        "fr",
                        "ru",
                        "uz",
                        "cimode",
                      ],
                      "updateMissing": false,
                      "whitelist": false,
                    },
                    "prefix": "i18next::languageUtils:",
                  },
                  "options": Object {
                    "appendNamespaceToCIMode": false,
                    "appendNamespaceToMissingKey": false,
                    "contextSeparator": "_",
                    "debug": true,
                    "defaultNS": "translation",
                    "fallbackLng": Array [
                      "en",
                    ],
                    "fallbackNS": false,
                    "initImmediate": false,
                    "interpolation": Object {
                      "escapeValue": false,
                    },
                    "joinArrays": false,
                    "keySeparator": ".",
                    "load": "all",
                    "missingInterpolationHandler": false,
                    "missingKeyHandler": false,
                    "nonExplicitSupportedLngs": true,
                    "nonExplicitWhitelist": false,
                    "ns": Array [],
                    "nsSeparator": ":",
                    "overloadTranslationOptionHandler": [Function],
                    "parseMissingKeyHandler": false,
                    "partialBundledLanguages": false,
                    "pluralSeparator": "_",
                    "postProcess": false,
                    "postProcessPassResolved": false,
                    "preload": false,
                    "resources": Object {
                      "de": Object {},
                      "en": Object {},
                      "fr": Object {},
                      "ru": Object {},
                      "uz": Object {},
                    },
                    "returnEmptyString": true,
                    "returnNull": true,
                    "returnObjects": false,
                    "returnedObjectHandler": false,
                    "saveMissing": false,
                    "saveMissingPlurals": true,
                    "saveMissingTo": "fallback",
                    "simplifyPluralSuffix": true,
                    "supportedLngs": Array [
                      "de",
                      "en",
                      "fr",
                      "ru",
                      "uz",
                      "cimode",
                    ],
                    "updateMissing": false,
                    "whitelist": false,
                  },
                  "supportedLngs": Array [
                    "de",
                    "en",
                    "fr",
                    "ru",
                    "uz",
                    "cimode",
                  ],
                  "whitelist": Array [
                    "de",
                    "en",
                    "fr",
                    "ru",
                    "uz",
                    "cimode",
                  ],
                },
                "logger": Logger {
                  "debug": true,
                  "logger": Object {
                    "error": [Function],
                    "log": [Function],
                    "output": [Function],
                    "type": "logger",
                    "warn": [Function],
                  },
                  "options": Object {
                    "appendNamespaceToCIMode": false,
                    "appendNamespaceToMissingKey": false,
                    "contextSeparator": "_",
                    "debug": true,
                    "defaultNS": "translation",
                    "fallbackLng": Array [
                      "en",
                    ],
                    "fallbackNS": false,
                    "initImmediate": false,
                    "interpolation": Object {
                      "escapeValue": false,
                    },
                    "joinArrays": false,
                    "keySeparator": ".",
                    "load": "all",
                    "missingInterpolationHandler": false,
                    "missingKeyHandler": false,
                    "nonExplicitSupportedLngs": true,
                    "nonExplicitWhitelist": false,
                    "ns": Array [],
                    "nsSeparator": ":",
                    "overloadTranslationOptionHandler": [Function],
                    "parseMissingKeyHandler": false,
                    "partialBundledLanguages": false,
                    "pluralSeparator": "_",
                    "postProcess": false,
                    "postProcessPassResolved": false,
                    "prefix": "i18next::backendConnector:",
                    "preload": false,
                    "resources": Object {
                      "de": Object {},
                      "en": Object {},
                      "fr": Object {},
                      "ru": Object {},
                      "uz": Object {},
                    },
                    "returnEmptyString": true,
                    "returnNull": true,
                    "returnObjects": false,
                    "returnedObjectHandler": false,
                    "saveMissing": false,
                    "saveMissingPlurals": true,
                    "saveMissingTo": "fallback",
                    "simplifyPluralSuffix": true,
                    "supportedLngs": Array [
                      "de",
                      "en",
                      "fr",
                      "ru",
                      "uz",
                      "cimode",
                    ],
                    "updateMissing": false,
                    "whitelist": false,
                  },
                  "prefix": "i18next::backendConnector:",
                },
                "observers": Object {
                  "*": Array [
                    [Function],
                  ],
                },
                "options": Object {
                  "appendNamespaceToCIMode": false,
                  "appendNamespaceToMissingKey": false,
                  "contextSeparator": "_",
                  "debug": true,
                  "defaultNS": "translation",
                  "fallbackLng": Array [
                    "en",
                  ],
                  "fallbackNS": false,
                  "initImmediate": false,
                  "interpolation": Object {
                    "escapeValue": false,
                  },
                  "joinArrays": false,
                  "keySeparator": ".",
                  "load": "all",
                  "missingInterpolationHandler": false,
                  "missingKeyHandler": false,
                  "nonExplicitSupportedLngs": true,
                  "nonExplicitWhitelist": false,
                  "ns": Array [],
                  "nsSeparator": ":",
                  "overloadTranslationOptionHandler": [Function],
                  "parseMissingKeyHandler": false,
                  "partialBundledLanguages": false,
                  "pluralSeparator": "_",
                  "postProcess": false,
                  "postProcessPassResolved": false,
                  "preload": false,
                  "resources": Object {
                    "de": Object {},
                    "en": Object {},
                    "fr": Object {},
                    "ru": Object {},
                    "uz": Object {},
                  },
                  "returnEmptyString": true,
                  "returnNull": true,
                  "returnObjects": false,
                  "returnedObjectHandler": false,
                  "saveMissing": false,
                  "saveMissingPlurals": true,
                  "saveMissingTo": "fallback",
                  "simplifyPluralSuffix": true,
                  "supportedLngs": Array [
                    "de",
                    "en",
                    "fr",
                    "ru",
                    "uz",
                    "cimode",
                  ],
                  "updateMissing": false,
                  "whitelist": false,
                },
                "queue": Array [],
                "services": Object {
                  "backendConnector": [Circular],
                  "interpolator": Interpolator {
                    "alwaysFormat": false,
                    "escape": [Function],
                    "escapeValue": false,
                    "format": [Function],
                    "formatSeparator": ",",
                    "logger": Logger {
                      "debug": true,
                      "logger": Object {
                        "error": [Function],
                        "log": [Function],
                        "output": [Function],
                        "type": "logger",
                        "warn": [Function],
                      },
                      "options": Object {
                        "appendNamespaceToCIMode": false,
                        "appendNamespaceToMissingKey": false,
                        "contextSeparator": "_",
                        "debug": true,
                        "defaultNS": "translation",
                        "fallbackLng": Array [
                          "en",
                        ],
                        "fallbackNS": false,
                        "initImmediate": false,
                        "interpolation": Object {
                          "escapeValue": false,
                        },
                        "joinArrays": false,
                        "keySeparator": ".",
                        "load": "all",
                        "missingInterpolationHandler": false,
                        "missingKeyHandler": false,
                        "nonExplicitSupportedLngs": true,
                        "nonExplicitWhitelist": false,
                        "ns": Array [],
                        "nsSeparator": ":",
                        "overloadTranslationOptionHandler": [Function],
                        "parseMissingKeyHandler": false,
                        "partialBundledLanguages": false,
                        "pluralSeparator": "_",
                        "postProcess": false,
                        "postProcessPassResolved": false,
                        "prefix": "i18next::interpolator:",
                        "preload": false,
                        "resources": Object {
                          "de": Object {},
                          "en": Object {},
                          "fr": Object {},
                          "ru": Object {},
                          "uz": Object {},
                        },
                        "returnEmptyString": true,
                        "returnNull": true,
                        "returnObjects": false,
                        "returnedObjectHandler": false,
                        "saveMissing": false,
                        "saveMissingPlurals": true,
                        "saveMissingTo": "fallback",
                        "simplifyPluralSuffix": true,
                        "supportedLngs": Array [
                          "de",
                          "en",
                          "fr",
                          "ru",
                          "uz",
                          "cimode",
                        ],
                        "updateMissing": false,
                        "whitelist": false,
                      },
                      "prefix": "i18next::interpolator:",
                    },
                    "maxReplaces": 1000,
                    "nestingOptionsSeparator": ",",
                    "nestingPrefix": "\\\\$t\\\\(",
                    "nestingRegexp": /\\\\\\$t\\\\\\(\\(\\.\\+\\?\\)\\\\\\)/g,
                    "nestingSuffix": "\\\\)",
                    "options": Object {
                      "appendNamespaceToCIMode": false,
                      "appendNamespaceToMissingKey": false,
                      "contextSeparator": "_",
                      "debug": true,
                      "defaultNS": "translation",
                      "fallbackLng": Array [
                        "en",
                      ],
                      "fallbackNS": false,
                      "initImmediate": false,
                      "interpolation": Object {
                        "escapeValue": false,
                      },
                      "joinArrays": false,
                      "keySeparator": ".",
                      "load": "all",
                      "missingInterpolationHandler": false,
                      "missingKeyHandler": false,
                      "nonExplicitSupportedLngs": true,
                      "nonExplicitWhitelist": false,
                      "ns": Array [],
                      "nsSeparator": ":",
                      "overloadTranslationOptionHandler": [Function],
                      "parseMissingKeyHandler": false,
                      "partialBundledLanguages": false,
                      "pluralSeparator": "_",
                      "postProcess": false,
                      "postProcessPassResolved": false,
                      "preload": false,
                      "resources": Object {
                        "de": Object {},
                        "en": Object {},
                        "fr": Object {},
                        "ru": Object {},
                        "uz": Object {},
                      },
                      "returnEmptyString": true,
                      "returnNull": true,
                      "returnObjects": false,
                      "returnedObjectHandler": false,
                      "saveMissing": false,
                      "saveMissingPlurals": true,
                      "saveMissingTo": "fallback",
                      "simplifyPluralSuffix": true,
                      "supportedLngs": Array [
                        "de",
                        "en",
                        "fr",
                        "ru",
                        "uz",
                        "cimode",
                      ],
                      "updateMissing": false,
                      "whitelist": false,
                    },
                    "prefix": "{{",
                    "regexp": /\\{\\{\\(\\.\\+\\?\\)\\}\\}/g,
                    "regexpUnescape": /\\{\\{-\\(\\.\\+\\?\\)\\}\\}/g,
                    "suffix": "}}",
                    "unescapePrefix": "-",
                    "unescapeSuffix": "",
                    "useRawValueToEscape": false,
                  },
                  "languageDetector": Browser {
                    "detectors": Object {
                      "cookie": Object {
                        "cacheUserLanguage": [Function],
                        "lookup": [Function],
                        "name": "cookie",
                      },
                      "htmlTag": Object {
                        "lookup": [Function],
                        "name": "htmlTag",
                      },
                      "localStorage": Object {
                        "cacheUserLanguage": [Function],
                        "lookup": [Function],
                        "name": "localStorage",
                      },
                      "navigator": Object {
                        "lookup": [Function],
                        "name": "navigator",
                      },
                      "path": Object {
                        "lookup": [Function],
                        "name": "path",
                      },
                      "querystring": Object {
                        "lookup": [Function],
                        "name": "querystring",
                      },
                      "sessionStorage": Object {
                        "cacheUserLanguage": [Function],
                        "lookup": [Function],
                        "name": "sessionStorage",
                      },
                      "subdomain": Object {
                        "lookup": [Function],
                        "name": "subdomain",
                      },
                    },
                    "i18nOptions": Object {
                      "appendNamespaceToCIMode": false,
                      "appendNamespaceToMissingKey": false,
                      "contextSeparator": "_",
                      "debug": true,
                      "defaultNS": "translation",
                      "fallbackLng": Array [
                        "en",
                      ],
                      "fallbackNS": false,
                      "initImmediate": false,
                      "interpolation": Object {
                        "escapeValue": false,
                      },
                      "joinArrays": false,
                      "keySeparator": ".",
                      "load": "all",
                      "missingInterpolationHandler": false,
                      "missingKeyHandler": false,
                      "nonExplicitSupportedLngs": true,
                      "nonExplicitWhitelist": false,
                      "ns": Array [],
                      "nsSeparator": ":",
                      "overloadTranslationOptionHandler": [Function],
                      "parseMissingKeyHandler": false,
                      "partialBundledLanguages": false,
                      "pluralSeparator": "_",
                      "postProcess": false,
                      "postProcessPassResolved": false,
                      "preload": false,
                      "resources": Object {
                        "de": Object {},
                        "en": Object {},
                        "fr": Object {},
                        "ru": Object {},
                        "uz": Object {},
                      },
                      "returnEmptyString": true,
                      "returnNull": true,
                      "returnObjects": false,
                      "returnedObjectHandler": false,
                      "saveMissing": false,
                      "saveMissingPlurals": true,
                      "saveMissingTo": "fallback",
                      "simplifyPluralSuffix": true,
                      "supportedLngs": Array [
                        "de",
                        "en",
                        "fr",
                        "ru",
                        "uz",
                        "cimode",
                      ],
                      "updateMissing": false,
                      "whitelist": false,
                    },
                    "options": Object {
                      "caches": Array [
                        "localStorage",
                      ],
                      "excludeCacheFor": Array [
                        "cimode",
                      ],
                      "lookupCookie": "i18next",
                      "lookupLocalStorage": "i18nextLng",
                      "lookupQuerystring": "lng",
                      "lookupSessionStorage": "i18nextLng",
                      "order": Array [
                        "querystring",
                        "cookie",
                        "localStorage",
                        "sessionStorage",
                        "navigator",
                        "htmlTag",
                      ],
                    },
                    "services": [Circular],
                    "type": "languageDetector",
                  },
                  "languageUtils": LanguageUtil {
                    "logger": Logger {
                      "debug": true,
                      "logger": Object {
                        "error": [Function],
                        "log": [Function],
                        "output": [Function],
                        "type": "logger",
                        "warn": [Function],
                      },
                      "options": Object {
                        "appendNamespaceToCIMode": false,
                        "appendNamespaceToMissingKey": false,
                        "contextSeparator": "_",
                        "debug": true,
                        "defaultNS": "translation",
                        "fallbackLng": Array [
                          "en",
                        ],
                        "fallbackNS": false,
                        "initImmediate": false,
                        "interpolation": Object {
                          "escapeValue": false,
                        },
                        "joinArrays": false,
                        "keySeparator": ".",
                        "load": "all",
                        "missingInterpolationHandler": false,
                        "missingKeyHandler": false,
                        "nonExplicitSupportedLngs": true,
                        "nonExplicitWhitelist": false,
                        "ns": Array [],
                        "nsSeparator": ":",
                        "overloadTranslationOptionHandler": [Function],
                        "parseMissingKeyHandler": false,
                        "partialBundledLanguages": false,
                        "pluralSeparator": "_",
                        "postProcess": false,
                        "postProcessPassResolved": false,
                        "prefix": "i18next::languageUtils:",
                        "preload": false,
                        "resources": Object {
                          "de": Object {},
                          "en": Object {},
                          "fr": Object {},
                          "ru": Object {},
                          "uz": Object {},
                        },
                        "returnEmptyString": true,
                        "returnNull": true,
                        "returnObjects": false,
                        "returnedObjectHandler": false,
                        "saveMissing": false,
                        "saveMissingPlurals": true,
                        "saveMissingTo": "fallback",
                        "simplifyPluralSuffix": true,
                        "supportedLngs": Array [
                          "de",
                          "en",
                          "fr",
                          "ru",
                          "uz",
                          "cimode",
                        ],
                        "updateMissing": false,
                        "whitelist": false,
                      },
                      "prefix": "i18next::languageUtils:",
                    },
                    "options": Object {
                      "appendNamespaceToCIMode": false,
                      "appendNamespaceToMissingKey": false,
                      "contextSeparator": "_",
                      "debug": true,
                      "defaultNS": "translation",
                      "fallbackLng": Array [
                        "en",
                      ],
                      "fallbackNS": false,
                      "initImmediate": false,
                      "interpolation": Object {
                        "escapeValue": false,
                      },
                      "joinArrays": false,
                      "keySeparator": ".",
                      "load": "all",
                      "missingInterpolationHandler": false,
                      "missingKeyHandler": false,
                      "nonExplicitSupportedLngs": true,
                      "nonExplicitWhitelist": false,
                      "ns": Array [],
                      "nsSeparator": ":",
                      "overloadTranslationOptionHandler": [Function],
                      "parseMissingKeyHandler": false,
                      "partialBundledLanguages": false,
                      "pluralSeparator": "_",
                      "postProcess": false,
                      "postProcessPassResolved": false,
                      "preload": false,
                      "resources": Object {
                        "de": Object {},
                        "en": Object {},
                        "fr": Object {},
                        "ru": Object {},
                        "uz": Object {},
                      },
                      "returnEmptyString": true,
                      "returnNull": true,
                      "returnObjects": false,
                      "returnedObjectHandler": false,
                      "saveMissing": false,
                      "saveMissingPlurals": true,
                      "saveMissingTo": "fallback",
                      "simplifyPluralSuffix": true,
                      "supportedLngs": Array [
                        "de",
                        "en",
                        "fr",
                        "ru",
                        "uz",
                        "cimode",
                      ],
                      "updateMissing": false,
                      "whitelist": false,
                    },
                    "supportedLngs": Array [
                      "de",
                      "en",
                      "fr",
                      "ru",
                      "uz",
                      "cimode",
                    ],
                    "whitelist": Array [
                      "de",
                      "en",
                      "fr",
                      "ru",
                      "uz",
                      "cimode",
                    ],
                  },
                  "logger": Logger {
                    "debug": true,
                    "logger": Object {
                      "error": [Function],
                      "log": [Function],
                      "output": [Function],
                      "type": "logger",
                      "warn": [Function],
                    },
                    "options": Object {
                      "appendNamespaceToCIMode": false,
                      "appendNamespaceToMissingKey": false,
                      "contextSeparator": "_",
                      "debug": true,
                      "defaultNS": "translation",
                      "fallbackLng": Array [
                        "en",
                      ],
                      "fallbackNS": false,
                      "initImmediate": false,
                      "interpolation": Object {
                        "escapeValue": false,
                      },
                      "joinArrays": false,
                      "keySeparator": ".",
                      "load": "all",
                      "missingInterpolationHandler": false,
                      "missingKeyHandler": false,
                      "nonExplicitSupportedLngs": true,
                      "nonExplicitWhitelist": false,
                      "ns": Array [],
                      "nsSeparator": ":",
                      "overloadTranslationOptionHandler": [Function],
                      "parseMissingKeyHandler": false,
                      "partialBundledLanguages": false,
                      "pluralSeparator": "_",
                      "postProcess": false,
                      "postProcessPassResolved": false,
                      "preload": false,
                      "resources": Object {
                        "de": Object {},
                        "en": Object {},
                        "fr": Object {},
                        "ru": Object {},
                        "uz": Object {},
                      },
                      "returnEmptyString": true,
                      "returnNull": true,
                      "returnObjects": false,
                      "returnedObjectHandler": false,
                      "saveMissing": false,
                      "saveMissingPlurals": true,
                      "saveMissingTo": "fallback",
                      "simplifyPluralSuffix": true,
                      "supportedLngs": Array [
                        "de",
                        "en",
                        "fr",
                        "ru",
                        "uz",
                        "cimode",
                      ],
                      "updateMissing": false,
                      "whitelist": false,
                    },
                    "prefix": "i18next:",
                  },
                  "pluralResolver": PluralResolver {
                    "languageUtils": LanguageUtil {
                      "logger": Logger {
                        "debug": true,
                        "logger": Object {
                          "error": [Function],
                          "log": [Function],
                          "output": [Function],
                          "type": "logger",
                          "warn": [Function],
                        },
                        "options": Object {
                          "appendNamespaceToCIMode": false,
                          "appendNamespaceToMissingKey": false,
                          "contextSeparator": "_",
                          "debug": true,
                          "defaultNS": "translation",
                          "fallbackLng": Array [
                            "en",
                          ],
                          "fallbackNS": false,
                          "initImmediate": false,
                          "interpolation": Object {
                            "escapeValue": false,
                          },
                          "joinArrays": false,
                          "keySeparator": ".",
                          "load": "all",
                          "missingInterpolationHandler": false,
                          "missingKeyHandler": false,
                          "nonExplicitSupportedLngs": true,
                          "nonExplicitWhitelist": false,
                          "ns": Array [],
                          "nsSeparator": ":",
                          "overloadTranslationOptionHandler": [Function],
                          "parseMissingKeyHandler": false,
                          "partialBundledLanguages": false,
                          "pluralSeparator": "_",
                          "postProcess": false,
                          "postProcessPassResolved": false,
                          "prefix": "i18next::languageUtils:",
                          "preload": false,
                          "resources": Object {
                            "de": Object {},
                            "en": Object {},
                            "fr": Object {},
                            "ru": Object {},
                            "uz": Object {},
                          },
                          "returnEmptyString": true,
                          "returnNull": true,
                          "returnObjects": false,
                          "returnedObjectHandler": false,
                          "saveMissing": false,
                          "saveMissingPlurals": true,
                          "saveMissingTo": "fallback",
                          "simplifyPluralSuffix": true,
                          "supportedLngs": Array [
                            "de",
                            "en",
                            "fr",
                            "ru",
                            "uz",
                            "cimode",
                          ],
                          "updateMissing": false,
                          "whitelist": false,
                        },
                        "prefix": "i18next::languageUtils:",
                      },
                      "options": Object {
                        "appendNamespaceToCIMode": false,
                        "appendNamespaceToMissingKey": false,
                        "contextSeparator": "_",
                        "debug": true,
                        "defaultNS": "translation",
                        "fallbackLng": Array [
                          "en",
                        ],
                        "fallbackNS": false,
                        "initImmediate": false,
                        "interpolation": Object {
                          "escapeValue": false,
                        },
                        "joinArrays": false,
                        "keySeparator": ".",
                        "load": "all",
                        "missingInterpolationHandler": false,
                        "missingKeyHandler": false,
                        "nonExplicitSupportedLngs": true,
                        "nonExplicitWhitelist": false,
                        "ns": Array [],
                        "nsSeparator": ":",
                        "overloadTranslationOptionHandler": [Function],
                        "parseMissingKeyHandler": false,
                        "partialBundledLanguages": false,
                        "pluralSeparator": "_",
                        "postProcess": false,
                        "postProcessPassResolved": false,
                        "preload": false,
                        "resources": Object {
                          "de": Object {},
                          "en": Object {},
                          "fr": Object {},
                          "ru": Object {},
                          "uz": Object {},
                        },
                        "returnEmptyString": true,
                        "returnNull": true,
                        "returnObjects": false,
                        "returnedObjectHandler": false,
                        "saveMissing": false,
                        "saveMissingPlurals": true,
                        "saveMissingTo": "fallback",
                        "simplifyPluralSuffix": true,
                        "supportedLngs": Array [
                          "de",
                          "en",
                          "fr",
                          "ru",
                          "uz",
                          "cimode",
                        ],
                        "updateMissing": false,
                        "whitelist": false,
                      },
                      "supportedLngs": Array [
                        "de",
                        "en",
                        "fr",
                        "ru",
                        "uz",
                        "cimode",
                      ],
                      "whitelist": Array [
                        "de",
                        "en",
                        "fr",
                        "ru",
                        "uz",
                        "cimode",
                      ],
                    },
                    "logger": Logger {
                      "debug": true,
                      "logger": Object {
                        "error": [Function],
                        "log": [Function],
                        "output": [Function],
                        "type": "logger",
                        "warn": [Function],
                      },
                      "options": Object {
                        "appendNamespaceToCIMode": false,
                        "appendNamespaceToMissingKey": false,
                        "contextSeparator": "_",
                        "debug": true,
                        "defaultNS": "translation",
                        "fallbackLng": Array [
                          "en",
                        ],
                        "fallbackNS": false,
                        "initImmediate": false,
                        "interpolation": Object {
                          "escapeValue": false,
                        },
                        "joinArrays": false,
                        "keySeparator": ".",
                        "load": "all",
                        "missingInterpolationHandler": false,
                        "missingKeyHandler": false,
                        "nonExplicitSupportedLngs": true,
                        "nonExplicitWhitelist": false,
                        "ns": Array [],
                        "nsSeparator": ":",
                        "overloadTranslationOptionHandler": [Function],
                        "parseMissingKeyHandler": false,
                        "partialBundledLanguages": false,
                        "pluralSeparator": "_",
                        "postProcess": false,
                        "postProcessPassResolved": false,
                        "prefix": "i18next::pluralResolver:",
                        "preload": false,
                        "resources": Object {
                          "de": Object {},
                          "en": Object {},
                          "fr": Object {},
                          "ru": Object {},
                          "uz": Object {},
                        },
                        "returnEmptyString": true,
                        "returnNull": true,
                        "returnObjects": false,
                        "returnedObjectHandler": false,
                        "saveMissing": false,
                        "saveMissingPlurals": true,
                        "saveMissingTo": "fallback",
                        "simplifyPluralSuffix": true,
                        "supportedLngs": Array [
                          "de",
                          "en",
                          "fr",
                          "ru",
                          "uz",
                          "cimode",
                        ],
                        "updateMissing": false,
                        "whitelist": false,
                      },
                      "prefix": "i18next::pluralResolver:",
                    },
                    "options": Object {
                      "compatibilityJSON": undefined,
                      "prepend": "_",
                      "simplifyPluralSuffix": true,
                    },
                    "rules": Object {
                      "ach": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "af": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "ak": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "am": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "an": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "ar": Object {
                        "numbers": Array [
                          0,
                          1,
                          2,
                          3,
                          11,
                          100,
                        ],
                        "plurals": [Function],
                      },
                      "arn": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "ast": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "ay": Object {
                        "numbers": Array [
                          1,
                        ],
                        "plurals": [Function],
                      },
                      "az": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "be": Object {
                        "numbers": Array [
                          1,
                          2,
                          5,
                        ],
                        "plurals": [Function],
                      },
                      "bg": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "bn": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "bo": Object {
                        "numbers": Array [
                          1,
                        ],
                        "plurals": [Function],
                      },
                      "br": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "bs": Object {
                        "numbers": Array [
                          1,
                          2,
                          5,
                        ],
                        "plurals": [Function],
                      },
                      "ca": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "cgg": Object {
                        "numbers": Array [
                          1,
                        ],
                        "plurals": [Function],
                      },
                      "cnr": Object {
                        "numbers": Array [
                          1,
                          2,
                          5,
                        ],
                        "plurals": [Function],
                      },
                      "cs": Object {
                        "numbers": Array [
                          1,
                          2,
                          5,
                        ],
                        "plurals": [Function],
                      },
                      "csb": Object {
                        "numbers": Array [
                          1,
                          2,
                          5,
                        ],
                        "plurals": [Function],
                      },
                      "cy": Object {
                        "numbers": Array [
                          1,
                          2,
                          3,
                          8,
                        ],
                        "plurals": [Function],
                      },
                      "da": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "de": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "dev": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "dz": Object {
                        "numbers": Array [
                          1,
                          2,
                          5,
                        ],
                        "plurals": [Function],
                      },
                      "el": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "en": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "eo": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "es": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "et": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "eu": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "fa": Object {
                        "numbers": Array [
                          1,
                        ],
                        "plurals": [Function],
                      },
                      "fi": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "fil": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "fo": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "fr": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "fur": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "fy": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "ga": Object {
                        "numbers": Array [
                          1,
                          2,
                          3,
                          7,
                          11,
                        ],
                        "plurals": [Function],
                      },
                      "gd": Object {
                        "numbers": Array [
                          1,
                          2,
                          3,
                          20,
                        ],
                        "plurals": [Function],
                      },
                      "gl": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "gu": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "gun": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "ha": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "he": Object {
                        "numbers": Array [
                          1,
                          2,
                          20,
                          21,
                        ],
                        "plurals": [Function],
                      },
                      "hi": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "hr": Object {
                        "numbers": Array [
                          1,
                          2,
                          5,
                        ],
                        "plurals": [Function],
                      },
                      "ht": Object {
                        "numbers": Array [
                          1,
                        ],
                        "plurals": [Function],
                      },
                      "hu": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "hy": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "ia": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "id": Object {
                        "numbers": Array [
                          1,
                        ],
                        "plurals": [Function],
                      },
                      "is": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "it": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "iw": Object {
                        "numbers": Array [
                          1,
                          2,
                          20,
                          21,
                        ],
                        "plurals": [Function],
                      },
                      "ja": Object {
                        "numbers": Array [
                          1,
                        ],
                        "plurals": [Function],
                      },
                      "jbo": Object {
                        "numbers": Array [
                          1,
                        ],
                        "plurals": [Function],
                      },
                      "jv": Object {
                        "numbers": Array [
                          0,
                          1,
                        ],
                        "plurals": [Function],
                      },
                      "ka": Object {
                        "numbers": Array [
                          1,
                        ],
                        "plurals": [Function],
                      },
                      "kk": Object {
                        "numbers": Array [
                          1,
                        ],
                        "plurals": [Function],
                      },
                      "km": Object {
                        "numbers": Array [
                          1,
                        ],
                        "plurals": [Function],
                      },
                      "kn": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "ko": Object {
                        "numbers": Array [
                          1,
                        ],
                        "plurals": [Function],
                      },
                      "ku": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "kw": Object {
                        "numbers": Array [
                          1,
                          2,
                          3,
                          4,
                        ],
                        "plurals": [Function],
                      },
                      "ky": Object {
                        "numbers": Array [
                          1,
                        ],
                        "plurals": [Function],
                      },
                      "lb": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "ln": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "lo": Object {
                        "numbers": Array [
                          1,
                        ],
                        "plurals": [Function],
                      },
                      "lt": Object {
                        "numbers": Array [
                          1,
                          2,
                          10,
                        ],
                        "plurals": [Function],
                      },
                      "lv": Object {
                        "numbers": Array [
                          1,
                          2,
                          0,
                        ],
                        "plurals": [Function],
                      },
                      "mai": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "mfe": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "mg": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "mi": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "mk": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "ml": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "mn": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "mnk": Object {
                        "numbers": Array [
                          0,
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "mr": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "ms": Object {
                        "numbers": Array [
                          1,
                        ],
                        "plurals": [Function],
                      },
                      "mt": Object {
                        "numbers": Array [
                          1,
                          2,
                          11,
                          20,
                        ],
                        "plurals": [Function],
                      },
                      "nah": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "nap": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "nb": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "ne": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "nl": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "nn": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "no": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "nso": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "oc": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "or": Object {
                        "numbers": Array [
                          2,
                          1,
                        ],
                        "plurals": [Function],
                      },
                      "pa": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "pap": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "pl": Object {
                        "numbers": Array [
                          1,
                          2,
                          5,
                        ],
                        "plurals": [Function],
                      },
                      "pms": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "ps": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "pt": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "pt-BR": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "pt-PT": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "rm": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "ro": Object {
                        "numbers": Array [
                          1,
                          2,
                          20,
                        ],
                        "plurals": [Function],
                      },
                      "ru": Object {
                        "numbers": Array [
                          1,
                          2,
                          5,
                        ],
                        "plurals": [Function],
                      },
                      "sah": Object {
                        "numbers": Array [
                          1,
                        ],
                        "plurals": [Function],
                      },
                      "sco": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "se": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "si": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "sk": Object {
                        "numbers": Array [
                          1,
                          2,
                          5,
                        ],
                        "plurals": [Function],
                      },
                      "sl": Object {
                        "numbers": Array [
                          5,
                          1,
                          2,
                          3,
                        ],
                        "plurals": [Function],
                      },
                      "so": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "son": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "sq": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "sr": Object {
                        "numbers": Array [
                          1,
                          2,
                          5,
                        ],
                        "plurals": [Function],
                      },
                      "su": Object {
                        "numbers": Array [
                          1,
                        ],
                        "plurals": [Function],
                      },
                      "sv": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "sw": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "ta": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "te": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "tg": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "th": Object {
                        "numbers": Array [
                          1,
                        ],
                        "plurals": [Function],
                      },
                      "ti": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "tk": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "tr": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "tt": Object {
                        "numbers": Array [
                          1,
                        ],
                        "plurals": [Function],
                      },
                      "ug": Object {
                        "numbers": Array [
                          1,
                        ],
                        "plurals": [Function],
                      },
                      "uk": Object {
                        "numbers": Array [
                          1,
                          2,
                          5,
                        ],
                        "plurals": [Function],
                      },
                      "ur": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "uz": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "vi": Object {
                        "numbers": Array [
                          1,
                        ],
                        "plurals": [Function],
                      },
                      "wa": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "wo": Object {
                        "numbers": Array [
                          1,
                        ],
                        "plurals": [Function],
                      },
                      "yo": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "zh": Object {
                        "numbers": Array [
                          1,
                        ],
                        "plurals": [Function],
                      },
                    },
                  },
                  "resourceStore": Object {
                    "de": Object {},
                    "en": Object {},
                    "fr": Object {},
                    "ru": Object {},
                    "uz": Object {},
                  },
                  "utils": Object {
                    "hasLoadedNamespace": [Function],
                  },
                },
                "state": Object {},
                "store": Object {
                  "de": Object {},
                  "en": Object {},
                  "fr": Object {},
                  "ru": Object {},
                  "uz": Object {},
                },
              },
              "interpolator": Interpolator {
                "alwaysFormat": false,
                "escape": [Function],
                "escapeValue": false,
                "format": [Function],
                "formatSeparator": ",",
                "logger": Logger {
                  "debug": true,
                  "logger": Object {
                    "error": [Function],
                    "log": [Function],
                    "output": [Function],
                    "type": "logger",
                    "warn": [Function],
                  },
                  "options": Object {
                    "appendNamespaceToCIMode": false,
                    "appendNamespaceToMissingKey": false,
                    "contextSeparator": "_",
                    "debug": true,
                    "defaultNS": "translation",
                    "fallbackLng": Array [
                      "en",
                    ],
                    "fallbackNS": false,
                    "initImmediate": false,
                    "interpolation": Object {
                      "escapeValue": false,
                    },
                    "joinArrays": false,
                    "keySeparator": ".",
                    "load": "all",
                    "missingInterpolationHandler": false,
                    "missingKeyHandler": false,
                    "nonExplicitSupportedLngs": true,
                    "nonExplicitWhitelist": false,
                    "ns": Array [],
                    "nsSeparator": ":",
                    "overloadTranslationOptionHandler": [Function],
                    "parseMissingKeyHandler": false,
                    "partialBundledLanguages": false,
                    "pluralSeparator": "_",
                    "postProcess": false,
                    "postProcessPassResolved": false,
                    "prefix": "i18next::interpolator:",
                    "preload": false,
                    "resources": Object {
                      "de": Object {},
                      "en": Object {},
                      "fr": Object {},
                      "ru": Object {},
                      "uz": Object {},
                    },
                    "returnEmptyString": true,
                    "returnNull": true,
                    "returnObjects": false,
                    "returnedObjectHandler": false,
                    "saveMissing": false,
                    "saveMissingPlurals": true,
                    "saveMissingTo": "fallback",
                    "simplifyPluralSuffix": true,
                    "supportedLngs": Array [
                      "de",
                      "en",
                      "fr",
                      "ru",
                      "uz",
                      "cimode",
                    ],
                    "updateMissing": false,
                    "whitelist": false,
                  },
                  "prefix": "i18next::interpolator:",
                },
                "maxReplaces": 1000,
                "nestingOptionsSeparator": ",",
                "nestingPrefix": "\\\\$t\\\\(",
                "nestingRegexp": /\\\\\\$t\\\\\\(\\(\\.\\+\\?\\)\\\\\\)/g,
                "nestingSuffix": "\\\\)",
                "options": Object {
                  "appendNamespaceToCIMode": false,
                  "appendNamespaceToMissingKey": false,
                  "contextSeparator": "_",
                  "debug": true,
                  "defaultNS": "translation",
                  "fallbackLng": Array [
                    "en",
                  ],
                  "fallbackNS": false,
                  "initImmediate": false,
                  "interpolation": Object {
                    "escapeValue": false,
                  },
                  "joinArrays": false,
                  "keySeparator": ".",
                  "load": "all",
                  "missingInterpolationHandler": false,
                  "missingKeyHandler": false,
                  "nonExplicitSupportedLngs": true,
                  "nonExplicitWhitelist": false,
                  "ns": Array [],
                  "nsSeparator": ":",
                  "overloadTranslationOptionHandler": [Function],
                  "parseMissingKeyHandler": false,
                  "partialBundledLanguages": false,
                  "pluralSeparator": "_",
                  "postProcess": false,
                  "postProcessPassResolved": false,
                  "preload": false,
                  "resources": Object {
                    "de": Object {},
                    "en": Object {},
                    "fr": Object {},
                    "ru": Object {},
                    "uz": Object {},
                  },
                  "returnEmptyString": true,
                  "returnNull": true,
                  "returnObjects": false,
                  "returnedObjectHandler": false,
                  "saveMissing": false,
                  "saveMissingPlurals": true,
                  "saveMissingTo": "fallback",
                  "simplifyPluralSuffix": true,
                  "supportedLngs": Array [
                    "de",
                    "en",
                    "fr",
                    "ru",
                    "uz",
                    "cimode",
                  ],
                  "updateMissing": false,
                  "whitelist": false,
                },
                "prefix": "{{",
                "regexp": /\\{\\{\\(\\.\\+\\?\\)\\}\\}/g,
                "regexpUnescape": /\\{\\{-\\(\\.\\+\\?\\)\\}\\}/g,
                "suffix": "}}",
                "unescapePrefix": "-",
                "unescapeSuffix": "",
                "useRawValueToEscape": false,
              },
              "language": "en",
              "languageUtils": LanguageUtil {
                "logger": Logger {
                  "debug": true,
                  "logger": Object {
                    "error": [Function],
                    "log": [Function],
                    "output": [Function],
                    "type": "logger",
                    "warn": [Function],
                  },
                  "options": Object {
                    "appendNamespaceToCIMode": false,
                    "appendNamespaceToMissingKey": false,
                    "contextSeparator": "_",
                    "debug": true,
                    "defaultNS": "translation",
                    "fallbackLng": Array [
                      "en",
                    ],
                    "fallbackNS": false,
                    "initImmediate": false,
                    "interpolation": Object {
                      "escapeValue": false,
                    },
                    "joinArrays": false,
                    "keySeparator": ".",
                    "load": "all",
                    "missingInterpolationHandler": false,
                    "missingKeyHandler": false,
                    "nonExplicitSupportedLngs": true,
                    "nonExplicitWhitelist": false,
                    "ns": Array [],
                    "nsSeparator": ":",
                    "overloadTranslationOptionHandler": [Function],
                    "parseMissingKeyHandler": false,
                    "partialBundledLanguages": false,
                    "pluralSeparator": "_",
                    "postProcess": false,
                    "postProcessPassResolved": false,
                    "prefix": "i18next::languageUtils:",
                    "preload": false,
                    "resources": Object {
                      "de": Object {},
                      "en": Object {},
                      "fr": Object {},
                      "ru": Object {},
                      "uz": Object {},
                    },
                    "returnEmptyString": true,
                    "returnNull": true,
                    "returnObjects": false,
                    "returnedObjectHandler": false,
                    "saveMissing": false,
                    "saveMissingPlurals": true,
                    "saveMissingTo": "fallback",
                    "simplifyPluralSuffix": true,
                    "supportedLngs": Array [
                      "de",
                      "en",
                      "fr",
                      "ru",
                      "uz",
                      "cimode",
                    ],
                    "updateMissing": false,
                    "whitelist": false,
                  },
                  "prefix": "i18next::languageUtils:",
                },
                "options": Object {
                  "appendNamespaceToCIMode": false,
                  "appendNamespaceToMissingKey": false,
                  "contextSeparator": "_",
                  "debug": true,
                  "defaultNS": "translation",
                  "fallbackLng": Array [
                    "en",
                  ],
                  "fallbackNS": false,
                  "initImmediate": false,
                  "interpolation": Object {
                    "escapeValue": false,
                  },
                  "joinArrays": false,
                  "keySeparator": ".",
                  "load": "all",
                  "missingInterpolationHandler": false,
                  "missingKeyHandler": false,
                  "nonExplicitSupportedLngs": true,
                  "nonExplicitWhitelist": false,
                  "ns": Array [],
                  "nsSeparator": ":",
                  "overloadTranslationOptionHandler": [Function],
                  "parseMissingKeyHandler": false,
                  "partialBundledLanguages": false,
                  "pluralSeparator": "_",
                  "postProcess": false,
                  "postProcessPassResolved": false,
                  "preload": false,
                  "resources": Object {
                    "de": Object {},
                    "en": Object {},
                    "fr": Object {},
                    "ru": Object {},
                    "uz": Object {},
                  },
                  "returnEmptyString": true,
                  "returnNull": true,
                  "returnObjects": false,
                  "returnedObjectHandler": false,
                  "saveMissing": false,
                  "saveMissingPlurals": true,
                  "saveMissingTo": "fallback",
                  "simplifyPluralSuffix": true,
                  "supportedLngs": Array [
                    "de",
                    "en",
                    "fr",
                    "ru",
                    "uz",
                    "cimode",
                  ],
                  "updateMissing": false,
                  "whitelist": false,
                },
                "supportedLngs": Array [
                  "de",
                  "en",
                  "fr",
                  "ru",
                  "uz",
                  "cimode",
                ],
                "whitelist": Array [
                  "de",
                  "en",
                  "fr",
                  "ru",
                  "uz",
                  "cimode",
                ],
              },
              "logger": Logger {
                "debug": true,
                "logger": Object {
                  "error": [Function],
                  "log": [Function],
                  "output": [Function],
                  "type": "logger",
                  "warn": [Function],
                },
                "options": Object {
                  "appendNamespaceToCIMode": false,
                  "appendNamespaceToMissingKey": false,
                  "contextSeparator": "_",
                  "debug": true,
                  "defaultNS": "translation",
                  "fallbackLng": Array [
                    "en",
                  ],
                  "fallbackNS": false,
                  "initImmediate": false,
                  "interpolation": Object {
                    "escapeValue": false,
                  },
                  "joinArrays": false,
                  "keySeparator": ".",
                  "load": "all",
                  "missingInterpolationHandler": false,
                  "missingKeyHandler": false,
                  "nonExplicitSupportedLngs": true,
                  "nonExplicitWhitelist": false,
                  "ns": Array [],
                  "nsSeparator": ":",
                  "overloadTranslationOptionHandler": [Function],
                  "parseMissingKeyHandler": false,
                  "partialBundledLanguages": false,
                  "pluralSeparator": "_",
                  "postProcess": false,
                  "postProcessPassResolved": false,
                  "prefix": "i18next::translator:",
                  "preload": false,
                  "resources": Object {
                    "de": Object {},
                    "en": Object {},
                    "fr": Object {},
                    "ru": Object {},
                    "uz": Object {},
                  },
                  "returnEmptyString": true,
                  "returnNull": true,
                  "returnObjects": false,
                  "returnedObjectHandler": false,
                  "saveMissing": false,
                  "saveMissingPlurals": true,
                  "saveMissingTo": "fallback",
                  "simplifyPluralSuffix": true,
                  "supportedLngs": Array [
                    "de",
                    "en",
                    "fr",
                    "ru",
                    "uz",
                    "cimode",
                  ],
                  "updateMissing": false,
                  "whitelist": false,
                },
                "prefix": "i18next::translator:",
              },
              "observers": Object {
                "*": Array [
                  [Function],
                ],
              },
              "options": Object {
                "appendNamespaceToCIMode": false,
                "appendNamespaceToMissingKey": false,
                "contextSeparator": "_",
                "debug": true,
                "defaultNS": "translation",
                "fallbackLng": Array [
                  "en",
                ],
                "fallbackNS": false,
                "initImmediate": false,
                "interpolation": Object {
                  "escapeValue": false,
                },
                "joinArrays": false,
                "keySeparator": ".",
                "load": "all",
                "missingInterpolationHandler": false,
                "missingKeyHandler": false,
                "nonExplicitSupportedLngs": true,
                "nonExplicitWhitelist": false,
                "ns": Array [],
                "nsSeparator": ":",
                "overloadTranslationOptionHandler": [Function],
                "parseMissingKeyHandler": false,
                "partialBundledLanguages": false,
                "pluralSeparator": "_",
                "postProcess": false,
                "postProcessPassResolved": false,
                "preload": false,
                "resources": Object {
                  "de": Object {},
                  "en": Object {},
                  "fr": Object {},
                  "ru": Object {},
                  "uz": Object {},
                },
                "returnEmptyString": true,
                "returnNull": true,
                "returnObjects": false,
                "returnedObjectHandler": false,
                "saveMissing": false,
                "saveMissingPlurals": true,
                "saveMissingTo": "fallback",
                "simplifyPluralSuffix": true,
                "supportedLngs": Array [
                  "de",
                  "en",
                  "fr",
                  "ru",
                  "uz",
                  "cimode",
                ],
                "updateMissing": false,
                "whitelist": false,
              },
              "pluralResolver": PluralResolver {
                "languageUtils": LanguageUtil {
                  "logger": Logger {
                    "debug": true,
                    "logger": Object {
                      "error": [Function],
                      "log": [Function],
                      "output": [Function],
                      "type": "logger",
                      "warn": [Function],
                    },
                    "options": Object {
                      "appendNamespaceToCIMode": false,
                      "appendNamespaceToMissingKey": false,
                      "contextSeparator": "_",
                      "debug": true,
                      "defaultNS": "translation",
                      "fallbackLng": Array [
                        "en",
                      ],
                      "fallbackNS": false,
                      "initImmediate": false,
                      "interpolation": Object {
                        "escapeValue": false,
                      },
                      "joinArrays": false,
                      "keySeparator": ".",
                      "load": "all",
                      "missingInterpolationHandler": false,
                      "missingKeyHandler": false,
                      "nonExplicitSupportedLngs": true,
                      "nonExplicitWhitelist": false,
                      "ns": Array [],
                      "nsSeparator": ":",
                      "overloadTranslationOptionHandler": [Function],
                      "parseMissingKeyHandler": false,
                      "partialBundledLanguages": false,
                      "pluralSeparator": "_",
                      "postProcess": false,
                      "postProcessPassResolved": false,
                      "prefix": "i18next::languageUtils:",
                      "preload": false,
                      "resources": Object {
                        "de": Object {},
                        "en": Object {},
                        "fr": Object {},
                        "ru": Object {},
                        "uz": Object {},
                      },
                      "returnEmptyString": true,
                      "returnNull": true,
                      "returnObjects": false,
                      "returnedObjectHandler": false,
                      "saveMissing": false,
                      "saveMissingPlurals": true,
                      "saveMissingTo": "fallback",
                      "simplifyPluralSuffix": true,
                      "supportedLngs": Array [
                        "de",
                        "en",
                        "fr",
                        "ru",
                        "uz",
                        "cimode",
                      ],
                      "updateMissing": false,
                      "whitelist": false,
                    },
                    "prefix": "i18next::languageUtils:",
                  },
                  "options": Object {
                    "appendNamespaceToCIMode": false,
                    "appendNamespaceToMissingKey": false,
                    "contextSeparator": "_",
                    "debug": true,
                    "defaultNS": "translation",
                    "fallbackLng": Array [
                      "en",
                    ],
                    "fallbackNS": false,
                    "initImmediate": false,
                    "interpolation": Object {
                      "escapeValue": false,
                    },
                    "joinArrays": false,
                    "keySeparator": ".",
                    "load": "all",
                    "missingInterpolationHandler": false,
                    "missingKeyHandler": false,
                    "nonExplicitSupportedLngs": true,
                    "nonExplicitWhitelist": false,
                    "ns": Array [],
                    "nsSeparator": ":",
                    "overloadTranslationOptionHandler": [Function],
                    "parseMissingKeyHandler": false,
                    "partialBundledLanguages": false,
                    "pluralSeparator": "_",
                    "postProcess": false,
                    "postProcessPassResolved": false,
                    "preload": false,
                    "resources": Object {
                      "de": Object {},
                      "en": Object {},
                      "fr": Object {},
                      "ru": Object {},
                      "uz": Object {},
                    },
                    "returnEmptyString": true,
                    "returnNull": true,
                    "returnObjects": false,
                    "returnedObjectHandler": false,
                    "saveMissing": false,
                    "saveMissingPlurals": true,
                    "saveMissingTo": "fallback",
                    "simplifyPluralSuffix": true,
                    "supportedLngs": Array [
                      "de",
                      "en",
                      "fr",
                      "ru",
                      "uz",
                      "cimode",
                    ],
                    "updateMissing": false,
                    "whitelist": false,
                  },
                  "supportedLngs": Array [
                    "de",
                    "en",
                    "fr",
                    "ru",
                    "uz",
                    "cimode",
                  ],
                  "whitelist": Array [
                    "de",
                    "en",
                    "fr",
                    "ru",
                    "uz",
                    "cimode",
                  ],
                },
                "logger": Logger {
                  "debug": true,
                  "logger": Object {
                    "error": [Function],
                    "log": [Function],
                    "output": [Function],
                    "type": "logger",
                    "warn": [Function],
                  },
                  "options": Object {
                    "appendNamespaceToCIMode": false,
                    "appendNamespaceToMissingKey": false,
                    "contextSeparator": "_",
                    "debug": true,
                    "defaultNS": "translation",
                    "fallbackLng": Array [
                      "en",
                    ],
                    "fallbackNS": false,
                    "initImmediate": false,
                    "interpolation": Object {
                      "escapeValue": false,
                    },
                    "joinArrays": false,
                    "keySeparator": ".",
                    "load": "all",
                    "missingInterpolationHandler": false,
                    "missingKeyHandler": false,
                    "nonExplicitSupportedLngs": true,
                    "nonExplicitWhitelist": false,
                    "ns": Array [],
                    "nsSeparator": ":",
                    "overloadTranslationOptionHandler": [Function],
                    "parseMissingKeyHandler": false,
                    "partialBundledLanguages": false,
                    "pluralSeparator": "_",
                    "postProcess": false,
                    "postProcessPassResolved": false,
                    "prefix": "i18next::pluralResolver:",
                    "preload": false,
                    "resources": Object {
                      "de": Object {},
                      "en": Object {},
                      "fr": Object {},
                      "ru": Object {},
                      "uz": Object {},
                    },
                    "returnEmptyString": true,
                    "returnNull": true,
                    "returnObjects": false,
                    "returnedObjectHandler": false,
                    "saveMissing": false,
                    "saveMissingPlurals": true,
                    "saveMissingTo": "fallback",
                    "simplifyPluralSuffix": true,
                    "supportedLngs": Array [
                      "de",
                      "en",
                      "fr",
                      "ru",
                      "uz",
                      "cimode",
                    ],
                    "updateMissing": false,
                    "whitelist": false,
                  },
                  "prefix": "i18next::pluralResolver:",
                },
                "options": Object {
                  "compatibilityJSON": undefined,
                  "prepend": "_",
                  "simplifyPluralSuffix": true,
                },
                "rules": Object {
                  "ach": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "af": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "ak": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "am": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "an": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "ar": Object {
                    "numbers": Array [
                      0,
                      1,
                      2,
                      3,
                      11,
                      100,
                    ],
                    "plurals": [Function],
                  },
                  "arn": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "ast": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "ay": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "az": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "be": Object {
                    "numbers": Array [
                      1,
                      2,
                      5,
                    ],
                    "plurals": [Function],
                  },
                  "bg": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "bn": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "bo": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "br": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "bs": Object {
                    "numbers": Array [
                      1,
                      2,
                      5,
                    ],
                    "plurals": [Function],
                  },
                  "ca": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "cgg": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "cnr": Object {
                    "numbers": Array [
                      1,
                      2,
                      5,
                    ],
                    "plurals": [Function],
                  },
                  "cs": Object {
                    "numbers": Array [
                      1,
                      2,
                      5,
                    ],
                    "plurals": [Function],
                  },
                  "csb": Object {
                    "numbers": Array [
                      1,
                      2,
                      5,
                    ],
                    "plurals": [Function],
                  },
                  "cy": Object {
                    "numbers": Array [
                      1,
                      2,
                      3,
                      8,
                    ],
                    "plurals": [Function],
                  },
                  "da": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "de": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "dev": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "dz": Object {
                    "numbers": Array [
                      1,
                      2,
                      5,
                    ],
                    "plurals": [Function],
                  },
                  "el": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "en": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "eo": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "es": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "et": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "eu": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "fa": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "fi": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "fil": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "fo": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "fr": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "fur": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "fy": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "ga": Object {
                    "numbers": Array [
                      1,
                      2,
                      3,
                      7,
                      11,
                    ],
                    "plurals": [Function],
                  },
                  "gd": Object {
                    "numbers": Array [
                      1,
                      2,
                      3,
                      20,
                    ],
                    "plurals": [Function],
                  },
                  "gl": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "gu": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "gun": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "ha": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "he": Object {
                    "numbers": Array [
                      1,
                      2,
                      20,
                      21,
                    ],
                    "plurals": [Function],
                  },
                  "hi": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "hr": Object {
                    "numbers": Array [
                      1,
                      2,
                      5,
                    ],
                    "plurals": [Function],
                  },
                  "ht": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "hu": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "hy": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "ia": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "id": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "is": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "it": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "iw": Object {
                    "numbers": Array [
                      1,
                      2,
                      20,
                      21,
                    ],
                    "plurals": [Function],
                  },
                  "ja": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "jbo": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "jv": Object {
                    "numbers": Array [
                      0,
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "ka": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "kk": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "km": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "kn": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "ko": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "ku": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "kw": Object {
                    "numbers": Array [
                      1,
                      2,
                      3,
                      4,
                    ],
                    "plurals": [Function],
                  },
                  "ky": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "lb": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "ln": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "lo": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "lt": Object {
                    "numbers": Array [
                      1,
                      2,
                      10,
                    ],
                    "plurals": [Function],
                  },
                  "lv": Object {
                    "numbers": Array [
                      1,
                      2,
                      0,
                    ],
                    "plurals": [Function],
                  },
                  "mai": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "mfe": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "mg": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "mi": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "mk": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "ml": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "mn": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "mnk": Object {
                    "numbers": Array [
                      0,
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "mr": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "ms": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "mt": Object {
                    "numbers": Array [
                      1,
                      2,
                      11,
                      20,
                    ],
                    "plurals": [Function],
                  },
                  "nah": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "nap": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "nb": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "ne": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "nl": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "nn": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "no": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "nso": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "oc": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "or": Object {
                    "numbers": Array [
                      2,
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "pa": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "pap": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "pl": Object {
                    "numbers": Array [
                      1,
                      2,
                      5,
                    ],
                    "plurals": [Function],
                  },
                  "pms": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "ps": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "pt": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "pt-BR": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "pt-PT": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "rm": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "ro": Object {
                    "numbers": Array [
                      1,
                      2,
                      20,
                    ],
                    "plurals": [Function],
                  },
                  "ru": Object {
                    "numbers": Array [
                      1,
                      2,
                      5,
                    ],
                    "plurals": [Function],
                  },
                  "sah": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "sco": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "se": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "si": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "sk": Object {
                    "numbers": Array [
                      1,
                      2,
                      5,
                    ],
                    "plurals": [Function],
                  },
                  "sl": Object {
                    "numbers": Array [
                      5,
                      1,
                      2,
                      3,
                    ],
                    "plurals": [Function],
                  },
                  "so": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "son": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "sq": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "sr": Object {
                    "numbers": Array [
                      1,
                      2,
                      5,
                    ],
                    "plurals": [Function],
                  },
                  "su": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "sv": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "sw": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "ta": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "te": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "tg": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "th": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "ti": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "tk": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "tr": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "tt": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "ug": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "uk": Object {
                    "numbers": Array [
                      1,
                      2,
                      5,
                    ],
                    "plurals": [Function],
                  },
                  "ur": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "uz": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "vi": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "wa": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "wo": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "yo": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "zh": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                },
              },
              "resourceStore": Object {
                "de": Object {},
                "en": Object {},
                "fr": Object {},
                "ru": Object {},
                "uz": Object {},
              },
              "utils": Object {
                "hasLoadedNamespace": [Function],
              },
            },
          }
        }
      >
        <Memo(MuiPickerUtils)>
          <MuiPickersUtilsProvider
            libInstance={[Function]}
            locale="en"
            utils={[Function]}
          >
            <Memo(ThemeProvider)
              defaultTheme={[Function]}
            >
              <ThemeProvider
                theme={
                  Object {
                    "breakpoints": Object {
                      "between": [Function],
                      "down": [Function],
                      "keys": Array [
                        "xs",
                        "sm",
                        "md",
                        "lg",
                        "xl",
                      ],
                      "only": [Function],
                      "up": [Function],
                      "values": Object {
                        "lg": 1280,
                        "md": 960,
                        "sm": 600,
                        "xl": 1920,
                        "xs": 0,
                      },
                      "width": [Function],
                    },
                    "direction": "ltr",
                    "mixins": Object {
                      "gutters": [Function],
                      "toolbar": Object {
                        "@media (min-width:0px) and (orientation: landscape)": Object {
                          "minHeight": 48,
                        },
                        "@media (min-width:600px)": Object {
                          "minHeight": 64,
                        },
                        "minHeight": 56,
                      },
                    },
                    "overrides": Object {},
                    "palette": Object {
                      "action": Object {
                        "activatedOpacity": 0.12,
                        "active": "rgba(0, 0, 0, 0.54)",
                        "disabled": "rgba(0, 0, 0, 0.26)",
                        "disabledBackground": "rgba(0, 0, 0, 0.12)",
                        "disabledOpacity": 0.38,
                        "focus": "rgba(0, 0, 0, 0.12)",
                        "focusOpacity": 0.12,
                        "hover": "rgba(0, 0, 0, 0.04)",
                        "hoverOpacity": 0.04,
                        "selected": "rgba(0, 0, 0, 0.08)",
                        "selectedOpacity": 0.08,
                      },
                      "augmentColor": [Function],
                      "background": Object {
                        "default": "#fafafa",
                        "paper": "#fff",
                      },
                      "common": Object {
                        "black": "#000",
                        "white": "#fff",
                      },
                      "contrastThreshold": 3,
                      "divider": "rgba(0, 0, 0, 0.12)",
                      "error": Object {
                        "contrastText": "#fff",
                        "dark": "#d32f2f",
                        "light": "#e57373",
                        "main": "#f44336",
                      },
                      "getContrastText": [Function],
                      "grey": Object {
                        "100": "#f5f5f5",
                        "200": "#eeeeee",
                        "300": "#e0e0e0",
                        "400": "#bdbdbd",
                        "50": "#fafafa",
                        "500": "#9e9e9e",
                        "600": "#757575",
                        "700": "#616161",
                        "800": "#424242",
                        "900": "#212121",
                        "A100": "#d5d5d5",
                        "A200": "#aaaaaa",
                        "A400": "#303030",
                        "A700": "#616161",
                      },
                      "info": Object {
                        "contrastText": "#fff",
                        "dark": "#1976d2",
                        "light": "#64b5f6",
                        "main": "#2196f3",
                      },
                      "primary": Object {
                        "contrastText": "#fff",
                        "dark": "rgb(44, 56, 126)",
                        "light": "rgb(101, 115, 195)",
                        "main": "#3f51b5",
                      },
                      "secondary": Object {
                        "contrastText": "#fff",
                        "dark": "rgb(171, 0, 60)",
                        "light": "rgb(247, 51, 120)",
                        "main": "#f50057",
                      },
                      "success": Object {
                        "contrastText": "rgba(0, 0, 0, 0.87)",
                        "dark": "#388e3c",
                        "light": "#81c784",
                        "main": "#4caf50",
                      },
                      "text": Object {
                        "disabled": "rgba(0, 0, 0, 0.38)",
                        "hint": "rgba(0, 0, 0, 0.38)",
                        "primary": "rgba(0, 0, 0, 0.87)",
                        "secondary": "rgba(0, 0, 0, 0.54)",
                      },
                      "tonalOffset": 0.2,
                      "type": "light",
                      "warning": Object {
                        "contrastText": "rgba(0, 0, 0, 0.87)",
                        "dark": "#f57c00",
                        "light": "#ffb74d",
                        "main": "#ff9800",
                      },
                    },
                    "props": Object {},
                    "shadows": Array [
                      "none",
                      "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                      "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                      "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                      "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                      "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                      "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                      "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                      "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                      "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                      "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                      "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                      "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                      "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                      "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                      "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                      "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                      "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                      "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                      "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                      "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                      "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                      "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                      "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                      "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                    ],
                    "shape": Object {
                      "borderRadius": 4,
                    },
                    "spacing": [Function],
                    "transitions": Object {
                      "create": [Function],
                      "duration": Object {
                        "complex": 375,
                        "enteringScreen": 225,
                        "leavingScreen": 195,
                        "short": 250,
                        "shorter": 200,
                        "shortest": 150,
                        "standard": 300,
                      },
                      "easing": Object {
                        "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                        "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                        "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                        "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                      },
                      "getAutoHeightDuration": [Function],
                    },
                    "typography": Object {
                      "body1": Object {
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "1rem",
                        "fontWeight": 400,
                        "letterSpacing": "0.00938em",
                        "lineHeight": 1.5,
                      },
                      "body2": Object {
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "0.875rem",
                        "fontWeight": 400,
                        "letterSpacing": "0.01071em",
                        "lineHeight": 1.43,
                      },
                      "button": Object {
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "0.875rem",
                        "fontWeight": 500,
                        "letterSpacing": "0.02857em",
                        "lineHeight": 1.75,
                        "textTransform": "uppercase",
                      },
                      "caption": Object {
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "0.75rem",
                        "fontWeight": 400,
                        "letterSpacing": "0.03333em",
                        "lineHeight": 1.66,
                      },
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": 14,
                      "fontWeightBold": 700,
                      "fontWeightLight": 300,
                      "fontWeightMedium": 500,
                      "fontWeightRegular": 400,
                      "h1": Object {
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "6rem",
                        "fontWeight": 300,
                        "letterSpacing": "-0.01562em",
                        "lineHeight": 1.167,
                      },
                      "h2": Object {
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "3.75rem",
                        "fontWeight": 300,
                        "letterSpacing": "-0.00833em",
                        "lineHeight": 1.2,
                      },
                      "h3": Object {
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "3rem",
                        "fontWeight": 400,
                        "letterSpacing": "0em",
                        "lineHeight": 1.167,
                      },
                      "h4": Object {
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "2.125rem",
                        "fontWeight": 400,
                        "letterSpacing": "0.00735em",
                        "lineHeight": 1.235,
                      },
                      "h5": Object {
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "1.5rem",
                        "fontWeight": 400,
                        "letterSpacing": "0em",
                        "lineHeight": 1.334,
                      },
                      "h6": Object {
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "1.25rem",
                        "fontWeight": 500,
                        "letterSpacing": "0.0075em",
                        "lineHeight": 1.6,
                      },
                      "htmlFontSize": 16,
                      "overline": Object {
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "0.75rem",
                        "fontWeight": 400,
                        "letterSpacing": "0.08333em",
                        "lineHeight": 2.66,
                        "textTransform": "uppercase",
                      },
                      "pxToRem": [Function],
                      "round": [Function],
                      "subtitle1": Object {
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "1rem",
                        "fontWeight": 400,
                        "letterSpacing": "0.00938em",
                        "lineHeight": 1.75,
                      },
                      "subtitle2": Object {
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "0.875rem",
                        "fontWeight": 500,
                        "letterSpacing": "0.00714em",
                        "lineHeight": 1.57,
                      },
                    },
                    "zIndex": Object {
                      "appBar": 1100,
                      "drawer": 1200,
                      "mobileStepper": 1000,
                      "modal": 1300,
                      "snackbar": 1400,
                      "speedDial": 1050,
                      "tooltip": 1500,
                    },
                    Symbol(mui.nested): false,
                  }
                }
              >
                <WithStyles(CssBaseline)>
                  <CssBaseline
                    classes={Object {}}
                  />
                </WithStyles(CssBaseline)>
                <QueryClientProvider
                  client={
                    QueryClient {
                      "defaultOptions": Object {},
                      "mutationCache": MutationCache {
                        "config": Object {},
                        "listeners": Array [],
                        "mutationId": 0,
                        "mutations": Array [],
                      },
                      "mutationDefaults": Array [],
                      "queryCache": QueryCache {
                        "config": Object {},
                        "listeners": Array [],
                        "queries": Array [],
                        "queriesMap": Object {},
                      },
                      "queryDefaults": Array [],
                      "unsubscribeFocus": [Function],
                      "unsubscribeOnline": [Function],
                    }
                  }
                >
                  <Memo(PermissionContextProvider)>
                    <Router
                      history={
                        Object {
                          "action": "POP",
                          "block": [Function],
                          "createHref": [Function],
                          "go": [Function],
                          "goBack": [Function],
                          "goForward": [Function],
                          "length": 1,
                          "listen": [Function],
                          "location": Object {
                            "hash": "",
                            "pathname": "/",
                            "search": "",
                            "state": undefined,
                          },
                          "push": [Function],
                          "replace": [Function],
                        }
                      }
                    >
                      <Memo(DialogContextProvider)>
                        <ThemeSelector>
                          <AdvThemeSelector>
                            <LanguageSelector />
                            <StylesProvider
                              generateClassName={[Function]}
                            >
                              <Component>
                                <DialogContent />
                              </Component>
                            </StylesProvider>
                          </AdvThemeSelector>
                        </ThemeSelector>
                        <Memo(ConfirmDialogRaw)
                          handlerButtonNo={[Function]}
                          handlerButtonYes={[Function]}
                          message="Enter your own text in Knobs!"
                          onClose={[Function]}
                          textButtonNo="No"
                          textButtonYes="Yes"
                          title="Storybook"
                        >
                          <Memo(InfoDialogRaw)
                            buttons={
                              Array [
                                Object {
                                  "autoFocus": true,
                                  "onClick": [Function],
                                  "text": "Yes",
                                },
                                Object {
                                  "autoFocus": false,
                                  "color": "secondary",
                                  "onClick": [Function],
                                  "text": "No",
                                },
                              ]
                            }
                            message="Enter your own text in Knobs!"
                            onClose={[Function]}
                            title="Storybook"
                          >
                            <Memo(ErrorDialogRaw)
                              buttons={
                                Array [
                                  Object {
                                    "autoFocus": true,
                                    "onClick": [Function],
                                    "text": "Yes",
                                  },
                                  Object {
                                    "autoFocus": false,
                                    "color": "secondary",
                                    "onClick": [Function],
                                    "text": "No",
                                  },
                                ]
                              }
                              message="Enter your own text in Knobs!"
                              onClose={[Function]}
                              title="Storybook"
                            >
                              <WithStyles(ForwardRef(Dialog))
                                onClose={[Function]}
                                open={true}
                              >
                                <ForwardRef(Dialog)
                                  classes={
                                    Object {
                                      "container": "MuiDialog-container",
                                      "paper": "MuiDialog-paper",
                                      "paperFullScreen": "MuiDialog-paperFullScreen",
                                      "paperFullWidth": "MuiDialog-paperFullWidth",
                                      "paperScrollBody": "MuiDialog-paperScrollBody",
                                      "paperScrollPaper": "MuiDialog-paperScrollPaper",
                                      "paperWidthFalse": "MuiDialog-paperWidthFalse",
                                      "paperWidthLg": "MuiDialog-paperWidthLg",
                                      "paperWidthMd": "MuiDialog-paperWidthMd",
                                      "paperWidthSm": "MuiDialog-paperWidthSm",
                                      "paperWidthXl": "MuiDialog-paperWidthXl",
                                      "paperWidthXs": "MuiDialog-paperWidthXs",
                                      "root": "MuiDialog-root",
                                      "scrollBody": "MuiDialog-scrollBody",
                                      "scrollPaper": "MuiDialog-scrollPaper",
                                    }
                                  }
                                  onClose={[Function]}
                                  open={true}
                                >
                                  <ForwardRef(Modal)
                                    BackdropComponent={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "Naked": Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "propTypes": Object {
                                            "children": [Function],
                                            "className": [Function],
                                            "classes": [Function],
                                            "invisible": [Function],
                                            "open": [Function],
                                            "transitionDuration": [Function],
                                          },
                                          "render": [Function],
                                        },
                                        "options": Object {
                                          "defaultTheme": Object {
                                            "breakpoints": Object {
                                              "between": [Function],
                                              "down": [Function],
                                              "keys": Array [
                                                "xs",
                                                "sm",
                                                "md",
                                                "lg",
                                                "xl",
                                              ],
                                              "only": [Function],
                                              "up": [Function],
                                              "values": Object {
                                                "lg": 1280,
                                                "md": 960,
                                                "sm": 600,
                                                "xl": 1920,
                                                "xs": 0,
                                              },
                                              "width": [Function],
                                            },
                                            "direction": "ltr",
                                            "mixins": Object {
                                              "gutters": [Function],
                                              "toolbar": Object {
                                                "@media (min-width:0px) and (orientation: landscape)": Object {
                                                  "minHeight": 48,
                                                },
                                                "@media (min-width:600px)": Object {
                                                  "minHeight": 64,
                                                },
                                                "minHeight": 56,
                                              },
                                            },
                                            "overrides": Object {},
                                            "palette": Object {
                                              "action": Object {
                                                "activatedOpacity": 0.12,
                                                "active": "rgba(0, 0, 0, 0.54)",
                                                "disabled": "rgba(0, 0, 0, 0.26)",
                                                "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                                "disabledOpacity": 0.38,
                                                "focus": "rgba(0, 0, 0, 0.12)",
                                                "focusOpacity": 0.12,
                                                "hover": "rgba(0, 0, 0, 0.04)",
                                                "hoverOpacity": 0.04,
                                                "selected": "rgba(0, 0, 0, 0.08)",
                                                "selectedOpacity": 0.08,
                                              },
                                              "augmentColor": [Function],
                                              "background": Object {
                                                "default": "#fafafa",
                                                "paper": "#fff",
                                              },
                                              "common": Object {
                                                "black": "#000",
                                                "white": "#fff",
                                              },
                                              "contrastThreshold": 3,
                                              "divider": "rgba(0, 0, 0, 0.12)",
                                              "error": Object {
                                                "contrastText": "#fff",
                                                "dark": "#d32f2f",
                                                "light": "#e57373",
                                                "main": "#f44336",
                                              },
                                              "getContrastText": [Function],
                                              "grey": Object {
                                                "100": "#f5f5f5",
                                                "200": "#eeeeee",
                                                "300": "#e0e0e0",
                                                "400": "#bdbdbd",
                                                "50": "#fafafa",
                                                "500": "#9e9e9e",
                                                "600": "#757575",
                                                "700": "#616161",
                                                "800": "#424242",
                                                "900": "#212121",
                                                "A100": "#d5d5d5",
                                                "A200": "#aaaaaa",
                                                "A400": "#303030",
                                                "A700": "#616161",
                                              },
                                              "info": Object {
                                                "contrastText": "#fff",
                                                "dark": "#1976d2",
                                                "light": "#64b5f6",
                                                "main": "#2196f3",
                                              },
                                              "primary": Object {
                                                "contrastText": "#fff",
                                                "dark": "#303f9f",
                                                "light": "#7986cb",
                                                "main": "#3f51b5",
                                              },
                                              "secondary": Object {
                                                "contrastText": "#fff",
                                                "dark": "#c51162",
                                                "light": "#ff4081",
                                                "main": "#f50057",
                                              },
                                              "success": Object {
                                                "contrastText": "rgba(0, 0, 0, 0.87)",
                                                "dark": "#388e3c",
                                                "light": "#81c784",
                                                "main": "#4caf50",
                                              },
                                              "text": Object {
                                                "disabled": "rgba(0, 0, 0, 0.38)",
                                                "hint": "rgba(0, 0, 0, 0.38)",
                                                "primary": "rgba(0, 0, 0, 0.87)",
                                                "secondary": "rgba(0, 0, 0, 0.54)",
                                              },
                                              "tonalOffset": 0.2,
                                              "type": "light",
                                              "warning": Object {
                                                "contrastText": "rgba(0, 0, 0, 0.87)",
                                                "dark": "#f57c00",
                                                "light": "#ffb74d",
                                                "main": "#ff9800",
                                              },
                                            },
                                            "props": Object {},
                                            "shadows": Array [
                                              "none",
                                              "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                              "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                              "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                              "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                              "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                              "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                              "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                              "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                              "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                              "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                              "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                              "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                              "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                              "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                              "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                              "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                              "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                              "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                            ],
                                            "shape": Object {
                                              "borderRadius": 4,
                                            },
                                            "spacing": [Function],
                                            "transitions": Object {
                                              "create": [Function],
                                              "duration": Object {
                                                "complex": 375,
                                                "enteringScreen": 225,
                                                "leavingScreen": 195,
                                                "short": 250,
                                                "shorter": 200,
                                                "shortest": 150,
                                                "standard": 300,
                                              },
                                              "easing": Object {
                                                "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                                "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                                "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                                "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                              },
                                              "getAutoHeightDuration": [Function],
                                            },
                                            "typography": Object {
                                              "body1": Object {
                                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                "fontSize": "1rem",
                                                "fontWeight": 400,
                                                "letterSpacing": "0.00938em",
                                                "lineHeight": 1.5,
                                              },
                                              "body2": Object {
                                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                "fontSize": "0.875rem",
                                                "fontWeight": 400,
                                                "letterSpacing": "0.01071em",
                                                "lineHeight": 1.43,
                                              },
                                              "button": Object {
                                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                "fontSize": "0.875rem",
                                                "fontWeight": 500,
                                                "letterSpacing": "0.02857em",
                                                "lineHeight": 1.75,
                                                "textTransform": "uppercase",
                                              },
                                              "caption": Object {
                                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                "fontSize": "0.75rem",
                                                "fontWeight": 400,
                                                "letterSpacing": "0.03333em",
                                                "lineHeight": 1.66,
                                              },
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": 14,
                                              "fontWeightBold": 700,
                                              "fontWeightLight": 300,
                                              "fontWeightMedium": 500,
                                              "fontWeightRegular": 400,
                                              "h1": Object {
                                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                "fontSize": "6rem",
                                                "fontWeight": 300,
                                                "letterSpacing": "-0.01562em",
                                                "lineHeight": 1.167,
                                              },
                                              "h2": Object {
                                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                "fontSize": "3.75rem",
                                                "fontWeight": 300,
                                                "letterSpacing": "-0.00833em",
                                                "lineHeight": 1.2,
                                              },
                                              "h3": Object {
                                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                "fontSize": "3rem",
                                                "fontWeight": 400,
                                                "letterSpacing": "0em",
                                                "lineHeight": 1.167,
                                              },
                                              "h4": Object {
                                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                "fontSize": "2.125rem",
                                                "fontWeight": 400,
                                                "letterSpacing": "0.00735em",
                                                "lineHeight": 1.235,
                                              },
                                              "h5": Object {
                                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                "fontSize": "1.5rem",
                                                "fontWeight": 400,
                                                "letterSpacing": "0em",
                                                "lineHeight": 1.334,
                                              },
                                              "h6": Object {
                                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                "fontSize": "1.25rem",
                                                "fontWeight": 500,
                                                "letterSpacing": "0.0075em",
                                                "lineHeight": 1.6,
                                              },
                                              "htmlFontSize": 16,
                                              "overline": Object {
                                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                "fontSize": "0.75rem",
                                                "fontWeight": 400,
                                                "letterSpacing": "0.08333em",
                                                "lineHeight": 2.66,
                                                "textTransform": "uppercase",
                                              },
                                              "pxToRem": [Function],
                                              "round": [Function],
                                              "subtitle1": Object {
                                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                "fontSize": "1rem",
                                                "fontWeight": 400,
                                                "letterSpacing": "0.00938em",
                                                "lineHeight": 1.75,
                                              },
                                              "subtitle2": Object {
                                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                "fontSize": "0.875rem",
                                                "fontWeight": 500,
                                                "letterSpacing": "0.00714em",
                                                "lineHeight": 1.57,
                                              },
                                            },
                                            "zIndex": Object {
                                              "appBar": 1100,
                                              "drawer": 1200,
                                              "mobileStepper": 1000,
                                              "modal": 1300,
                                              "snackbar": 1400,
                                              "speedDial": 1050,
                                              "tooltip": 1500,
                                            },
                                          },
                                          "name": "MuiBackdrop",
                                        },
                                        "propTypes": Object {
                                          "classes": [Function],
                                          "innerRef": [Function],
                                        },
                                        "render": [Function],
                                        "useStyles": [Function],
                                      }
                                    }
                                    BackdropProps={
                                      Object {
                                        "transitionDuration": Object {
                                          "enter": 225,
                                          "exit": 195,
                                        },
                                      }
                                    }
                                    className="MuiDialog-root"
                                    closeAfterTransition={true}
                                    disableBackdropClick={false}
                                    disableEscapeKeyDown={false}
                                    onClose={[Function]}
                                    open={true}
                                  >
                                    <ForwardRef(Portal)
                                      disablePortal={false}
                                    >
                                      <Portal
                                        containerInfo={
                                          <body
                                            style="padding-right: 0px; overflow: hidden;"
                                          >
                                            <div
                                              aria-hidden="true"
                                              class="app"
                                              id="app"
                                            />
                                            <div
                                              class="MuiDialog-root"
                                              role="presentation"
                                              style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px;"
                                            >
                                              <div
                                                aria-hidden="true"
                                                class="MuiBackdrop-root"
                                                style="opacity: 1; webkit-transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;"
                                              />
                                              <div
                                                data-test="sentinelStart"
                                                tabindex="0"
                                              />
                                              <div
                                                class="MuiDialog-container MuiDialog-scrollPaper"
                                                role="none presentation"
                                                style="opacity: 1; webkit-transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;"
                                                tabindex="-1"
                                              >
                                                <div
                                                  class="MuiPaper-root MuiDialog-paper MuiDialog-paperScrollPaper MuiDialog-paperWidthSm MuiPaper-elevation24 MuiPaper-rounded"
                                                  role="dialog"
                                                >
                                                  <div
                                                    class="MuiDialogTitle-root"
                                                  >
                                                    <h2
                                                      class="MuiTypography-root MuiTypography-h6"
                                                    >
                                                      Storybook
                                                    </h2>
                                                  </div>
                                                  <div
                                                    class="MuiDialogContent-root"
                                                  >
                                                    <p
                                                      class="MuiTypography-root MuiDialogContentText-root MuiTypography-body1 MuiTypography-colorTextSecondary"
                                                    >
                                                      Enter your own text in Knobs!
                                                    </p>
                                                  </div>
                                                  <div
                                                    class="MuiDialogActions-root MuiDialogActions-spacing"
                                                  >
                                                    <button
                                                      class="MuiButtonBase-root MuiButton-root MuiButton-text MuiButton-textPrimary Mui-focusVisible Mui-focusVisible"
                                                      tabindex="0"
                                                      type="button"
                                                    >
                                                      <span
                                                        class="MuiButton-label"
                                                      >
                                                        Yes
                                                      </span>
                                                      <span
                                                        class="MuiTouchRipple-root"
                                                      >
                                                        <span
                                                          class="MuiTouchRipple-ripple MuiTouchRipple-rippleVisible MuiTouchRipple-ripplePulsate"
                                                          style="width: 1px; height: 1px; top: -0.5px; left: -0.5px;"
                                                        >
                                                          <span
                                                            class="MuiTouchRipple-child MuiTouchRipple-childPulsate"
                                                          />
                                                        </span>
                                                      </span>
                                                    </button>
                                                    <button
                                                      class="MuiButtonBase-root MuiButton-root MuiButton-text MuiButton-textSecondary"
                                                      tabindex="0"
                                                      type="button"
                                                    >
                                                      <span
                                                        class="MuiButton-label"
                                                      >
                                                        No
                                                      </span>
                                                      <span
                                                        class="MuiTouchRipple-root"
                                                      />
                                                    </button>
                                                  </div>
                                                </div>
                                              </div>
                                              <div
                                                data-test="sentinelEnd"
                                                tabindex="0"
                                              />
                                            </div>
                                          </body>
                                        }
                                      >
                                        <div
                                          className="MuiDialog-root"
                                          onKeyDown={[Function]}
                                          role="presentation"
                                          style={
                                            Object {
                                              "bottom": 0,
                                              "left": 0,
                                              "position": "fixed",
                                              "right": 0,
                                              "top": 0,
                                              "zIndex": 1300,
                                            }
                                          }
                                        >
                                          <WithStyles(ForwardRef(Backdrop))
                                            onClick={[Function]}
                                            open={true}
                                            transitionDuration={
                                              Object {
                                                "enter": 225,
                                                "exit": 195,
                                              }
                                            }
                                          >
                                            <ForwardRef(Backdrop)
                                              classes={
                                                Object {
                                                  "invisible": "MuiBackdrop-invisible",
                                                  "root": "MuiBackdrop-root",
                                                }
                                              }
                                              onClick={[Function]}
                                              open={true}
                                              transitionDuration={
                                                Object {
                                                  "enter": 225,
                                                  "exit": 195,
                                                }
                                              }
                                            >
                                              <ForwardRef(Fade)
                                                in={true}
                                                onClick={[Function]}
                                                timeout={
                                                  Object {
                                                    "enter": 225,
                                                    "exit": 195,
                                                  }
                                                }
                                              >
                                                <Transition
                                                  appear={true}
                                                  enter={true}
                                                  exit={true}
                                                  in={true}
                                                  mountOnEnter={false}
                                                  onClick={[Function]}
                                                  onEnter={[Function]}
                                                  onEntered={[Function]}
                                                  onEntering={[Function]}
                                                  onExit={[Function]}
                                                  onExited={[Function]}
                                                  onExiting={[Function]}
                                                  timeout={
                                                    Object {
                                                      "enter": 225,
                                                      "exit": 195,
                                                    }
                                                  }
                                                  unmountOnExit={false}
                                                >
                                                  <div
                                                    aria-hidden={true}
                                                    className="MuiBackdrop-root"
                                                    onClick={[Function]}
                                                    style={
                                                      Object {
                                                        "opacity": 1,
                                                        "visibility": undefined,
                                                      }
                                                    }
                                                  />
                                                </Transition>
                                              </ForwardRef(Fade)>
                                            </ForwardRef(Backdrop)>
                                          </WithStyles(ForwardRef(Backdrop))>
                                          <Unstable_TrapFocus
                                            disableAutoFocus={false}
                                            disableEnforceFocus={false}
                                            disableRestoreFocus={false}
                                            getDoc={[Function]}
                                            isEnabled={[Function]}
                                            open={true}
                                          >
                                            <div
                                              data-test="sentinelStart"
                                              tabIndex={0}
                                            />
                                            <ForwardRef(Fade)
                                              appear={true}
                                              in={true}
                                              onEnter={[Function]}
                                              onExited={[Function]}
                                              role="none presentation"
                                              tabIndex="-1"
                                              timeout={
                                                Object {
                                                  "enter": 225,
                                                  "exit": 195,
                                                }
                                              }
                                            >
                                              <Transition
                                                appear={true}
                                                enter={true}
                                                exit={true}
                                                in={true}
                                                mountOnEnter={false}
                                                onEnter={[Function]}
                                                onEntered={[Function]}
                                                onEntering={[Function]}
                                                onExit={[Function]}
                                                onExited={[Function]}
                                                onExiting={[Function]}
                                                role="none presentation"
                                                tabIndex="-1"
                                                timeout={
                                                  Object {
                                                    "enter": 225,
                                                    "exit": 195,
                                                  }
                                                }
                                                unmountOnExit={false}
                                              >
                                                <div
                                                  className="MuiDialog-container MuiDialog-scrollPaper"
                                                  onMouseDown={[Function]}
                                                  onMouseUp={[Function]}
                                                  role="none presentation"
                                                  style={
                                                    Object {
                                                      "opacity": 1,
                                                      "visibility": undefined,
                                                    }
                                                  }
                                                  tabIndex="-1"
                                                >
                                                  <WithStyles(ForwardRef(Paper))
                                                    className="MuiDialog-paper MuiDialog-paperScrollPaper MuiDialog-paperWidthSm"
                                                    elevation={24}
                                                    role="dialog"
                                                  >
                                                    <ForwardRef(Paper)
                                                      className="MuiDialog-paper MuiDialog-paperScrollPaper MuiDialog-paperWidthSm"
                                                      classes={
                                                        Object {
                                                          "elevation0": "MuiPaper-elevation0",
                                                          "elevation1": "MuiPaper-elevation1",
                                                          "elevation10": "MuiPaper-elevation10",
                                                          "elevation11": "MuiPaper-elevation11",
                                                          "elevation12": "MuiPaper-elevation12",
                                                          "elevation13": "MuiPaper-elevation13",
                                                          "elevation14": "MuiPaper-elevation14",
                                                          "elevation15": "MuiPaper-elevation15",
                                                          "elevation16": "MuiPaper-elevation16",
                                                          "elevation17": "MuiPaper-elevation17",
                                                          "elevation18": "MuiPaper-elevation18",
                                                          "elevation19": "MuiPaper-elevation19",
                                                          "elevation2": "MuiPaper-elevation2",
                                                          "elevation20": "MuiPaper-elevation20",
                                                          "elevation21": "MuiPaper-elevation21",
                                                          "elevation22": "MuiPaper-elevation22",
                                                          "elevation23": "MuiPaper-elevation23",
                                                          "elevation24": "MuiPaper-elevation24",
                                                          "elevation3": "MuiPaper-elevation3",
                                                          "elevation4": "MuiPaper-elevation4",
                                                          "elevation5": "MuiPaper-elevation5",
                                                          "elevation6": "MuiPaper-elevation6",
                                                          "elevation7": "MuiPaper-elevation7",
                                                          "elevation8": "MuiPaper-elevation8",
                                                          "elevation9": "MuiPaper-elevation9",
                                                          "outlined": "MuiPaper-outlined",
                                                          "root": "MuiPaper-root",
                                                          "rounded": "MuiPaper-rounded",
                                                        }
                                                      }
                                                      elevation={24}
                                                      role="dialog"
                                                    >
                                                      <div
                                                        className="MuiPaper-root MuiDialog-paper MuiDialog-paperScrollPaper MuiDialog-paperWidthSm MuiPaper-elevation24 MuiPaper-rounded"
                                                        role="dialog"
                                                      >
                                                        <WithStyles(ForwardRef(DialogTitle))>
                                                          <ForwardRef(DialogTitle)
                                                            classes={
                                                              Object {
                                                                "root": "MuiDialogTitle-root",
                                                              }
                                                            }
                                                          >
                                                            <div
                                                              className="MuiDialogTitle-root"
                                                            >
                                                              <WithStyles(ForwardRef(Typography))
                                                                component="h2"
                                                                variant="h6"
                                                              >
                                                                <ForwardRef(Typography)
                                                                  classes={
                                                                    Object {
                                                                      "alignCenter": "MuiTypography-alignCenter",
                                                                      "alignJustify": "MuiTypography-alignJustify",
                                                                      "alignLeft": "MuiTypography-alignLeft",
                                                                      "alignRight": "MuiTypography-alignRight",
                                                                      "body1": "MuiTypography-body1",
                                                                      "body2": "MuiTypography-body2",
                                                                      "button": "MuiTypography-button",
                                                                      "caption": "MuiTypography-caption",
                                                                      "colorError": "MuiTypography-colorError",
                                                                      "colorInherit": "MuiTypography-colorInherit",
                                                                      "colorPrimary": "MuiTypography-colorPrimary",
                                                                      "colorSecondary": "MuiTypography-colorSecondary",
                                                                      "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                      "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                      "displayBlock": "MuiTypography-displayBlock",
                                                                      "displayInline": "MuiTypography-displayInline",
                                                                      "gutterBottom": "MuiTypography-gutterBottom",
                                                                      "h1": "MuiTypography-h1",
                                                                      "h2": "MuiTypography-h2",
                                                                      "h3": "MuiTypography-h3",
                                                                      "h4": "MuiTypography-h4",
                                                                      "h5": "MuiTypography-h5",
                                                                      "h6": "MuiTypography-h6",
                                                                      "noWrap": "MuiTypography-noWrap",
                                                                      "overline": "MuiTypography-overline",
                                                                      "paragraph": "MuiTypography-paragraph",
                                                                      "root": "MuiTypography-root",
                                                                      "srOnly": "MuiTypography-srOnly",
                                                                      "subtitle1": "MuiTypography-subtitle1",
                                                                      "subtitle2": "MuiTypography-subtitle2",
                                                                    }
                                                                  }
                                                                  component="h2"
                                                                  variant="h6"
                                                                >
                                                                  <h2
                                                                    className="MuiTypography-root MuiTypography-h6"
                                                                  >
                                                                    Storybook
                                                                  </h2>
                                                                </ForwardRef(Typography)>
                                                              </WithStyles(ForwardRef(Typography))>
                                                            </div>
                                                          </ForwardRef(DialogTitle)>
                                                        </WithStyles(ForwardRef(DialogTitle))>
                                                        <WithStyles(ForwardRef(DialogContent))>
                                                          <ForwardRef(DialogContent)
                                                            classes={
                                                              Object {
                                                                "dividers": "MuiDialogContent-dividers",
                                                                "root": "MuiDialogContent-root",
                                                              }
                                                            }
                                                          >
                                                            <div
                                                              className="MuiDialogContent-root"
                                                            >
                                                              <WithStyles(ForwardRef(DialogContentText))>
                                                                <ForwardRef(DialogContentText)
                                                                  classes={
                                                                    Object {
                                                                      "root": "MuiDialogContentText-root",
                                                                    }
                                                                  }
                                                                >
                                                                  <WithStyles(ForwardRef(Typography))
                                                                    classes={
                                                                      Object {
                                                                        "root": "MuiDialogContentText-root",
                                                                      }
                                                                    }
                                                                    color="textSecondary"
                                                                    component="p"
                                                                    variant="body1"
                                                                  >
                                                                    <ForwardRef(Typography)
                                                                      classes={
                                                                        Object {
                                                                          "alignCenter": "MuiTypography-alignCenter",
                                                                          "alignJustify": "MuiTypography-alignJustify",
                                                                          "alignLeft": "MuiTypography-alignLeft",
                                                                          "alignRight": "MuiTypography-alignRight",
                                                                          "body1": "MuiTypography-body1",
                                                                          "body2": "MuiTypography-body2",
                                                                          "button": "MuiTypography-button",
                                                                          "caption": "MuiTypography-caption",
                                                                          "colorError": "MuiTypography-colorError",
                                                                          "colorInherit": "MuiTypography-colorInherit",
                                                                          "colorPrimary": "MuiTypography-colorPrimary",
                                                                          "colorSecondary": "MuiTypography-colorSecondary",
                                                                          "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                          "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                          "displayBlock": "MuiTypography-displayBlock",
                                                                          "displayInline": "MuiTypography-displayInline",
                                                                          "gutterBottom": "MuiTypography-gutterBottom",
                                                                          "h1": "MuiTypography-h1",
                                                                          "h2": "MuiTypography-h2",
                                                                          "h3": "MuiTypography-h3",
                                                                          "h4": "MuiTypography-h4",
                                                                          "h5": "MuiTypography-h5",
                                                                          "h6": "MuiTypography-h6",
                                                                          "noWrap": "MuiTypography-noWrap",
                                                                          "overline": "MuiTypography-overline",
                                                                          "paragraph": "MuiTypography-paragraph",
                                                                          "root": "MuiTypography-root MuiDialogContentText-root",
                                                                          "srOnly": "MuiTypography-srOnly",
                                                                          "subtitle1": "MuiTypography-subtitle1",
                                                                          "subtitle2": "MuiTypography-subtitle2",
                                                                        }
                                                                      }
                                                                      color="textSecondary"
                                                                      component="p"
                                                                      variant="body1"
                                                                    >
                                                                      <p
                                                                        className="MuiTypography-root MuiDialogContentText-root MuiTypography-body1 MuiTypography-colorTextSecondary"
                                                                      >
                                                                        Enter your own text in Knobs!
                                                                      </p>
                                                                    </ForwardRef(Typography)>
                                                                  </WithStyles(ForwardRef(Typography))>
                                                                </ForwardRef(DialogContentText)>
                                                              </WithStyles(ForwardRef(DialogContentText))>
                                                            </div>
                                                          </ForwardRef(DialogContent)>
                                                        </WithStyles(ForwardRef(DialogContent))>
                                                        <WithStyles(ForwardRef(DialogActions))>
                                                          <ForwardRef(DialogActions)
                                                            classes={
                                                              Object {
                                                                "root": "MuiDialogActions-root",
                                                                "spacing": "MuiDialogActions-spacing",
                                                              }
                                                            }
                                                          >
                                                            <div
                                                              className="MuiDialogActions-root MuiDialogActions-spacing"
                                                            >
                                                              <WithStyles(ForwardRef(Button))
                                                                autoFocus={true}
                                                                color="primary"
                                                                key="0"
                                                                onClick={[Function]}
                                                              >
                                                                <ForwardRef(Button)
                                                                  autoFocus={true}
                                                                  classes={
                                                                    Object {
                                                                      "colorInherit": "MuiButton-colorInherit",
                                                                      "contained": "MuiButton-contained",
                                                                      "containedPrimary": "MuiButton-containedPrimary",
                                                                      "containedSecondary": "MuiButton-containedSecondary",
                                                                      "containedSizeLarge": "MuiButton-containedSizeLarge",
                                                                      "containedSizeSmall": "MuiButton-containedSizeSmall",
                                                                      "disableElevation": "MuiButton-disableElevation",
                                                                      "disabled": "Mui-disabled",
                                                                      "endIcon": "MuiButton-endIcon",
                                                                      "focusVisible": "Mui-focusVisible",
                                                                      "fullWidth": "MuiButton-fullWidth",
                                                                      "iconSizeLarge": "MuiButton-iconSizeLarge",
                                                                      "iconSizeMedium": "MuiButton-iconSizeMedium",
                                                                      "iconSizeSmall": "MuiButton-iconSizeSmall",
                                                                      "label": "MuiButton-label",
                                                                      "outlined": "MuiButton-outlined",
                                                                      "outlinedPrimary": "MuiButton-outlinedPrimary",
                                                                      "outlinedSecondary": "MuiButton-outlinedSecondary",
                                                                      "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                                                                      "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                                                                      "root": "MuiButton-root",
                                                                      "sizeLarge": "MuiButton-sizeLarge",
                                                                      "sizeSmall": "MuiButton-sizeSmall",
                                                                      "startIcon": "MuiButton-startIcon",
                                                                      "text": "MuiButton-text",
                                                                      "textPrimary": "MuiButton-textPrimary",
                                                                      "textSecondary": "MuiButton-textSecondary",
                                                                      "textSizeLarge": "MuiButton-textSizeLarge",
                                                                      "textSizeSmall": "MuiButton-textSizeSmall",
                                                                    }
                                                                  }
                                                                  color="primary"
                                                                  onClick={[Function]}
                                                                >
                                                                  <WithStyles(ForwardRef(ButtonBase))
                                                                    autoFocus={true}
                                                                    className="MuiButton-root MuiButton-text MuiButton-textPrimary"
                                                                    component="button"
                                                                    disabled={false}
                                                                    focusRipple={true}
                                                                    focusVisibleClassName="Mui-focusVisible"
                                                                    onClick={[Function]}
                                                                    type="button"
                                                                  >
                                                                    <ForwardRef(ButtonBase)
                                                                      autoFocus={true}
                                                                      className="MuiButton-root MuiButton-text MuiButton-textPrimary"
                                                                      classes={
                                                                        Object {
                                                                          "disabled": "Mui-disabled",
                                                                          "focusVisible": "Mui-focusVisible",
                                                                          "root": "MuiButtonBase-root",
                                                                        }
                                                                      }
                                                                      component="button"
                                                                      disabled={false}
                                                                      focusRipple={true}
                                                                      focusVisibleClassName="Mui-focusVisible"
                                                                      onClick={[Function]}
                                                                      type="button"
                                                                    >
                                                                      <button
                                                                        autoFocus={true}
                                                                        className="MuiButtonBase-root MuiButton-root MuiButton-text MuiButton-textPrimary Mui-focusVisible Mui-focusVisible"
                                                                        disabled={false}
                                                                        onBlur={[Function]}
                                                                        onClick={[Function]}
                                                                        onDragLeave={[Function]}
                                                                        onFocus={[Function]}
                                                                        onKeyDown={[Function]}
                                                                        onKeyUp={[Function]}
                                                                        onMouseDown={[Function]}
                                                                        onMouseLeave={[Function]}
                                                                        onMouseUp={[Function]}
                                                                        onTouchEnd={[Function]}
                                                                        onTouchMove={[Function]}
                                                                        onTouchStart={[Function]}
                                                                        tabIndex={0}
                                                                        type="button"
                                                                      >
                                                                        <span
                                                                          className="MuiButton-label"
                                                                        >
                                                                          Yes
                                                                        </span>
                                                                        <WithStyles(memo)
                                                                          center={false}
                                                                        >
                                                                          <ForwardRef(TouchRipple)
                                                                            center={false}
                                                                            classes={
                                                                              Object {
                                                                                "child": "MuiTouchRipple-child",
                                                                                "childLeaving": "MuiTouchRipple-childLeaving",
                                                                                "childPulsate": "MuiTouchRipple-childPulsate",
                                                                                "ripple": "MuiTouchRipple-ripple",
                                                                                "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                                "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                                "root": "MuiTouchRipple-root",
                                                                              }
                                                                            }
                                                                          >
                                                                            <span
                                                                              className="MuiTouchRipple-root"
                                                                            >
                                                                              <TransitionGroup
                                                                                childFactory={[Function]}
                                                                                component={null}
                                                                                exit={true}
                                                                              >
                                                                                <Ripple
                                                                                  classes={
                                                                                    Object {
                                                                                      "child": "MuiTouchRipple-child",
                                                                                      "childLeaving": "MuiTouchRipple-childLeaving",
                                                                                      "childPulsate": "MuiTouchRipple-childPulsate",
                                                                                      "ripple": "MuiTouchRipple-ripple",
                                                                                      "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                                      "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                                      "root": "MuiTouchRipple-root",
                                                                                    }
                                                                                  }
                                                                                  exit={true}
                                                                                  in={true}
                                                                                  key=".$0"
                                                                                  onExited={[Function]}
                                                                                  pulsate={true}
                                                                                  rippleSize={1}
                                                                                  rippleX={0}
                                                                                  rippleY={0}
                                                                                  timeout={550}
                                                                                >
                                                                                  <span
                                                                                    className="MuiTouchRipple-ripple MuiTouchRipple-rippleVisible MuiTouchRipple-ripplePulsate"
                                                                                    style={
                                                                                      Object {
                                                                                        "height": 1,
                                                                                        "left": -0.5,
                                                                                        "top": -0.5,
                                                                                        "width": 1,
                                                                                      }
                                                                                    }
                                                                                  >
                                                                                    <span
                                                                                      className="MuiTouchRipple-child MuiTouchRipple-childPulsate"
                                                                                    />
                                                                                  </span>
                                                                                </Ripple>
                                                                              </TransitionGroup>
                                                                            </span>
                                                                          </ForwardRef(TouchRipple)>
                                                                        </WithStyles(memo)>
                                                                      </button>
                                                                    </ForwardRef(ButtonBase)>
                                                                  </WithStyles(ForwardRef(ButtonBase))>
                                                                </ForwardRef(Button)>
                                                              </WithStyles(ForwardRef(Button))>
                                                              <WithStyles(ForwardRef(Button))
                                                                autoFocus={false}
                                                                color="secondary"
                                                                key="1"
                                                                onClick={[Function]}
                                                              >
                                                                <ForwardRef(Button)
                                                                  autoFocus={false}
                                                                  classes={
                                                                    Object {
                                                                      "colorInherit": "MuiButton-colorInherit",
                                                                      "contained": "MuiButton-contained",
                                                                      "containedPrimary": "MuiButton-containedPrimary",
                                                                      "containedSecondary": "MuiButton-containedSecondary",
                                                                      "containedSizeLarge": "MuiButton-containedSizeLarge",
                                                                      "containedSizeSmall": "MuiButton-containedSizeSmall",
                                                                      "disableElevation": "MuiButton-disableElevation",
                                                                      "disabled": "Mui-disabled",
                                                                      "endIcon": "MuiButton-endIcon",
                                                                      "focusVisible": "Mui-focusVisible",
                                                                      "fullWidth": "MuiButton-fullWidth",
                                                                      "iconSizeLarge": "MuiButton-iconSizeLarge",
                                                                      "iconSizeMedium": "MuiButton-iconSizeMedium",
                                                                      "iconSizeSmall": "MuiButton-iconSizeSmall",
                                                                      "label": "MuiButton-label",
                                                                      "outlined": "MuiButton-outlined",
                                                                      "outlinedPrimary": "MuiButton-outlinedPrimary",
                                                                      "outlinedSecondary": "MuiButton-outlinedSecondary",
                                                                      "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                                                                      "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                                                                      "root": "MuiButton-root",
                                                                      "sizeLarge": "MuiButton-sizeLarge",
                                                                      "sizeSmall": "MuiButton-sizeSmall",
                                                                      "startIcon": "MuiButton-startIcon",
                                                                      "text": "MuiButton-text",
                                                                      "textPrimary": "MuiButton-textPrimary",
                                                                      "textSecondary": "MuiButton-textSecondary",
                                                                      "textSizeLarge": "MuiButton-textSizeLarge",
                                                                      "textSizeSmall": "MuiButton-textSizeSmall",
                                                                    }
                                                                  }
                                                                  color="secondary"
                                                                  onClick={[Function]}
                                                                >
                                                                  <WithStyles(ForwardRef(ButtonBase))
                                                                    autoFocus={false}
                                                                    className="MuiButton-root MuiButton-text MuiButton-textSecondary"
                                                                    component="button"
                                                                    disabled={false}
                                                                    focusRipple={true}
                                                                    focusVisibleClassName="Mui-focusVisible"
                                                                    onClick={[Function]}
                                                                    type="button"
                                                                  >
                                                                    <ForwardRef(ButtonBase)
                                                                      autoFocus={false}
                                                                      className="MuiButton-root MuiButton-text MuiButton-textSecondary"
                                                                      classes={
                                                                        Object {
                                                                          "disabled": "Mui-disabled",
                                                                          "focusVisible": "Mui-focusVisible",
                                                                          "root": "MuiButtonBase-root",
                                                                        }
                                                                      }
                                                                      component="button"
                                                                      disabled={false}
                                                                      focusRipple={true}
                                                                      focusVisibleClassName="Mui-focusVisible"
                                                                      onClick={[Function]}
                                                                      type="button"
                                                                    >
                                                                      <button
                                                                        autoFocus={false}
                                                                        className="MuiButtonBase-root MuiButton-root MuiButton-text MuiButton-textSecondary"
                                                                        disabled={false}
                                                                        onBlur={[Function]}
                                                                        onClick={[Function]}
                                                                        onDragLeave={[Function]}
                                                                        onFocus={[Function]}
                                                                        onKeyDown={[Function]}
                                                                        onKeyUp={[Function]}
                                                                        onMouseDown={[Function]}
                                                                        onMouseLeave={[Function]}
                                                                        onMouseUp={[Function]}
                                                                        onTouchEnd={[Function]}
                                                                        onTouchMove={[Function]}
                                                                        onTouchStart={[Function]}
                                                                        tabIndex={0}
                                                                        type="button"
                                                                      >
                                                                        <span
                                                                          className="MuiButton-label"
                                                                        >
                                                                          No
                                                                        </span>
                                                                        <WithStyles(memo)
                                                                          center={false}
                                                                        >
                                                                          <ForwardRef(TouchRipple)
                                                                            center={false}
                                                                            classes={
                                                                              Object {
                                                                                "child": "MuiTouchRipple-child",
                                                                                "childLeaving": "MuiTouchRipple-childLeaving",
                                                                                "childPulsate": "MuiTouchRipple-childPulsate",
                                                                                "ripple": "MuiTouchRipple-ripple",
                                                                                "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                                "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                                "root": "MuiTouchRipple-root",
                                                                              }
                                                                            }
                                                                          >
                                                                            <span
                                                                              className="MuiTouchRipple-root"
                                                                            >
                                                                              <TransitionGroup
                                                                                childFactory={[Function]}
                                                                                component={null}
                                                                                exit={true}
                                                                              />
                                                                            </span>
                                                                          </ForwardRef(TouchRipple)>
                                                                        </WithStyles(memo)>
                                                                      </button>
                                                                    </ForwardRef(ButtonBase)>
                                                                  </WithStyles(ForwardRef(ButtonBase))>
                                                                </ForwardRef(Button)>
                                                              </WithStyles(ForwardRef(Button))>
                                                            </div>
                                                          </ForwardRef(DialogActions)>
                                                        </WithStyles(ForwardRef(DialogActions))>
                                                      </div>
                                                    </ForwardRef(Paper)>
                                                  </WithStyles(ForwardRef(Paper))>
                                                </div>
                                              </Transition>
                                            </ForwardRef(Fade)>
                                            <div
                                              data-test="sentinelEnd"
                                              tabIndex={0}
                                            />
                                          </Unstable_TrapFocus>
                                        </div>
                                      </Portal>
                                    </ForwardRef(Portal)>
                                  </ForwardRef(Modal)>
                                </ForwardRef(Dialog)>
                              </WithStyles(ForwardRef(Dialog))>
                            </Memo(ErrorDialogRaw)>
                          </Memo(InfoDialogRaw)>
                        </Memo(ConfirmDialogRaw)>
                      </Memo(DialogContextProvider)>
                    </Router>
                  </Memo(PermissionContextProvider)>
                </QueryClientProvider>
              </ThemeProvider>
            </Memo(ThemeProvider)>
          </MuiPickersUtilsProvider>
        </Memo(MuiPickerUtils)>
      </I18nextProvider>
    </Memo(CCI18nProvider)>
  </Suspense>
</Memo(ComponentsCareFramework)>
`;

exports[`Storyshots Non-Standalone/Dialog Error 1`] = `
<Memo(ComponentsCareFramework)
  defaultTheme={[Function]}
>
  <Suspense
    fallback={<Memo(Loader) />}
  >
    <Memo(CCI18nProvider)>
      <I18nextProvider
        defaultNS="translation"
        i18n={
          I18n {
            "addResource": [Function],
            "addResourceBundle": [Function],
            "addResources": [Function],
            "format": undefined,
            "getDataByLanguage": [Function],
            "getResource": [Function],
            "getResourceBundle": [Function],
            "hasResourceBundle": [Function],
            "isInitialized": true,
            "isLanguageChangingTo": undefined,
            "language": "en",
            "languages": Array [
              "en",
            ],
            "logger": Logger {
              "debug": true,
              "logger": Object {
                "error": [Function],
                "log": [Function],
                "output": [Function],
                "type": "logger",
                "warn": [Function],
              },
              "options": Object {
                "appendNamespaceToCIMode": false,
                "appendNamespaceToMissingKey": false,
                "contextSeparator": "_",
                "debug": true,
                "defaultNS": "translation",
                "fallbackLng": Array [
                  "en",
                ],
                "fallbackNS": false,
                "initImmediate": false,
                "interpolation": Object {
                  "escapeValue": false,
                },
                "joinArrays": false,
                "keySeparator": ".",
                "load": "all",
                "missingInterpolationHandler": false,
                "missingKeyHandler": false,
                "nonExplicitSupportedLngs": true,
                "nonExplicitWhitelist": false,
                "ns": Array [],
                "nsSeparator": ":",
                "overloadTranslationOptionHandler": [Function],
                "parseMissingKeyHandler": false,
                "partialBundledLanguages": false,
                "pluralSeparator": "_",
                "postProcess": false,
                "postProcessPassResolved": false,
                "preload": false,
                "resources": Object {
                  "de": Object {},
                  "en": Object {},
                  "fr": Object {},
                  "ru": Object {},
                  "uz": Object {},
                },
                "returnEmptyString": true,
                "returnNull": true,
                "returnObjects": false,
                "returnedObjectHandler": false,
                "saveMissing": false,
                "saveMissingPlurals": true,
                "saveMissingTo": "fallback",
                "simplifyPluralSuffix": true,
                "supportedLngs": Array [
                  "de",
                  "en",
                  "fr",
                  "ru",
                  "uz",
                  "cimode",
                ],
                "updateMissing": false,
                "whitelist": false,
              },
              "prefix": "i18next:",
            },
            "modules": Object {
              "external": Array [],
              "languageDetector": [Function],
            },
            "observers": Object {
              "languageChanged": Array [
                [Function],
                [Function],
              ],
            },
            "options": Object {
              "appendNamespaceToCIMode": false,
              "appendNamespaceToMissingKey": false,
              "contextSeparator": "_",
              "debug": true,
              "defaultNS": "translation",
              "fallbackLng": Array [
                "en",
              ],
              "fallbackNS": false,
              "initImmediate": false,
              "interpolation": Object {
                "escapeValue": false,
              },
              "joinArrays": false,
              "keySeparator": ".",
              "load": "all",
              "missingInterpolationHandler": false,
              "missingKeyHandler": false,
              "nonExplicitSupportedLngs": true,
              "nonExplicitWhitelist": false,
              "ns": Array [],
              "nsSeparator": ":",
              "overloadTranslationOptionHandler": [Function],
              "parseMissingKeyHandler": false,
              "partialBundledLanguages": false,
              "pluralSeparator": "_",
              "postProcess": false,
              "postProcessPassResolved": false,
              "preload": false,
              "resources": Object {
                "de": Object {},
                "en": Object {},
                "fr": Object {},
                "ru": Object {},
                "uz": Object {},
              },
              "returnEmptyString": true,
              "returnNull": true,
              "returnObjects": false,
              "returnedObjectHandler": false,
              "saveMissing": false,
              "saveMissingPlurals": true,
              "saveMissingTo": "fallback",
              "simplifyPluralSuffix": true,
              "supportedLngs": Array [
                "de",
                "en",
                "fr",
                "ru",
                "uz",
                "cimode",
              ],
              "updateMissing": false,
              "whitelist": false,
            },
            "removeResourceBundle": [Function],
            "reportNamespaces": ReportNamespaces {
              "usedNamespaces": Object {
                "translation": true,
              },
            },
            "services": Object {
              "backendConnector": Connector {
                "backend": null,
                "languageUtils": LanguageUtil {
                  "logger": Logger {
                    "debug": true,
                    "logger": Object {
                      "error": [Function],
                      "log": [Function],
                      "output": [Function],
                      "type": "logger",
                      "warn": [Function],
                    },
                    "options": Object {
                      "appendNamespaceToCIMode": false,
                      "appendNamespaceToMissingKey": false,
                      "contextSeparator": "_",
                      "debug": true,
                      "defaultNS": "translation",
                      "fallbackLng": Array [
                        "en",
                      ],
                      "fallbackNS": false,
                      "initImmediate": false,
                      "interpolation": Object {
                        "escapeValue": false,
                      },
                      "joinArrays": false,
                      "keySeparator": ".",
                      "load": "all",
                      "missingInterpolationHandler": false,
                      "missingKeyHandler": false,
                      "nonExplicitSupportedLngs": true,
                      "nonExplicitWhitelist": false,
                      "ns": Array [],
                      "nsSeparator": ":",
                      "overloadTranslationOptionHandler": [Function],
                      "parseMissingKeyHandler": false,
                      "partialBundledLanguages": false,
                      "pluralSeparator": "_",
                      "postProcess": false,
                      "postProcessPassResolved": false,
                      "prefix": "i18next::languageUtils:",
                      "preload": false,
                      "resources": Object {
                        "de": Object {},
                        "en": Object {},
                        "fr": Object {},
                        "ru": Object {},
                        "uz": Object {},
                      },
                      "returnEmptyString": true,
                      "returnNull": true,
                      "returnObjects": false,
                      "returnedObjectHandler": false,
                      "saveMissing": false,
                      "saveMissingPlurals": true,
                      "saveMissingTo": "fallback",
                      "simplifyPluralSuffix": true,
                      "supportedLngs": Array [
                        "de",
                        "en",
                        "fr",
                        "ru",
                        "uz",
                        "cimode",
                      ],
                      "updateMissing": false,
                      "whitelist": false,
                    },
                    "prefix": "i18next::languageUtils:",
                  },
                  "options": Object {
                    "appendNamespaceToCIMode": false,
                    "appendNamespaceToMissingKey": false,
                    "contextSeparator": "_",
                    "debug": true,
                    "defaultNS": "translation",
                    "fallbackLng": Array [
                      "en",
                    ],
                    "fallbackNS": false,
                    "initImmediate": false,
                    "interpolation": Object {
                      "escapeValue": false,
                    },
                    "joinArrays": false,
                    "keySeparator": ".",
                    "load": "all",
                    "missingInterpolationHandler": false,
                    "missingKeyHandler": false,
                    "nonExplicitSupportedLngs": true,
                    "nonExplicitWhitelist": false,
                    "ns": Array [],
                    "nsSeparator": ":",
                    "overloadTranslationOptionHandler": [Function],
                    "parseMissingKeyHandler": false,
                    "partialBundledLanguages": false,
                    "pluralSeparator": "_",
                    "postProcess": false,
                    "postProcessPassResolved": false,
                    "preload": false,
                    "resources": Object {
                      "de": Object {},
                      "en": Object {},
                      "fr": Object {},
                      "ru": Object {},
                      "uz": Object {},
                    },
                    "returnEmptyString": true,
                    "returnNull": true,
                    "returnObjects": false,
                    "returnedObjectHandler": false,
                    "saveMissing": false,
                    "saveMissingPlurals": true,
                    "saveMissingTo": "fallback",
                    "simplifyPluralSuffix": true,
                    "supportedLngs": Array [
                      "de",
                      "en",
                      "fr",
                      "ru",
                      "uz",
                      "cimode",
                    ],
                    "updateMissing": false,
                    "whitelist": false,
                  },
                  "supportedLngs": Array [
                    "de",
                    "en",
                    "fr",
                    "ru",
                    "uz",
                    "cimode",
                  ],
                  "whitelist": Array [
                    "de",
                    "en",
                    "fr",
                    "ru",
                    "uz",
                    "cimode",
                  ],
                },
                "logger": Logger {
                  "debug": true,
                  "logger": Object {
                    "error": [Function],
                    "log": [Function],
                    "output": [Function],
                    "type": "logger",
                    "warn": [Function],
                  },
                  "options": Object {
                    "appendNamespaceToCIMode": false,
                    "appendNamespaceToMissingKey": false,
                    "contextSeparator": "_",
                    "debug": true,
                    "defaultNS": "translation",
                    "fallbackLng": Array [
                      "en",
                    ],
                    "fallbackNS": false,
                    "initImmediate": false,
                    "interpolation": Object {
                      "escapeValue": false,
                    },
                    "joinArrays": false,
                    "keySeparator": ".",
                    "load": "all",
                    "missingInterpolationHandler": false,
                    "missingKeyHandler": false,
                    "nonExplicitSupportedLngs": true,
                    "nonExplicitWhitelist": false,
                    "ns": Array [],
                    "nsSeparator": ":",
                    "overloadTranslationOptionHandler": [Function],
                    "parseMissingKeyHandler": false,
                    "partialBundledLanguages": false,
                    "pluralSeparator": "_",
                    "postProcess": false,
                    "postProcessPassResolved": false,
                    "prefix": "i18next::backendConnector:",
                    "preload": false,
                    "resources": Object {
                      "de": Object {},
                      "en": Object {},
                      "fr": Object {},
                      "ru": Object {},
                      "uz": Object {},
                    },
                    "returnEmptyString": true,
                    "returnNull": true,
                    "returnObjects": false,
                    "returnedObjectHandler": false,
                    "saveMissing": false,
                    "saveMissingPlurals": true,
                    "saveMissingTo": "fallback",
                    "simplifyPluralSuffix": true,
                    "supportedLngs": Array [
                      "de",
                      "en",
                      "fr",
                      "ru",
                      "uz",
                      "cimode",
                    ],
                    "updateMissing": false,
                    "whitelist": false,
                  },
                  "prefix": "i18next::backendConnector:",
                },
                "observers": Object {
                  "*": Array [
                    [Function],
                  ],
                },
                "options": Object {
                  "appendNamespaceToCIMode": false,
                  "appendNamespaceToMissingKey": false,
                  "contextSeparator": "_",
                  "debug": true,
                  "defaultNS": "translation",
                  "fallbackLng": Array [
                    "en",
                  ],
                  "fallbackNS": false,
                  "initImmediate": false,
                  "interpolation": Object {
                    "escapeValue": false,
                  },
                  "joinArrays": false,
                  "keySeparator": ".",
                  "load": "all",
                  "missingInterpolationHandler": false,
                  "missingKeyHandler": false,
                  "nonExplicitSupportedLngs": true,
                  "nonExplicitWhitelist": false,
                  "ns": Array [],
                  "nsSeparator": ":",
                  "overloadTranslationOptionHandler": [Function],
                  "parseMissingKeyHandler": false,
                  "partialBundledLanguages": false,
                  "pluralSeparator": "_",
                  "postProcess": false,
                  "postProcessPassResolved": false,
                  "preload": false,
                  "resources": Object {
                    "de": Object {},
                    "en": Object {},
                    "fr": Object {},
                    "ru": Object {},
                    "uz": Object {},
                  },
                  "returnEmptyString": true,
                  "returnNull": true,
                  "returnObjects": false,
                  "returnedObjectHandler": false,
                  "saveMissing": false,
                  "saveMissingPlurals": true,
                  "saveMissingTo": "fallback",
                  "simplifyPluralSuffix": true,
                  "supportedLngs": Array [
                    "de",
                    "en",
                    "fr",
                    "ru",
                    "uz",
                    "cimode",
                  ],
                  "updateMissing": false,
                  "whitelist": false,
                },
                "queue": Array [],
                "services": [Circular],
                "state": Object {},
                "store": Object {
                  "de": Object {},
                  "en": Object {},
                  "fr": Object {},
                  "ru": Object {},
                  "uz": Object {},
                },
              },
              "interpolator": Interpolator {
                "alwaysFormat": false,
                "escape": [Function],
                "escapeValue": false,
                "format": [Function],
                "formatSeparator": ",",
                "logger": Logger {
                  "debug": true,
                  "logger": Object {
                    "error": [Function],
                    "log": [Function],
                    "output": [Function],
                    "type": "logger",
                    "warn": [Function],
                  },
                  "options": Object {
                    "appendNamespaceToCIMode": false,
                    "appendNamespaceToMissingKey": false,
                    "contextSeparator": "_",
                    "debug": true,
                    "defaultNS": "translation",
                    "fallbackLng": Array [
                      "en",
                    ],
                    "fallbackNS": false,
                    "initImmediate": false,
                    "interpolation": Object {
                      "escapeValue": false,
                    },
                    "joinArrays": false,
                    "keySeparator": ".",
                    "load": "all",
                    "missingInterpolationHandler": false,
                    "missingKeyHandler": false,
                    "nonExplicitSupportedLngs": true,
                    "nonExplicitWhitelist": false,
                    "ns": Array [],
                    "nsSeparator": ":",
                    "overloadTranslationOptionHandler": [Function],
                    "parseMissingKeyHandler": false,
                    "partialBundledLanguages": false,
                    "pluralSeparator": "_",
                    "postProcess": false,
                    "postProcessPassResolved": false,
                    "prefix": "i18next::interpolator:",
                    "preload": false,
                    "resources": Object {
                      "de": Object {},
                      "en": Object {},
                      "fr": Object {},
                      "ru": Object {},
                      "uz": Object {},
                    },
                    "returnEmptyString": true,
                    "returnNull": true,
                    "returnObjects": false,
                    "returnedObjectHandler": false,
                    "saveMissing": false,
                    "saveMissingPlurals": true,
                    "saveMissingTo": "fallback",
                    "simplifyPluralSuffix": true,
                    "supportedLngs": Array [
                      "de",
                      "en",
                      "fr",
                      "ru",
                      "uz",
                      "cimode",
                    ],
                    "updateMissing": false,
                    "whitelist": false,
                  },
                  "prefix": "i18next::interpolator:",
                },
                "maxReplaces": 1000,
                "nestingOptionsSeparator": ",",
                "nestingPrefix": "\\\\$t\\\\(",
                "nestingRegexp": /\\\\\\$t\\\\\\(\\(\\.\\+\\?\\)\\\\\\)/g,
                "nestingSuffix": "\\\\)",
                "options": Object {
                  "appendNamespaceToCIMode": false,
                  "appendNamespaceToMissingKey": false,
                  "contextSeparator": "_",
                  "debug": true,
                  "defaultNS": "translation",
                  "fallbackLng": Array [
                    "en",
                  ],
                  "fallbackNS": false,
                  "initImmediate": false,
                  "interpolation": Object {
                    "escapeValue": false,
                  },
                  "joinArrays": false,
                  "keySeparator": ".",
                  "load": "all",
                  "missingInterpolationHandler": false,
                  "missingKeyHandler": false,
                  "nonExplicitSupportedLngs": true,
                  "nonExplicitWhitelist": false,
                  "ns": Array [],
                  "nsSeparator": ":",
                  "overloadTranslationOptionHandler": [Function],
                  "parseMissingKeyHandler": false,
                  "partialBundledLanguages": false,
                  "pluralSeparator": "_",
                  "postProcess": false,
                  "postProcessPassResolved": false,
                  "preload": false,
                  "resources": Object {
                    "de": Object {},
                    "en": Object {},
                    "fr": Object {},
                    "ru": Object {},
                    "uz": Object {},
                  },
                  "returnEmptyString": true,
                  "returnNull": true,
                  "returnObjects": false,
                  "returnedObjectHandler": false,
                  "saveMissing": false,
                  "saveMissingPlurals": true,
                  "saveMissingTo": "fallback",
                  "simplifyPluralSuffix": true,
                  "supportedLngs": Array [
                    "de",
                    "en",
                    "fr",
                    "ru",
                    "uz",
                    "cimode",
                  ],
                  "updateMissing": false,
                  "whitelist": false,
                },
                "prefix": "{{",
                "regexp": /\\{\\{\\(\\.\\+\\?\\)\\}\\}/g,
                "regexpUnescape": /\\{\\{-\\(\\.\\+\\?\\)\\}\\}/g,
                "suffix": "}}",
                "unescapePrefix": "-",
                "unescapeSuffix": "",
                "useRawValueToEscape": false,
              },
              "languageDetector": Browser {
                "detectors": Object {
                  "cookie": Object {
                    "cacheUserLanguage": [Function],
                    "lookup": [Function],
                    "name": "cookie",
                  },
                  "htmlTag": Object {
                    "lookup": [Function],
                    "name": "htmlTag",
                  },
                  "localStorage": Object {
                    "cacheUserLanguage": [Function],
                    "lookup": [Function],
                    "name": "localStorage",
                  },
                  "navigator": Object {
                    "lookup": [Function],
                    "name": "navigator",
                  },
                  "path": Object {
                    "lookup": [Function],
                    "name": "path",
                  },
                  "querystring": Object {
                    "lookup": [Function],
                    "name": "querystring",
                  },
                  "sessionStorage": Object {
                    "cacheUserLanguage": [Function],
                    "lookup": [Function],
                    "name": "sessionStorage",
                  },
                  "subdomain": Object {
                    "lookup": [Function],
                    "name": "subdomain",
                  },
                },
                "i18nOptions": Object {
                  "appendNamespaceToCIMode": false,
                  "appendNamespaceToMissingKey": false,
                  "contextSeparator": "_",
                  "debug": true,
                  "defaultNS": "translation",
                  "fallbackLng": Array [
                    "en",
                  ],
                  "fallbackNS": false,
                  "initImmediate": false,
                  "interpolation": Object {
                    "escapeValue": false,
                  },
                  "joinArrays": false,
                  "keySeparator": ".",
                  "load": "all",
                  "missingInterpolationHandler": false,
                  "missingKeyHandler": false,
                  "nonExplicitSupportedLngs": true,
                  "nonExplicitWhitelist": false,
                  "ns": Array [],
                  "nsSeparator": ":",
                  "overloadTranslationOptionHandler": [Function],
                  "parseMissingKeyHandler": false,
                  "partialBundledLanguages": false,
                  "pluralSeparator": "_",
                  "postProcess": false,
                  "postProcessPassResolved": false,
                  "preload": false,
                  "resources": Object {
                    "de": Object {},
                    "en": Object {},
                    "fr": Object {},
                    "ru": Object {},
                    "uz": Object {},
                  },
                  "returnEmptyString": true,
                  "returnNull": true,
                  "returnObjects": false,
                  "returnedObjectHandler": false,
                  "saveMissing": false,
                  "saveMissingPlurals": true,
                  "saveMissingTo": "fallback",
                  "simplifyPluralSuffix": true,
                  "supportedLngs": Array [
                    "de",
                    "en",
                    "fr",
                    "ru",
                    "uz",
                    "cimode",
                  ],
                  "updateMissing": false,
                  "whitelist": false,
                },
                "options": Object {
                  "caches": Array [
                    "localStorage",
                  ],
                  "excludeCacheFor": Array [
                    "cimode",
                  ],
                  "lookupCookie": "i18next",
                  "lookupLocalStorage": "i18nextLng",
                  "lookupQuerystring": "lng",
                  "lookupSessionStorage": "i18nextLng",
                  "order": Array [
                    "querystring",
                    "cookie",
                    "localStorage",
                    "sessionStorage",
                    "navigator",
                    "htmlTag",
                  ],
                },
                "services": [Circular],
                "type": "languageDetector",
              },
              "languageUtils": LanguageUtil {
                "logger": Logger {
                  "debug": true,
                  "logger": Object {
                    "error": [Function],
                    "log": [Function],
                    "output": [Function],
                    "type": "logger",
                    "warn": [Function],
                  },
                  "options": Object {
                    "appendNamespaceToCIMode": false,
                    "appendNamespaceToMissingKey": false,
                    "contextSeparator": "_",
                    "debug": true,
                    "defaultNS": "translation",
                    "fallbackLng": Array [
                      "en",
                    ],
                    "fallbackNS": false,
                    "initImmediate": false,
                    "interpolation": Object {
                      "escapeValue": false,
                    },
                    "joinArrays": false,
                    "keySeparator": ".",
                    "load": "all",
                    "missingInterpolationHandler": false,
                    "missingKeyHandler": false,
                    "nonExplicitSupportedLngs": true,
                    "nonExplicitWhitelist": false,
                    "ns": Array [],
                    "nsSeparator": ":",
                    "overloadTranslationOptionHandler": [Function],
                    "parseMissingKeyHandler": false,
                    "partialBundledLanguages": false,
                    "pluralSeparator": "_",
                    "postProcess": false,
                    "postProcessPassResolved": false,
                    "prefix": "i18next::languageUtils:",
                    "preload": false,
                    "resources": Object {
                      "de": Object {},
                      "en": Object {},
                      "fr": Object {},
                      "ru": Object {},
                      "uz": Object {},
                    },
                    "returnEmptyString": true,
                    "returnNull": true,
                    "returnObjects": false,
                    "returnedObjectHandler": false,
                    "saveMissing": false,
                    "saveMissingPlurals": true,
                    "saveMissingTo": "fallback",
                    "simplifyPluralSuffix": true,
                    "supportedLngs": Array [
                      "de",
                      "en",
                      "fr",
                      "ru",
                      "uz",
                      "cimode",
                    ],
                    "updateMissing": false,
                    "whitelist": false,
                  },
                  "prefix": "i18next::languageUtils:",
                },
                "options": Object {
                  "appendNamespaceToCIMode": false,
                  "appendNamespaceToMissingKey": false,
                  "contextSeparator": "_",
                  "debug": true,
                  "defaultNS": "translation",
                  "fallbackLng": Array [
                    "en",
                  ],
                  "fallbackNS": false,
                  "initImmediate": false,
                  "interpolation": Object {
                    "escapeValue": false,
                  },
                  "joinArrays": false,
                  "keySeparator": ".",
                  "load": "all",
                  "missingInterpolationHandler": false,
                  "missingKeyHandler": false,
                  "nonExplicitSupportedLngs": true,
                  "nonExplicitWhitelist": false,
                  "ns": Array [],
                  "nsSeparator": ":",
                  "overloadTranslationOptionHandler": [Function],
                  "parseMissingKeyHandler": false,
                  "partialBundledLanguages": false,
                  "pluralSeparator": "_",
                  "postProcess": false,
                  "postProcessPassResolved": false,
                  "preload": false,
                  "resources": Object {
                    "de": Object {},
                    "en": Object {},
                    "fr": Object {},
                    "ru": Object {},
                    "uz": Object {},
                  },
                  "returnEmptyString": true,
                  "returnNull": true,
                  "returnObjects": false,
                  "returnedObjectHandler": false,
                  "saveMissing": false,
                  "saveMissingPlurals": true,
                  "saveMissingTo": "fallback",
                  "simplifyPluralSuffix": true,
                  "supportedLngs": Array [
                    "de",
                    "en",
                    "fr",
                    "ru",
                    "uz",
                    "cimode",
                  ],
                  "updateMissing": false,
                  "whitelist": false,
                },
                "supportedLngs": Array [
                  "de",
                  "en",
                  "fr",
                  "ru",
                  "uz",
                  "cimode",
                ],
                "whitelist": Array [
                  "de",
                  "en",
                  "fr",
                  "ru",
                  "uz",
                  "cimode",
                ],
              },
              "logger": Logger {
                "debug": true,
                "logger": Object {
                  "error": [Function],
                  "log": [Function],
                  "output": [Function],
                  "type": "logger",
                  "warn": [Function],
                },
                "options": Object {
                  "appendNamespaceToCIMode": false,
                  "appendNamespaceToMissingKey": false,
                  "contextSeparator": "_",
                  "debug": true,
                  "defaultNS": "translation",
                  "fallbackLng": Array [
                    "en",
                  ],
                  "fallbackNS": false,
                  "initImmediate": false,
                  "interpolation": Object {
                    "escapeValue": false,
                  },
                  "joinArrays": false,
                  "keySeparator": ".",
                  "load": "all",
                  "missingInterpolationHandler": false,
                  "missingKeyHandler": false,
                  "nonExplicitSupportedLngs": true,
                  "nonExplicitWhitelist": false,
                  "ns": Array [],
                  "nsSeparator": ":",
                  "overloadTranslationOptionHandler": [Function],
                  "parseMissingKeyHandler": false,
                  "partialBundledLanguages": false,
                  "pluralSeparator": "_",
                  "postProcess": false,
                  "postProcessPassResolved": false,
                  "preload": false,
                  "resources": Object {
                    "de": Object {},
                    "en": Object {},
                    "fr": Object {},
                    "ru": Object {},
                    "uz": Object {},
                  },
                  "returnEmptyString": true,
                  "returnNull": true,
                  "returnObjects": false,
                  "returnedObjectHandler": false,
                  "saveMissing": false,
                  "saveMissingPlurals": true,
                  "saveMissingTo": "fallback",
                  "simplifyPluralSuffix": true,
                  "supportedLngs": Array [
                    "de",
                    "en",
                    "fr",
                    "ru",
                    "uz",
                    "cimode",
                  ],
                  "updateMissing": false,
                  "whitelist": false,
                },
                "prefix": "i18next:",
              },
              "pluralResolver": PluralResolver {
                "languageUtils": LanguageUtil {
                  "logger": Logger {
                    "debug": true,
                    "logger": Object {
                      "error": [Function],
                      "log": [Function],
                      "output": [Function],
                      "type": "logger",
                      "warn": [Function],
                    },
                    "options": Object {
                      "appendNamespaceToCIMode": false,
                      "appendNamespaceToMissingKey": false,
                      "contextSeparator": "_",
                      "debug": true,
                      "defaultNS": "translation",
                      "fallbackLng": Array [
                        "en",
                      ],
                      "fallbackNS": false,
                      "initImmediate": false,
                      "interpolation": Object {
                        "escapeValue": false,
                      },
                      "joinArrays": false,
                      "keySeparator": ".",
                      "load": "all",
                      "missingInterpolationHandler": false,
                      "missingKeyHandler": false,
                      "nonExplicitSupportedLngs": true,
                      "nonExplicitWhitelist": false,
                      "ns": Array [],
                      "nsSeparator": ":",
                      "overloadTranslationOptionHandler": [Function],
                      "parseMissingKeyHandler": false,
                      "partialBundledLanguages": false,
                      "pluralSeparator": "_",
                      "postProcess": false,
                      "postProcessPassResolved": false,
                      "prefix": "i18next::languageUtils:",
                      "preload": false,
                      "resources": Object {
                        "de": Object {},
                        "en": Object {},
                        "fr": Object {},
                        "ru": Object {},
                        "uz": Object {},
                      },
                      "returnEmptyString": true,
                      "returnNull": true,
                      "returnObjects": false,
                      "returnedObjectHandler": false,
                      "saveMissing": false,
                      "saveMissingPlurals": true,
                      "saveMissingTo": "fallback",
                      "simplifyPluralSuffix": true,
                      "supportedLngs": Array [
                        "de",
                        "en",
                        "fr",
                        "ru",
                        "uz",
                        "cimode",
                      ],
                      "updateMissing": false,
                      "whitelist": false,
                    },
                    "prefix": "i18next::languageUtils:",
                  },
                  "options": Object {
                    "appendNamespaceToCIMode": false,
                    "appendNamespaceToMissingKey": false,
                    "contextSeparator": "_",
                    "debug": true,
                    "defaultNS": "translation",
                    "fallbackLng": Array [
                      "en",
                    ],
                    "fallbackNS": false,
                    "initImmediate": false,
                    "interpolation": Object {
                      "escapeValue": false,
                    },
                    "joinArrays": false,
                    "keySeparator": ".",
                    "load": "all",
                    "missingInterpolationHandler": false,
                    "missingKeyHandler": false,
                    "nonExplicitSupportedLngs": true,
                    "nonExplicitWhitelist": false,
                    "ns": Array [],
                    "nsSeparator": ":",
                    "overloadTranslationOptionHandler": [Function],
                    "parseMissingKeyHandler": false,
                    "partialBundledLanguages": false,
                    "pluralSeparator": "_",
                    "postProcess": false,
                    "postProcessPassResolved": false,
                    "preload": false,
                    "resources": Object {
                      "de": Object {},
                      "en": Object {},
                      "fr": Object {},
                      "ru": Object {},
                      "uz": Object {},
                    },
                    "returnEmptyString": true,
                    "returnNull": true,
                    "returnObjects": false,
                    "returnedObjectHandler": false,
                    "saveMissing": false,
                    "saveMissingPlurals": true,
                    "saveMissingTo": "fallback",
                    "simplifyPluralSuffix": true,
                    "supportedLngs": Array [
                      "de",
                      "en",
                      "fr",
                      "ru",
                      "uz",
                      "cimode",
                    ],
                    "updateMissing": false,
                    "whitelist": false,
                  },
                  "supportedLngs": Array [
                    "de",
                    "en",
                    "fr",
                    "ru",
                    "uz",
                    "cimode",
                  ],
                  "whitelist": Array [
                    "de",
                    "en",
                    "fr",
                    "ru",
                    "uz",
                    "cimode",
                  ],
                },
                "logger": Logger {
                  "debug": true,
                  "logger": Object {
                    "error": [Function],
                    "log": [Function],
                    "output": [Function],
                    "type": "logger",
                    "warn": [Function],
                  },
                  "options": Object {
                    "appendNamespaceToCIMode": false,
                    "appendNamespaceToMissingKey": false,
                    "contextSeparator": "_",
                    "debug": true,
                    "defaultNS": "translation",
                    "fallbackLng": Array [
                      "en",
                    ],
                    "fallbackNS": false,
                    "initImmediate": false,
                    "interpolation": Object {
                      "escapeValue": false,
                    },
                    "joinArrays": false,
                    "keySeparator": ".",
                    "load": "all",
                    "missingInterpolationHandler": false,
                    "missingKeyHandler": false,
                    "nonExplicitSupportedLngs": true,
                    "nonExplicitWhitelist": false,
                    "ns": Array [],
                    "nsSeparator": ":",
                    "overloadTranslationOptionHandler": [Function],
                    "parseMissingKeyHandler": false,
                    "partialBundledLanguages": false,
                    "pluralSeparator": "_",
                    "postProcess": false,
                    "postProcessPassResolved": false,
                    "prefix": "i18next::pluralResolver:",
                    "preload": false,
                    "resources": Object {
                      "de": Object {},
                      "en": Object {},
                      "fr": Object {},
                      "ru": Object {},
                      "uz": Object {},
                    },
                    "returnEmptyString": true,
                    "returnNull": true,
                    "returnObjects": false,
                    "returnedObjectHandler": false,
                    "saveMissing": false,
                    "saveMissingPlurals": true,
                    "saveMissingTo": "fallback",
                    "simplifyPluralSuffix": true,
                    "supportedLngs": Array [
                      "de",
                      "en",
                      "fr",
                      "ru",
                      "uz",
                      "cimode",
                    ],
                    "updateMissing": false,
                    "whitelist": false,
                  },
                  "prefix": "i18next::pluralResolver:",
                },
                "options": Object {
                  "compatibilityJSON": undefined,
                  "prepend": "_",
                  "simplifyPluralSuffix": true,
                },
                "rules": Object {
                  "ach": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "af": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "ak": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "am": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "an": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "ar": Object {
                    "numbers": Array [
                      0,
                      1,
                      2,
                      3,
                      11,
                      100,
                    ],
                    "plurals": [Function],
                  },
                  "arn": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "ast": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "ay": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "az": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "be": Object {
                    "numbers": Array [
                      1,
                      2,
                      5,
                    ],
                    "plurals": [Function],
                  },
                  "bg": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "bn": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "bo": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "br": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "bs": Object {
                    "numbers": Array [
                      1,
                      2,
                      5,
                    ],
                    "plurals": [Function],
                  },
                  "ca": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "cgg": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "cnr": Object {
                    "numbers": Array [
                      1,
                      2,
                      5,
                    ],
                    "plurals": [Function],
                  },
                  "cs": Object {
                    "numbers": Array [
                      1,
                      2,
                      5,
                    ],
                    "plurals": [Function],
                  },
                  "csb": Object {
                    "numbers": Array [
                      1,
                      2,
                      5,
                    ],
                    "plurals": [Function],
                  },
                  "cy": Object {
                    "numbers": Array [
                      1,
                      2,
                      3,
                      8,
                    ],
                    "plurals": [Function],
                  },
                  "da": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "de": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "dev": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "dz": Object {
                    "numbers": Array [
                      1,
                      2,
                      5,
                    ],
                    "plurals": [Function],
                  },
                  "el": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "en": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "eo": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "es": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "et": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "eu": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "fa": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "fi": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "fil": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "fo": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "fr": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "fur": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "fy": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "ga": Object {
                    "numbers": Array [
                      1,
                      2,
                      3,
                      7,
                      11,
                    ],
                    "plurals": [Function],
                  },
                  "gd": Object {
                    "numbers": Array [
                      1,
                      2,
                      3,
                      20,
                    ],
                    "plurals": [Function],
                  },
                  "gl": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "gu": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "gun": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "ha": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "he": Object {
                    "numbers": Array [
                      1,
                      2,
                      20,
                      21,
                    ],
                    "plurals": [Function],
                  },
                  "hi": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "hr": Object {
                    "numbers": Array [
                      1,
                      2,
                      5,
                    ],
                    "plurals": [Function],
                  },
                  "ht": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "hu": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "hy": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "ia": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "id": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "is": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "it": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "iw": Object {
                    "numbers": Array [
                      1,
                      2,
                      20,
                      21,
                    ],
                    "plurals": [Function],
                  },
                  "ja": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "jbo": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "jv": Object {
                    "numbers": Array [
                      0,
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "ka": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "kk": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "km": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "kn": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "ko": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "ku": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "kw": Object {
                    "numbers": Array [
                      1,
                      2,
                      3,
                      4,
                    ],
                    "plurals": [Function],
                  },
                  "ky": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "lb": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "ln": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "lo": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "lt": Object {
                    "numbers": Array [
                      1,
                      2,
                      10,
                    ],
                    "plurals": [Function],
                  },
                  "lv": Object {
                    "numbers": Array [
                      1,
                      2,
                      0,
                    ],
                    "plurals": [Function],
                  },
                  "mai": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "mfe": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "mg": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "mi": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "mk": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "ml": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "mn": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "mnk": Object {
                    "numbers": Array [
                      0,
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "mr": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "ms": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "mt": Object {
                    "numbers": Array [
                      1,
                      2,
                      11,
                      20,
                    ],
                    "plurals": [Function],
                  },
                  "nah": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "nap": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "nb": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "ne": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "nl": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "nn": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "no": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "nso": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "oc": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "or": Object {
                    "numbers": Array [
                      2,
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "pa": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "pap": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "pl": Object {
                    "numbers": Array [
                      1,
                      2,
                      5,
                    ],
                    "plurals": [Function],
                  },
                  "pms": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "ps": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "pt": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "pt-BR": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "pt-PT": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "rm": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "ro": Object {
                    "numbers": Array [
                      1,
                      2,
                      20,
                    ],
                    "plurals": [Function],
                  },
                  "ru": Object {
                    "numbers": Array [
                      1,
                      2,
                      5,
                    ],
                    "plurals": [Function],
                  },
                  "sah": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "sco": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "se": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "si": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "sk": Object {
                    "numbers": Array [
                      1,
                      2,
                      5,
                    ],
                    "plurals": [Function],
                  },
                  "sl": Object {
                    "numbers": Array [
                      5,
                      1,
                      2,
                      3,
                    ],
                    "plurals": [Function],
                  },
                  "so": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "son": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "sq": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "sr": Object {
                    "numbers": Array [
                      1,
                      2,
                      5,
                    ],
                    "plurals": [Function],
                  },
                  "su": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "sv": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "sw": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "ta": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "te": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "tg": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "th": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "ti": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "tk": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "tr": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "tt": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "ug": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "uk": Object {
                    "numbers": Array [
                      1,
                      2,
                      5,
                    ],
                    "plurals": [Function],
                  },
                  "ur": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "uz": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "vi": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "wa": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "wo": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "yo": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "zh": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                },
              },
              "resourceStore": Object {
                "de": Object {},
                "en": Object {},
                "fr": Object {},
                "ru": Object {},
                "uz": Object {},
              },
              "utils": Object {
                "hasLoadedNamespace": [Function],
              },
            },
            "store": Object {
              "de": Object {},
              "en": Object {},
              "fr": Object {},
              "ru": Object {},
              "uz": Object {},
            },
            "translator": Translator {
              "backendConnector": Connector {
                "backend": null,
                "languageUtils": LanguageUtil {
                  "logger": Logger {
                    "debug": true,
                    "logger": Object {
                      "error": [Function],
                      "log": [Function],
                      "output": [Function],
                      "type": "logger",
                      "warn": [Function],
                    },
                    "options": Object {
                      "appendNamespaceToCIMode": false,
                      "appendNamespaceToMissingKey": false,
                      "contextSeparator": "_",
                      "debug": true,
                      "defaultNS": "translation",
                      "fallbackLng": Array [
                        "en",
                      ],
                      "fallbackNS": false,
                      "initImmediate": false,
                      "interpolation": Object {
                        "escapeValue": false,
                      },
                      "joinArrays": false,
                      "keySeparator": ".",
                      "load": "all",
                      "missingInterpolationHandler": false,
                      "missingKeyHandler": false,
                      "nonExplicitSupportedLngs": true,
                      "nonExplicitWhitelist": false,
                      "ns": Array [],
                      "nsSeparator": ":",
                      "overloadTranslationOptionHandler": [Function],
                      "parseMissingKeyHandler": false,
                      "partialBundledLanguages": false,
                      "pluralSeparator": "_",
                      "postProcess": false,
                      "postProcessPassResolved": false,
                      "prefix": "i18next::languageUtils:",
                      "preload": false,
                      "resources": Object {
                        "de": Object {},
                        "en": Object {},
                        "fr": Object {},
                        "ru": Object {},
                        "uz": Object {},
                      },
                      "returnEmptyString": true,
                      "returnNull": true,
                      "returnObjects": false,
                      "returnedObjectHandler": false,
                      "saveMissing": false,
                      "saveMissingPlurals": true,
                      "saveMissingTo": "fallback",
                      "simplifyPluralSuffix": true,
                      "supportedLngs": Array [
                        "de",
                        "en",
                        "fr",
                        "ru",
                        "uz",
                        "cimode",
                      ],
                      "updateMissing": false,
                      "whitelist": false,
                    },
                    "prefix": "i18next::languageUtils:",
                  },
                  "options": Object {
                    "appendNamespaceToCIMode": false,
                    "appendNamespaceToMissingKey": false,
                    "contextSeparator": "_",
                    "debug": true,
                    "defaultNS": "translation",
                    "fallbackLng": Array [
                      "en",
                    ],
                    "fallbackNS": false,
                    "initImmediate": false,
                    "interpolation": Object {
                      "escapeValue": false,
                    },
                    "joinArrays": false,
                    "keySeparator": ".",
                    "load": "all",
                    "missingInterpolationHandler": false,
                    "missingKeyHandler": false,
                    "nonExplicitSupportedLngs": true,
                    "nonExplicitWhitelist": false,
                    "ns": Array [],
                    "nsSeparator": ":",
                    "overloadTranslationOptionHandler": [Function],
                    "parseMissingKeyHandler": false,
                    "partialBundledLanguages": false,
                    "pluralSeparator": "_",
                    "postProcess": false,
                    "postProcessPassResolved": false,
                    "preload": false,
                    "resources": Object {
                      "de": Object {},
                      "en": Object {},
                      "fr": Object {},
                      "ru": Object {},
                      "uz": Object {},
                    },
                    "returnEmptyString": true,
                    "returnNull": true,
                    "returnObjects": false,
                    "returnedObjectHandler": false,
                    "saveMissing": false,
                    "saveMissingPlurals": true,
                    "saveMissingTo": "fallback",
                    "simplifyPluralSuffix": true,
                    "supportedLngs": Array [
                      "de",
                      "en",
                      "fr",
                      "ru",
                      "uz",
                      "cimode",
                    ],
                    "updateMissing": false,
                    "whitelist": false,
                  },
                  "supportedLngs": Array [
                    "de",
                    "en",
                    "fr",
                    "ru",
                    "uz",
                    "cimode",
                  ],
                  "whitelist": Array [
                    "de",
                    "en",
                    "fr",
                    "ru",
                    "uz",
                    "cimode",
                  ],
                },
                "logger": Logger {
                  "debug": true,
                  "logger": Object {
                    "error": [Function],
                    "log": [Function],
                    "output": [Function],
                    "type": "logger",
                    "warn": [Function],
                  },
                  "options": Object {
                    "appendNamespaceToCIMode": false,
                    "appendNamespaceToMissingKey": false,
                    "contextSeparator": "_",
                    "debug": true,
                    "defaultNS": "translation",
                    "fallbackLng": Array [
                      "en",
                    ],
                    "fallbackNS": false,
                    "initImmediate": false,
                    "interpolation": Object {
                      "escapeValue": false,
                    },
                    "joinArrays": false,
                    "keySeparator": ".",
                    "load": "all",
                    "missingInterpolationHandler": false,
                    "missingKeyHandler": false,
                    "nonExplicitSupportedLngs": true,
                    "nonExplicitWhitelist": false,
                    "ns": Array [],
                    "nsSeparator": ":",
                    "overloadTranslationOptionHandler": [Function],
                    "parseMissingKeyHandler": false,
                    "partialBundledLanguages": false,
                    "pluralSeparator": "_",
                    "postProcess": false,
                    "postProcessPassResolved": false,
                    "prefix": "i18next::backendConnector:",
                    "preload": false,
                    "resources": Object {
                      "de": Object {},
                      "en": Object {},
                      "fr": Object {},
                      "ru": Object {},
                      "uz": Object {},
                    },
                    "returnEmptyString": true,
                    "returnNull": true,
                    "returnObjects": false,
                    "returnedObjectHandler": false,
                    "saveMissing": false,
                    "saveMissingPlurals": true,
                    "saveMissingTo": "fallback",
                    "simplifyPluralSuffix": true,
                    "supportedLngs": Array [
                      "de",
                      "en",
                      "fr",
                      "ru",
                      "uz",
                      "cimode",
                    ],
                    "updateMissing": false,
                    "whitelist": false,
                  },
                  "prefix": "i18next::backendConnector:",
                },
                "observers": Object {
                  "*": Array [
                    [Function],
                  ],
                },
                "options": Object {
                  "appendNamespaceToCIMode": false,
                  "appendNamespaceToMissingKey": false,
                  "contextSeparator": "_",
                  "debug": true,
                  "defaultNS": "translation",
                  "fallbackLng": Array [
                    "en",
                  ],
                  "fallbackNS": false,
                  "initImmediate": false,
                  "interpolation": Object {
                    "escapeValue": false,
                  },
                  "joinArrays": false,
                  "keySeparator": ".",
                  "load": "all",
                  "missingInterpolationHandler": false,
                  "missingKeyHandler": false,
                  "nonExplicitSupportedLngs": true,
                  "nonExplicitWhitelist": false,
                  "ns": Array [],
                  "nsSeparator": ":",
                  "overloadTranslationOptionHandler": [Function],
                  "parseMissingKeyHandler": false,
                  "partialBundledLanguages": false,
                  "pluralSeparator": "_",
                  "postProcess": false,
                  "postProcessPassResolved": false,
                  "preload": false,
                  "resources": Object {
                    "de": Object {},
                    "en": Object {},
                    "fr": Object {},
                    "ru": Object {},
                    "uz": Object {},
                  },
                  "returnEmptyString": true,
                  "returnNull": true,
                  "returnObjects": false,
                  "returnedObjectHandler": false,
                  "saveMissing": false,
                  "saveMissingPlurals": true,
                  "saveMissingTo": "fallback",
                  "simplifyPluralSuffix": true,
                  "supportedLngs": Array [
                    "de",
                    "en",
                    "fr",
                    "ru",
                    "uz",
                    "cimode",
                  ],
                  "updateMissing": false,
                  "whitelist": false,
                },
                "queue": Array [],
                "services": Object {
                  "backendConnector": [Circular],
                  "interpolator": Interpolator {
                    "alwaysFormat": false,
                    "escape": [Function],
                    "escapeValue": false,
                    "format": [Function],
                    "formatSeparator": ",",
                    "logger": Logger {
                      "debug": true,
                      "logger": Object {
                        "error": [Function],
                        "log": [Function],
                        "output": [Function],
                        "type": "logger",
                        "warn": [Function],
                      },
                      "options": Object {
                        "appendNamespaceToCIMode": false,
                        "appendNamespaceToMissingKey": false,
                        "contextSeparator": "_",
                        "debug": true,
                        "defaultNS": "translation",
                        "fallbackLng": Array [
                          "en",
                        ],
                        "fallbackNS": false,
                        "initImmediate": false,
                        "interpolation": Object {
                          "escapeValue": false,
                        },
                        "joinArrays": false,
                        "keySeparator": ".",
                        "load": "all",
                        "missingInterpolationHandler": false,
                        "missingKeyHandler": false,
                        "nonExplicitSupportedLngs": true,
                        "nonExplicitWhitelist": false,
                        "ns": Array [],
                        "nsSeparator": ":",
                        "overloadTranslationOptionHandler": [Function],
                        "parseMissingKeyHandler": false,
                        "partialBundledLanguages": false,
                        "pluralSeparator": "_",
                        "postProcess": false,
                        "postProcessPassResolved": false,
                        "prefix": "i18next::interpolator:",
                        "preload": false,
                        "resources": Object {
                          "de": Object {},
                          "en": Object {},
                          "fr": Object {},
                          "ru": Object {},
                          "uz": Object {},
                        },
                        "returnEmptyString": true,
                        "returnNull": true,
                        "returnObjects": false,
                        "returnedObjectHandler": false,
                        "saveMissing": false,
                        "saveMissingPlurals": true,
                        "saveMissingTo": "fallback",
                        "simplifyPluralSuffix": true,
                        "supportedLngs": Array [
                          "de",
                          "en",
                          "fr",
                          "ru",
                          "uz",
                          "cimode",
                        ],
                        "updateMissing": false,
                        "whitelist": false,
                      },
                      "prefix": "i18next::interpolator:",
                    },
                    "maxReplaces": 1000,
                    "nestingOptionsSeparator": ",",
                    "nestingPrefix": "\\\\$t\\\\(",
                    "nestingRegexp": /\\\\\\$t\\\\\\(\\(\\.\\+\\?\\)\\\\\\)/g,
                    "nestingSuffix": "\\\\)",
                    "options": Object {
                      "appendNamespaceToCIMode": false,
                      "appendNamespaceToMissingKey": false,
                      "contextSeparator": "_",
                      "debug": true,
                      "defaultNS": "translation",
                      "fallbackLng": Array [
                        "en",
                      ],
                      "fallbackNS": false,
                      "initImmediate": false,
                      "interpolation": Object {
                        "escapeValue": false,
                      },
                      "joinArrays": false,
                      "keySeparator": ".",
                      "load": "all",
                      "missingInterpolationHandler": false,
                      "missingKeyHandler": false,
                      "nonExplicitSupportedLngs": true,
                      "nonExplicitWhitelist": false,
                      "ns": Array [],
                      "nsSeparator": ":",
                      "overloadTranslationOptionHandler": [Function],
                      "parseMissingKeyHandler": false,
                      "partialBundledLanguages": false,
                      "pluralSeparator": "_",
                      "postProcess": false,
                      "postProcessPassResolved": false,
                      "preload": false,
                      "resources": Object {
                        "de": Object {},
                        "en": Object {},
                        "fr": Object {},
                        "ru": Object {},
                        "uz": Object {},
                      },
                      "returnEmptyString": true,
                      "returnNull": true,
                      "returnObjects": false,
                      "returnedObjectHandler": false,
                      "saveMissing": false,
                      "saveMissingPlurals": true,
                      "saveMissingTo": "fallback",
                      "simplifyPluralSuffix": true,
                      "supportedLngs": Array [
                        "de",
                        "en",
                        "fr",
                        "ru",
                        "uz",
                        "cimode",
                      ],
                      "updateMissing": false,
                      "whitelist": false,
                    },
                    "prefix": "{{",
                    "regexp": /\\{\\{\\(\\.\\+\\?\\)\\}\\}/g,
                    "regexpUnescape": /\\{\\{-\\(\\.\\+\\?\\)\\}\\}/g,
                    "suffix": "}}",
                    "unescapePrefix": "-",
                    "unescapeSuffix": "",
                    "useRawValueToEscape": false,
                  },
                  "languageDetector": Browser {
                    "detectors": Object {
                      "cookie": Object {
                        "cacheUserLanguage": [Function],
                        "lookup": [Function],
                        "name": "cookie",
                      },
                      "htmlTag": Object {
                        "lookup": [Function],
                        "name": "htmlTag",
                      },
                      "localStorage": Object {
                        "cacheUserLanguage": [Function],
                        "lookup": [Function],
                        "name": "localStorage",
                      },
                      "navigator": Object {
                        "lookup": [Function],
                        "name": "navigator",
                      },
                      "path": Object {
                        "lookup": [Function],
                        "name": "path",
                      },
                      "querystring": Object {
                        "lookup": [Function],
                        "name": "querystring",
                      },
                      "sessionStorage": Object {
                        "cacheUserLanguage": [Function],
                        "lookup": [Function],
                        "name": "sessionStorage",
                      },
                      "subdomain": Object {
                        "lookup": [Function],
                        "name": "subdomain",
                      },
                    },
                    "i18nOptions": Object {
                      "appendNamespaceToCIMode": false,
                      "appendNamespaceToMissingKey": false,
                      "contextSeparator": "_",
                      "debug": true,
                      "defaultNS": "translation",
                      "fallbackLng": Array [
                        "en",
                      ],
                      "fallbackNS": false,
                      "initImmediate": false,
                      "interpolation": Object {
                        "escapeValue": false,
                      },
                      "joinArrays": false,
                      "keySeparator": ".",
                      "load": "all",
                      "missingInterpolationHandler": false,
                      "missingKeyHandler": false,
                      "nonExplicitSupportedLngs": true,
                      "nonExplicitWhitelist": false,
                      "ns": Array [],
                      "nsSeparator": ":",
                      "overloadTranslationOptionHandler": [Function],
                      "parseMissingKeyHandler": false,
                      "partialBundledLanguages": false,
                      "pluralSeparator": "_",
                      "postProcess": false,
                      "postProcessPassResolved": false,
                      "preload": false,
                      "resources": Object {
                        "de": Object {},
                        "en": Object {},
                        "fr": Object {},
                        "ru": Object {},
                        "uz": Object {},
                      },
                      "returnEmptyString": true,
                      "returnNull": true,
                      "returnObjects": false,
                      "returnedObjectHandler": false,
                      "saveMissing": false,
                      "saveMissingPlurals": true,
                      "saveMissingTo": "fallback",
                      "simplifyPluralSuffix": true,
                      "supportedLngs": Array [
                        "de",
                        "en",
                        "fr",
                        "ru",
                        "uz",
                        "cimode",
                      ],
                      "updateMissing": false,
                      "whitelist": false,
                    },
                    "options": Object {
                      "caches": Array [
                        "localStorage",
                      ],
                      "excludeCacheFor": Array [
                        "cimode",
                      ],
                      "lookupCookie": "i18next",
                      "lookupLocalStorage": "i18nextLng",
                      "lookupQuerystring": "lng",
                      "lookupSessionStorage": "i18nextLng",
                      "order": Array [
                        "querystring",
                        "cookie",
                        "localStorage",
                        "sessionStorage",
                        "navigator",
                        "htmlTag",
                      ],
                    },
                    "services": [Circular],
                    "type": "languageDetector",
                  },
                  "languageUtils": LanguageUtil {
                    "logger": Logger {
                      "debug": true,
                      "logger": Object {
                        "error": [Function],
                        "log": [Function],
                        "output": [Function],
                        "type": "logger",
                        "warn": [Function],
                      },
                      "options": Object {
                        "appendNamespaceToCIMode": false,
                        "appendNamespaceToMissingKey": false,
                        "contextSeparator": "_",
                        "debug": true,
                        "defaultNS": "translation",
                        "fallbackLng": Array [
                          "en",
                        ],
                        "fallbackNS": false,
                        "initImmediate": false,
                        "interpolation": Object {
                          "escapeValue": false,
                        },
                        "joinArrays": false,
                        "keySeparator": ".",
                        "load": "all",
                        "missingInterpolationHandler": false,
                        "missingKeyHandler": false,
                        "nonExplicitSupportedLngs": true,
                        "nonExplicitWhitelist": false,
                        "ns": Array [],
                        "nsSeparator": ":",
                        "overloadTranslationOptionHandler": [Function],
                        "parseMissingKeyHandler": false,
                        "partialBundledLanguages": false,
                        "pluralSeparator": "_",
                        "postProcess": false,
                        "postProcessPassResolved": false,
                        "prefix": "i18next::languageUtils:",
                        "preload": false,
                        "resources": Object {
                          "de": Object {},
                          "en": Object {},
                          "fr": Object {},
                          "ru": Object {},
                          "uz": Object {},
                        },
                        "returnEmptyString": true,
                        "returnNull": true,
                        "returnObjects": false,
                        "returnedObjectHandler": false,
                        "saveMissing": false,
                        "saveMissingPlurals": true,
                        "saveMissingTo": "fallback",
                        "simplifyPluralSuffix": true,
                        "supportedLngs": Array [
                          "de",
                          "en",
                          "fr",
                          "ru",
                          "uz",
                          "cimode",
                        ],
                        "updateMissing": false,
                        "whitelist": false,
                      },
                      "prefix": "i18next::languageUtils:",
                    },
                    "options": Object {
                      "appendNamespaceToCIMode": false,
                      "appendNamespaceToMissingKey": false,
                      "contextSeparator": "_",
                      "debug": true,
                      "defaultNS": "translation",
                      "fallbackLng": Array [
                        "en",
                      ],
                      "fallbackNS": false,
                      "initImmediate": false,
                      "interpolation": Object {
                        "escapeValue": false,
                      },
                      "joinArrays": false,
                      "keySeparator": ".",
                      "load": "all",
                      "missingInterpolationHandler": false,
                      "missingKeyHandler": false,
                      "nonExplicitSupportedLngs": true,
                      "nonExplicitWhitelist": false,
                      "ns": Array [],
                      "nsSeparator": ":",
                      "overloadTranslationOptionHandler": [Function],
                      "parseMissingKeyHandler": false,
                      "partialBundledLanguages": false,
                      "pluralSeparator": "_",
                      "postProcess": false,
                      "postProcessPassResolved": false,
                      "preload": false,
                      "resources": Object {
                        "de": Object {},
                        "en": Object {},
                        "fr": Object {},
                        "ru": Object {},
                        "uz": Object {},
                      },
                      "returnEmptyString": true,
                      "returnNull": true,
                      "returnObjects": false,
                      "returnedObjectHandler": false,
                      "saveMissing": false,
                      "saveMissingPlurals": true,
                      "saveMissingTo": "fallback",
                      "simplifyPluralSuffix": true,
                      "supportedLngs": Array [
                        "de",
                        "en",
                        "fr",
                        "ru",
                        "uz",
                        "cimode",
                      ],
                      "updateMissing": false,
                      "whitelist": false,
                    },
                    "supportedLngs": Array [
                      "de",
                      "en",
                      "fr",
                      "ru",
                      "uz",
                      "cimode",
                    ],
                    "whitelist": Array [
                      "de",
                      "en",
                      "fr",
                      "ru",
                      "uz",
                      "cimode",
                    ],
                  },
                  "logger": Logger {
                    "debug": true,
                    "logger": Object {
                      "error": [Function],
                      "log": [Function],
                      "output": [Function],
                      "type": "logger",
                      "warn": [Function],
                    },
                    "options": Object {
                      "appendNamespaceToCIMode": false,
                      "appendNamespaceToMissingKey": false,
                      "contextSeparator": "_",
                      "debug": true,
                      "defaultNS": "translation",
                      "fallbackLng": Array [
                        "en",
                      ],
                      "fallbackNS": false,
                      "initImmediate": false,
                      "interpolation": Object {
                        "escapeValue": false,
                      },
                      "joinArrays": false,
                      "keySeparator": ".",
                      "load": "all",
                      "missingInterpolationHandler": false,
                      "missingKeyHandler": false,
                      "nonExplicitSupportedLngs": true,
                      "nonExplicitWhitelist": false,
                      "ns": Array [],
                      "nsSeparator": ":",
                      "overloadTranslationOptionHandler": [Function],
                      "parseMissingKeyHandler": false,
                      "partialBundledLanguages": false,
                      "pluralSeparator": "_",
                      "postProcess": false,
                      "postProcessPassResolved": false,
                      "preload": false,
                      "resources": Object {
                        "de": Object {},
                        "en": Object {},
                        "fr": Object {},
                        "ru": Object {},
                        "uz": Object {},
                      },
                      "returnEmptyString": true,
                      "returnNull": true,
                      "returnObjects": false,
                      "returnedObjectHandler": false,
                      "saveMissing": false,
                      "saveMissingPlurals": true,
                      "saveMissingTo": "fallback",
                      "simplifyPluralSuffix": true,
                      "supportedLngs": Array [
                        "de",
                        "en",
                        "fr",
                        "ru",
                        "uz",
                        "cimode",
                      ],
                      "updateMissing": false,
                      "whitelist": false,
                    },
                    "prefix": "i18next:",
                  },
                  "pluralResolver": PluralResolver {
                    "languageUtils": LanguageUtil {
                      "logger": Logger {
                        "debug": true,
                        "logger": Object {
                          "error": [Function],
                          "log": [Function],
                          "output": [Function],
                          "type": "logger",
                          "warn": [Function],
                        },
                        "options": Object {
                          "appendNamespaceToCIMode": false,
                          "appendNamespaceToMissingKey": false,
                          "contextSeparator": "_",
                          "debug": true,
                          "defaultNS": "translation",
                          "fallbackLng": Array [
                            "en",
                          ],
                          "fallbackNS": false,
                          "initImmediate": false,
                          "interpolation": Object {
                            "escapeValue": false,
                          },
                          "joinArrays": false,
                          "keySeparator": ".",
                          "load": "all",
                          "missingInterpolationHandler": false,
                          "missingKeyHandler": false,
                          "nonExplicitSupportedLngs": true,
                          "nonExplicitWhitelist": false,
                          "ns": Array [],
                          "nsSeparator": ":",
                          "overloadTranslationOptionHandler": [Function],
                          "parseMissingKeyHandler": false,
                          "partialBundledLanguages": false,
                          "pluralSeparator": "_",
                          "postProcess": false,
                          "postProcessPassResolved": false,
                          "prefix": "i18next::languageUtils:",
                          "preload": false,
                          "resources": Object {
                            "de": Object {},
                            "en": Object {},
                            "fr": Object {},
                            "ru": Object {},
                            "uz": Object {},
                          },
                          "returnEmptyString": true,
                          "returnNull": true,
                          "returnObjects": false,
                          "returnedObjectHandler": false,
                          "saveMissing": false,
                          "saveMissingPlurals": true,
                          "saveMissingTo": "fallback",
                          "simplifyPluralSuffix": true,
                          "supportedLngs": Array [
                            "de",
                            "en",
                            "fr",
                            "ru",
                            "uz",
                            "cimode",
                          ],
                          "updateMissing": false,
                          "whitelist": false,
                        },
                        "prefix": "i18next::languageUtils:",
                      },
                      "options": Object {
                        "appendNamespaceToCIMode": false,
                        "appendNamespaceToMissingKey": false,
                        "contextSeparator": "_",
                        "debug": true,
                        "defaultNS": "translation",
                        "fallbackLng": Array [
                          "en",
                        ],
                        "fallbackNS": false,
                        "initImmediate": false,
                        "interpolation": Object {
                          "escapeValue": false,
                        },
                        "joinArrays": false,
                        "keySeparator": ".",
                        "load": "all",
                        "missingInterpolationHandler": false,
                        "missingKeyHandler": false,
                        "nonExplicitSupportedLngs": true,
                        "nonExplicitWhitelist": false,
                        "ns": Array [],
                        "nsSeparator": ":",
                        "overloadTranslationOptionHandler": [Function],
                        "parseMissingKeyHandler": false,
                        "partialBundledLanguages": false,
                        "pluralSeparator": "_",
                        "postProcess": false,
                        "postProcessPassResolved": false,
                        "preload": false,
                        "resources": Object {
                          "de": Object {},
                          "en": Object {},
                          "fr": Object {},
                          "ru": Object {},
                          "uz": Object {},
                        },
                        "returnEmptyString": true,
                        "returnNull": true,
                        "returnObjects": false,
                        "returnedObjectHandler": false,
                        "saveMissing": false,
                        "saveMissingPlurals": true,
                        "saveMissingTo": "fallback",
                        "simplifyPluralSuffix": true,
                        "supportedLngs": Array [
                          "de",
                          "en",
                          "fr",
                          "ru",
                          "uz",
                          "cimode",
                        ],
                        "updateMissing": false,
                        "whitelist": false,
                      },
                      "supportedLngs": Array [
                        "de",
                        "en",
                        "fr",
                        "ru",
                        "uz",
                        "cimode",
                      ],
                      "whitelist": Array [
                        "de",
                        "en",
                        "fr",
                        "ru",
                        "uz",
                        "cimode",
                      ],
                    },
                    "logger": Logger {
                      "debug": true,
                      "logger": Object {
                        "error": [Function],
                        "log": [Function],
                        "output": [Function],
                        "type": "logger",
                        "warn": [Function],
                      },
                      "options": Object {
                        "appendNamespaceToCIMode": false,
                        "appendNamespaceToMissingKey": false,
                        "contextSeparator": "_",
                        "debug": true,
                        "defaultNS": "translation",
                        "fallbackLng": Array [
                          "en",
                        ],
                        "fallbackNS": false,
                        "initImmediate": false,
                        "interpolation": Object {
                          "escapeValue": false,
                        },
                        "joinArrays": false,
                        "keySeparator": ".",
                        "load": "all",
                        "missingInterpolationHandler": false,
                        "missingKeyHandler": false,
                        "nonExplicitSupportedLngs": true,
                        "nonExplicitWhitelist": false,
                        "ns": Array [],
                        "nsSeparator": ":",
                        "overloadTranslationOptionHandler": [Function],
                        "parseMissingKeyHandler": false,
                        "partialBundledLanguages": false,
                        "pluralSeparator": "_",
                        "postProcess": false,
                        "postProcessPassResolved": false,
                        "prefix": "i18next::pluralResolver:",
                        "preload": false,
                        "resources": Object {
                          "de": Object {},
                          "en": Object {},
                          "fr": Object {},
                          "ru": Object {},
                          "uz": Object {},
                        },
                        "returnEmptyString": true,
                        "returnNull": true,
                        "returnObjects": false,
                        "returnedObjectHandler": false,
                        "saveMissing": false,
                        "saveMissingPlurals": true,
                        "saveMissingTo": "fallback",
                        "simplifyPluralSuffix": true,
                        "supportedLngs": Array [
                          "de",
                          "en",
                          "fr",
                          "ru",
                          "uz",
                          "cimode",
                        ],
                        "updateMissing": false,
                        "whitelist": false,
                      },
                      "prefix": "i18next::pluralResolver:",
                    },
                    "options": Object {
                      "compatibilityJSON": undefined,
                      "prepend": "_",
                      "simplifyPluralSuffix": true,
                    },
                    "rules": Object {
                      "ach": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "af": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "ak": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "am": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "an": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "ar": Object {
                        "numbers": Array [
                          0,
                          1,
                          2,
                          3,
                          11,
                          100,
                        ],
                        "plurals": [Function],
                      },
                      "arn": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "ast": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "ay": Object {
                        "numbers": Array [
                          1,
                        ],
                        "plurals": [Function],
                      },
                      "az": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "be": Object {
                        "numbers": Array [
                          1,
                          2,
                          5,
                        ],
                        "plurals": [Function],
                      },
                      "bg": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "bn": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "bo": Object {
                        "numbers": Array [
                          1,
                        ],
                        "plurals": [Function],
                      },
                      "br": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "bs": Object {
                        "numbers": Array [
                          1,
                          2,
                          5,
                        ],
                        "plurals": [Function],
                      },
                      "ca": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "cgg": Object {
                        "numbers": Array [
                          1,
                        ],
                        "plurals": [Function],
                      },
                      "cnr": Object {
                        "numbers": Array [
                          1,
                          2,
                          5,
                        ],
                        "plurals": [Function],
                      },
                      "cs": Object {
                        "numbers": Array [
                          1,
                          2,
                          5,
                        ],
                        "plurals": [Function],
                      },
                      "csb": Object {
                        "numbers": Array [
                          1,
                          2,
                          5,
                        ],
                        "plurals": [Function],
                      },
                      "cy": Object {
                        "numbers": Array [
                          1,
                          2,
                          3,
                          8,
                        ],
                        "plurals": [Function],
                      },
                      "da": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "de": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "dev": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "dz": Object {
                        "numbers": Array [
                          1,
                          2,
                          5,
                        ],
                        "plurals": [Function],
                      },
                      "el": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "en": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "eo": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "es": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "et": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "eu": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "fa": Object {
                        "numbers": Array [
                          1,
                        ],
                        "plurals": [Function],
                      },
                      "fi": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "fil": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "fo": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "fr": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "fur": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "fy": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "ga": Object {
                        "numbers": Array [
                          1,
                          2,
                          3,
                          7,
                          11,
                        ],
                        "plurals": [Function],
                      },
                      "gd": Object {
                        "numbers": Array [
                          1,
                          2,
                          3,
                          20,
                        ],
                        "plurals": [Function],
                      },
                      "gl": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "gu": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "gun": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "ha": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "he": Object {
                        "numbers": Array [
                          1,
                          2,
                          20,
                          21,
                        ],
                        "plurals": [Function],
                      },
                      "hi": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "hr": Object {
                        "numbers": Array [
                          1,
                          2,
                          5,
                        ],
                        "plurals": [Function],
                      },
                      "ht": Object {
                        "numbers": Array [
                          1,
                        ],
                        "plurals": [Function],
                      },
                      "hu": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "hy": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "ia": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "id": Object {
                        "numbers": Array [
                          1,
                        ],
                        "plurals": [Function],
                      },
                      "is": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "it": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "iw": Object {
                        "numbers": Array [
                          1,
                          2,
                          20,
                          21,
                        ],
                        "plurals": [Function],
                      },
                      "ja": Object {
                        "numbers": Array [
                          1,
                        ],
                        "plurals": [Function],
                      },
                      "jbo": Object {
                        "numbers": Array [
                          1,
                        ],
                        "plurals": [Function],
                      },
                      "jv": Object {
                        "numbers": Array [
                          0,
                          1,
                        ],
                        "plurals": [Function],
                      },
                      "ka": Object {
                        "numbers": Array [
                          1,
                        ],
                        "plurals": [Function],
                      },
                      "kk": Object {
                        "numbers": Array [
                          1,
                        ],
                        "plurals": [Function],
                      },
                      "km": Object {
                        "numbers": Array [
                          1,
                        ],
                        "plurals": [Function],
                      },
                      "kn": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "ko": Object {
                        "numbers": Array [
                          1,
                        ],
                        "plurals": [Function],
                      },
                      "ku": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "kw": Object {
                        "numbers": Array [
                          1,
                          2,
                          3,
                          4,
                        ],
                        "plurals": [Function],
                      },
                      "ky": Object {
                        "numbers": Array [
                          1,
                        ],
                        "plurals": [Function],
                      },
                      "lb": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "ln": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "lo": Object {
                        "numbers": Array [
                          1,
                        ],
                        "plurals": [Function],
                      },
                      "lt": Object {
                        "numbers": Array [
                          1,
                          2,
                          10,
                        ],
                        "plurals": [Function],
                      },
                      "lv": Object {
                        "numbers": Array [
                          1,
                          2,
                          0,
                        ],
                        "plurals": [Function],
                      },
                      "mai": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "mfe": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "mg": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "mi": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "mk": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "ml": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "mn": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "mnk": Object {
                        "numbers": Array [
                          0,
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "mr": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "ms": Object {
                        "numbers": Array [
                          1,
                        ],
                        "plurals": [Function],
                      },
                      "mt": Object {
                        "numbers": Array [
                          1,
                          2,
                          11,
                          20,
                        ],
                        "plurals": [Function],
                      },
                      "nah": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "nap": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "nb": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "ne": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "nl": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "nn": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "no": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "nso": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "oc": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "or": Object {
                        "numbers": Array [
                          2,
                          1,
                        ],
                        "plurals": [Function],
                      },
                      "pa": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "pap": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "pl": Object {
                        "numbers": Array [
                          1,
                          2,
                          5,
                        ],
                        "plurals": [Function],
                      },
                      "pms": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "ps": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "pt": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "pt-BR": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "pt-PT": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "rm": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "ro": Object {
                        "numbers": Array [
                          1,
                          2,
                          20,
                        ],
                        "plurals": [Function],
                      },
                      "ru": Object {
                        "numbers": Array [
                          1,
                          2,
                          5,
                        ],
                        "plurals": [Function],
                      },
                      "sah": Object {
                        "numbers": Array [
                          1,
                        ],
                        "plurals": [Function],
                      },
                      "sco": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "se": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "si": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "sk": Object {
                        "numbers": Array [
                          1,
                          2,
                          5,
                        ],
                        "plurals": [Function],
                      },
                      "sl": Object {
                        "numbers": Array [
                          5,
                          1,
                          2,
                          3,
                        ],
                        "plurals": [Function],
                      },
                      "so": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "son": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "sq": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "sr": Object {
                        "numbers": Array [
                          1,
                          2,
                          5,
                        ],
                        "plurals": [Function],
                      },
                      "su": Object {
                        "numbers": Array [
                          1,
                        ],
                        "plurals": [Function],
                      },
                      "sv": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "sw": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "ta": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "te": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "tg": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "th": Object {
                        "numbers": Array [
                          1,
                        ],
                        "plurals": [Function],
                      },
                      "ti": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "tk": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "tr": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "tt": Object {
                        "numbers": Array [
                          1,
                        ],
                        "plurals": [Function],
                      },
                      "ug": Object {
                        "numbers": Array [
                          1,
                        ],
                        "plurals": [Function],
                      },
                      "uk": Object {
                        "numbers": Array [
                          1,
                          2,
                          5,
                        ],
                        "plurals": [Function],
                      },
                      "ur": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "uz": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "vi": Object {
                        "numbers": Array [
                          1,
                        ],
                        "plurals": [Function],
                      },
                      "wa": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "wo": Object {
                        "numbers": Array [
                          1,
                        ],
                        "plurals": [Function],
                      },
                      "yo": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "zh": Object {
                        "numbers": Array [
                          1,
                        ],
                        "plurals": [Function],
                      },
                    },
                  },
                  "resourceStore": Object {
                    "de": Object {},
                    "en": Object {},
                    "fr": Object {},
                    "ru": Object {},
                    "uz": Object {},
                  },
                  "utils": Object {
                    "hasLoadedNamespace": [Function],
                  },
                },
                "state": Object {},
                "store": Object {
                  "de": Object {},
                  "en": Object {},
                  "fr": Object {},
                  "ru": Object {},
                  "uz": Object {},
                },
              },
              "interpolator": Interpolator {
                "alwaysFormat": false,
                "escape": [Function],
                "escapeValue": false,
                "format": [Function],
                "formatSeparator": ",",
                "logger": Logger {
                  "debug": true,
                  "logger": Object {
                    "error": [Function],
                    "log": [Function],
                    "output": [Function],
                    "type": "logger",
                    "warn": [Function],
                  },
                  "options": Object {
                    "appendNamespaceToCIMode": false,
                    "appendNamespaceToMissingKey": false,
                    "contextSeparator": "_",
                    "debug": true,
                    "defaultNS": "translation",
                    "fallbackLng": Array [
                      "en",
                    ],
                    "fallbackNS": false,
                    "initImmediate": false,
                    "interpolation": Object {
                      "escapeValue": false,
                    },
                    "joinArrays": false,
                    "keySeparator": ".",
                    "load": "all",
                    "missingInterpolationHandler": false,
                    "missingKeyHandler": false,
                    "nonExplicitSupportedLngs": true,
                    "nonExplicitWhitelist": false,
                    "ns": Array [],
                    "nsSeparator": ":",
                    "overloadTranslationOptionHandler": [Function],
                    "parseMissingKeyHandler": false,
                    "partialBundledLanguages": false,
                    "pluralSeparator": "_",
                    "postProcess": false,
                    "postProcessPassResolved": false,
                    "prefix": "i18next::interpolator:",
                    "preload": false,
                    "resources": Object {
                      "de": Object {},
                      "en": Object {},
                      "fr": Object {},
                      "ru": Object {},
                      "uz": Object {},
                    },
                    "returnEmptyString": true,
                    "returnNull": true,
                    "returnObjects": false,
                    "returnedObjectHandler": false,
                    "saveMissing": false,
                    "saveMissingPlurals": true,
                    "saveMissingTo": "fallback",
                    "simplifyPluralSuffix": true,
                    "supportedLngs": Array [
                      "de",
                      "en",
                      "fr",
                      "ru",
                      "uz",
                      "cimode",
                    ],
                    "updateMissing": false,
                    "whitelist": false,
                  },
                  "prefix": "i18next::interpolator:",
                },
                "maxReplaces": 1000,
                "nestingOptionsSeparator": ",",
                "nestingPrefix": "\\\\$t\\\\(",
                "nestingRegexp": /\\\\\\$t\\\\\\(\\(\\.\\+\\?\\)\\\\\\)/g,
                "nestingSuffix": "\\\\)",
                "options": Object {
                  "appendNamespaceToCIMode": false,
                  "appendNamespaceToMissingKey": false,
                  "contextSeparator": "_",
                  "debug": true,
                  "defaultNS": "translation",
                  "fallbackLng": Array [
                    "en",
                  ],
                  "fallbackNS": false,
                  "initImmediate": false,
                  "interpolation": Object {
                    "escapeValue": false,
                  },
                  "joinArrays": false,
                  "keySeparator": ".",
                  "load": "all",
                  "missingInterpolationHandler": false,
                  "missingKeyHandler": false,
                  "nonExplicitSupportedLngs": true,
                  "nonExplicitWhitelist": false,
                  "ns": Array [],
                  "nsSeparator": ":",
                  "overloadTranslationOptionHandler": [Function],
                  "parseMissingKeyHandler": false,
                  "partialBundledLanguages": false,
                  "pluralSeparator": "_",
                  "postProcess": false,
                  "postProcessPassResolved": false,
                  "preload": false,
                  "resources": Object {
                    "de": Object {},
                    "en": Object {},
                    "fr": Object {},
                    "ru": Object {},
                    "uz": Object {},
                  },
                  "returnEmptyString": true,
                  "returnNull": true,
                  "returnObjects": false,
                  "returnedObjectHandler": false,
                  "saveMissing": false,
                  "saveMissingPlurals": true,
                  "saveMissingTo": "fallback",
                  "simplifyPluralSuffix": true,
                  "supportedLngs": Array [
                    "de",
                    "en",
                    "fr",
                    "ru",
                    "uz",
                    "cimode",
                  ],
                  "updateMissing": false,
                  "whitelist": false,
                },
                "prefix": "{{",
                "regexp": /\\{\\{\\(\\.\\+\\?\\)\\}\\}/g,
                "regexpUnescape": /\\{\\{-\\(\\.\\+\\?\\)\\}\\}/g,
                "suffix": "}}",
                "unescapePrefix": "-",
                "unescapeSuffix": "",
                "useRawValueToEscape": false,
              },
              "language": "en",
              "languageUtils": LanguageUtil {
                "logger": Logger {
                  "debug": true,
                  "logger": Object {
                    "error": [Function],
                    "log": [Function],
                    "output": [Function],
                    "type": "logger",
                    "warn": [Function],
                  },
                  "options": Object {
                    "appendNamespaceToCIMode": false,
                    "appendNamespaceToMissingKey": false,
                    "contextSeparator": "_",
                    "debug": true,
                    "defaultNS": "translation",
                    "fallbackLng": Array [
                      "en",
                    ],
                    "fallbackNS": false,
                    "initImmediate": false,
                    "interpolation": Object {
                      "escapeValue": false,
                    },
                    "joinArrays": false,
                    "keySeparator": ".",
                    "load": "all",
                    "missingInterpolationHandler": false,
                    "missingKeyHandler": false,
                    "nonExplicitSupportedLngs": true,
                    "nonExplicitWhitelist": false,
                    "ns": Array [],
                    "nsSeparator": ":",
                    "overloadTranslationOptionHandler": [Function],
                    "parseMissingKeyHandler": false,
                    "partialBundledLanguages": false,
                    "pluralSeparator": "_",
                    "postProcess": false,
                    "postProcessPassResolved": false,
                    "prefix": "i18next::languageUtils:",
                    "preload": false,
                    "resources": Object {
                      "de": Object {},
                      "en": Object {},
                      "fr": Object {},
                      "ru": Object {},
                      "uz": Object {},
                    },
                    "returnEmptyString": true,
                    "returnNull": true,
                    "returnObjects": false,
                    "returnedObjectHandler": false,
                    "saveMissing": false,
                    "saveMissingPlurals": true,
                    "saveMissingTo": "fallback",
                    "simplifyPluralSuffix": true,
                    "supportedLngs": Array [
                      "de",
                      "en",
                      "fr",
                      "ru",
                      "uz",
                      "cimode",
                    ],
                    "updateMissing": false,
                    "whitelist": false,
                  },
                  "prefix": "i18next::languageUtils:",
                },
                "options": Object {
                  "appendNamespaceToCIMode": false,
                  "appendNamespaceToMissingKey": false,
                  "contextSeparator": "_",
                  "debug": true,
                  "defaultNS": "translation",
                  "fallbackLng": Array [
                    "en",
                  ],
                  "fallbackNS": false,
                  "initImmediate": false,
                  "interpolation": Object {
                    "escapeValue": false,
                  },
                  "joinArrays": false,
                  "keySeparator": ".",
                  "load": "all",
                  "missingInterpolationHandler": false,
                  "missingKeyHandler": false,
                  "nonExplicitSupportedLngs": true,
                  "nonExplicitWhitelist": false,
                  "ns": Array [],
                  "nsSeparator": ":",
                  "overloadTranslationOptionHandler": [Function],
                  "parseMissingKeyHandler": false,
                  "partialBundledLanguages": false,
                  "pluralSeparator": "_",
                  "postProcess": false,
                  "postProcessPassResolved": false,
                  "preload": false,
                  "resources": Object {
                    "de": Object {},
                    "en": Object {},
                    "fr": Object {},
                    "ru": Object {},
                    "uz": Object {},
                  },
                  "returnEmptyString": true,
                  "returnNull": true,
                  "returnObjects": false,
                  "returnedObjectHandler": false,
                  "saveMissing": false,
                  "saveMissingPlurals": true,
                  "saveMissingTo": "fallback",
                  "simplifyPluralSuffix": true,
                  "supportedLngs": Array [
                    "de",
                    "en",
                    "fr",
                    "ru",
                    "uz",
                    "cimode",
                  ],
                  "updateMissing": false,
                  "whitelist": false,
                },
                "supportedLngs": Array [
                  "de",
                  "en",
                  "fr",
                  "ru",
                  "uz",
                  "cimode",
                ],
                "whitelist": Array [
                  "de",
                  "en",
                  "fr",
                  "ru",
                  "uz",
                  "cimode",
                ],
              },
              "logger": Logger {
                "debug": true,
                "logger": Object {
                  "error": [Function],
                  "log": [Function],
                  "output": [Function],
                  "type": "logger",
                  "warn": [Function],
                },
                "options": Object {
                  "appendNamespaceToCIMode": false,
                  "appendNamespaceToMissingKey": false,
                  "contextSeparator": "_",
                  "debug": true,
                  "defaultNS": "translation",
                  "fallbackLng": Array [
                    "en",
                  ],
                  "fallbackNS": false,
                  "initImmediate": false,
                  "interpolation": Object {
                    "escapeValue": false,
                  },
                  "joinArrays": false,
                  "keySeparator": ".",
                  "load": "all",
                  "missingInterpolationHandler": false,
                  "missingKeyHandler": false,
                  "nonExplicitSupportedLngs": true,
                  "nonExplicitWhitelist": false,
                  "ns": Array [],
                  "nsSeparator": ":",
                  "overloadTranslationOptionHandler": [Function],
                  "parseMissingKeyHandler": false,
                  "partialBundledLanguages": false,
                  "pluralSeparator": "_",
                  "postProcess": false,
                  "postProcessPassResolved": false,
                  "prefix": "i18next::translator:",
                  "preload": false,
                  "resources": Object {
                    "de": Object {},
                    "en": Object {},
                    "fr": Object {},
                    "ru": Object {},
                    "uz": Object {},
                  },
                  "returnEmptyString": true,
                  "returnNull": true,
                  "returnObjects": false,
                  "returnedObjectHandler": false,
                  "saveMissing": false,
                  "saveMissingPlurals": true,
                  "saveMissingTo": "fallback",
                  "simplifyPluralSuffix": true,
                  "supportedLngs": Array [
                    "de",
                    "en",
                    "fr",
                    "ru",
                    "uz",
                    "cimode",
                  ],
                  "updateMissing": false,
                  "whitelist": false,
                },
                "prefix": "i18next::translator:",
              },
              "observers": Object {
                "*": Array [
                  [Function],
                ],
              },
              "options": Object {
                "appendNamespaceToCIMode": false,
                "appendNamespaceToMissingKey": false,
                "contextSeparator": "_",
                "debug": true,
                "defaultNS": "translation",
                "fallbackLng": Array [
                  "en",
                ],
                "fallbackNS": false,
                "initImmediate": false,
                "interpolation": Object {
                  "escapeValue": false,
                },
                "joinArrays": false,
                "keySeparator": ".",
                "load": "all",
                "missingInterpolationHandler": false,
                "missingKeyHandler": false,
                "nonExplicitSupportedLngs": true,
                "nonExplicitWhitelist": false,
                "ns": Array [],
                "nsSeparator": ":",
                "overloadTranslationOptionHandler": [Function],
                "parseMissingKeyHandler": false,
                "partialBundledLanguages": false,
                "pluralSeparator": "_",
                "postProcess": false,
                "postProcessPassResolved": false,
                "preload": false,
                "resources": Object {
                  "de": Object {},
                  "en": Object {},
                  "fr": Object {},
                  "ru": Object {},
                  "uz": Object {},
                },
                "returnEmptyString": true,
                "returnNull": true,
                "returnObjects": false,
                "returnedObjectHandler": false,
                "saveMissing": false,
                "saveMissingPlurals": true,
                "saveMissingTo": "fallback",
                "simplifyPluralSuffix": true,
                "supportedLngs": Array [
                  "de",
                  "en",
                  "fr",
                  "ru",
                  "uz",
                  "cimode",
                ],
                "updateMissing": false,
                "whitelist": false,
              },
              "pluralResolver": PluralResolver {
                "languageUtils": LanguageUtil {
                  "logger": Logger {
                    "debug": true,
                    "logger": Object {
                      "error": [Function],
                      "log": [Function],
                      "output": [Function],
                      "type": "logger",
                      "warn": [Function],
                    },
                    "options": Object {
                      "appendNamespaceToCIMode": false,
                      "appendNamespaceToMissingKey": false,
                      "contextSeparator": "_",
                      "debug": true,
                      "defaultNS": "translation",
                      "fallbackLng": Array [
                        "en",
                      ],
                      "fallbackNS": false,
                      "initImmediate": false,
                      "interpolation": Object {
                        "escapeValue": false,
                      },
                      "joinArrays": false,
                      "keySeparator": ".",
                      "load": "all",
                      "missingInterpolationHandler": false,
                      "missingKeyHandler": false,
                      "nonExplicitSupportedLngs": true,
                      "nonExplicitWhitelist": false,
                      "ns": Array [],
                      "nsSeparator": ":",
                      "overloadTranslationOptionHandler": [Function],
                      "parseMissingKeyHandler": false,
                      "partialBundledLanguages": false,
                      "pluralSeparator": "_",
                      "postProcess": false,
                      "postProcessPassResolved": false,
                      "prefix": "i18next::languageUtils:",
                      "preload": false,
                      "resources": Object {
                        "de": Object {},
                        "en": Object {},
                        "fr": Object {},
                        "ru": Object {},
                        "uz": Object {},
                      },
                      "returnEmptyString": true,
                      "returnNull": true,
                      "returnObjects": false,
                      "returnedObjectHandler": false,
                      "saveMissing": false,
                      "saveMissingPlurals": true,
                      "saveMissingTo": "fallback",
                      "simplifyPluralSuffix": true,
                      "supportedLngs": Array [
                        "de",
                        "en",
                        "fr",
                        "ru",
                        "uz",
                        "cimode",
                      ],
                      "updateMissing": false,
                      "whitelist": false,
                    },
                    "prefix": "i18next::languageUtils:",
                  },
                  "options": Object {
                    "appendNamespaceToCIMode": false,
                    "appendNamespaceToMissingKey": false,
                    "contextSeparator": "_",
                    "debug": true,
                    "defaultNS": "translation",
                    "fallbackLng": Array [
                      "en",
                    ],
                    "fallbackNS": false,
                    "initImmediate": false,
                    "interpolation": Object {
                      "escapeValue": false,
                    },
                    "joinArrays": false,
                    "keySeparator": ".",
                    "load": "all",
                    "missingInterpolationHandler": false,
                    "missingKeyHandler": false,
                    "nonExplicitSupportedLngs": true,
                    "nonExplicitWhitelist": false,
                    "ns": Array [],
                    "nsSeparator": ":",
                    "overloadTranslationOptionHandler": [Function],
                    "parseMissingKeyHandler": false,
                    "partialBundledLanguages": false,
                    "pluralSeparator": "_",
                    "postProcess": false,
                    "postProcessPassResolved": false,
                    "preload": false,
                    "resources": Object {
                      "de": Object {},
                      "en": Object {},
                      "fr": Object {},
                      "ru": Object {},
                      "uz": Object {},
                    },
                    "returnEmptyString": true,
                    "returnNull": true,
                    "returnObjects": false,
                    "returnedObjectHandler": false,
                    "saveMissing": false,
                    "saveMissingPlurals": true,
                    "saveMissingTo": "fallback",
                    "simplifyPluralSuffix": true,
                    "supportedLngs": Array [
                      "de",
                      "en",
                      "fr",
                      "ru",
                      "uz",
                      "cimode",
                    ],
                    "updateMissing": false,
                    "whitelist": false,
                  },
                  "supportedLngs": Array [
                    "de",
                    "en",
                    "fr",
                    "ru",
                    "uz",
                    "cimode",
                  ],
                  "whitelist": Array [
                    "de",
                    "en",
                    "fr",
                    "ru",
                    "uz",
                    "cimode",
                  ],
                },
                "logger": Logger {
                  "debug": true,
                  "logger": Object {
                    "error": [Function],
                    "log": [Function],
                    "output": [Function],
                    "type": "logger",
                    "warn": [Function],
                  },
                  "options": Object {
                    "appendNamespaceToCIMode": false,
                    "appendNamespaceToMissingKey": false,
                    "contextSeparator": "_",
                    "debug": true,
                    "defaultNS": "translation",
                    "fallbackLng": Array [
                      "en",
                    ],
                    "fallbackNS": false,
                    "initImmediate": false,
                    "interpolation": Object {
                      "escapeValue": false,
                    },
                    "joinArrays": false,
                    "keySeparator": ".",
                    "load": "all",
                    "missingInterpolationHandler": false,
                    "missingKeyHandler": false,
                    "nonExplicitSupportedLngs": true,
                    "nonExplicitWhitelist": false,
                    "ns": Array [],
                    "nsSeparator": ":",
                    "overloadTranslationOptionHandler": [Function],
                    "parseMissingKeyHandler": false,
                    "partialBundledLanguages": false,
                    "pluralSeparator": "_",
                    "postProcess": false,
                    "postProcessPassResolved": false,
                    "prefix": "i18next::pluralResolver:",
                    "preload": false,
                    "resources": Object {
                      "de": Object {},
                      "en": Object {},
                      "fr": Object {},
                      "ru": Object {},
                      "uz": Object {},
                    },
                    "returnEmptyString": true,
                    "returnNull": true,
                    "returnObjects": false,
                    "returnedObjectHandler": false,
                    "saveMissing": false,
                    "saveMissingPlurals": true,
                    "saveMissingTo": "fallback",
                    "simplifyPluralSuffix": true,
                    "supportedLngs": Array [
                      "de",
                      "en",
                      "fr",
                      "ru",
                      "uz",
                      "cimode",
                    ],
                    "updateMissing": false,
                    "whitelist": false,
                  },
                  "prefix": "i18next::pluralResolver:",
                },
                "options": Object {
                  "compatibilityJSON": undefined,
                  "prepend": "_",
                  "simplifyPluralSuffix": true,
                },
                "rules": Object {
                  "ach": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "af": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "ak": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "am": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "an": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "ar": Object {
                    "numbers": Array [
                      0,
                      1,
                      2,
                      3,
                      11,
                      100,
                    ],
                    "plurals": [Function],
                  },
                  "arn": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "ast": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "ay": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "az": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "be": Object {
                    "numbers": Array [
                      1,
                      2,
                      5,
                    ],
                    "plurals": [Function],
                  },
                  "bg": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "bn": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "bo": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "br": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "bs": Object {
                    "numbers": Array [
                      1,
                      2,
                      5,
                    ],
                    "plurals": [Function],
                  },
                  "ca": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "cgg": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "cnr": Object {
                    "numbers": Array [
                      1,
                      2,
                      5,
                    ],
                    "plurals": [Function],
                  },
                  "cs": Object {
                    "numbers": Array [
                      1,
                      2,
                      5,
                    ],
                    "plurals": [Function],
                  },
                  "csb": Object {
                    "numbers": Array [
                      1,
                      2,
                      5,
                    ],
                    "plurals": [Function],
                  },
                  "cy": Object {
                    "numbers": Array [
                      1,
                      2,
                      3,
                      8,
                    ],
                    "plurals": [Function],
                  },
                  "da": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "de": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "dev": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "dz": Object {
                    "numbers": Array [
                      1,
                      2,
                      5,
                    ],
                    "plurals": [Function],
                  },
                  "el": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "en": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "eo": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "es": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "et": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "eu": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "fa": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "fi": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "fil": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "fo": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "fr": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "fur": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "fy": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "ga": Object {
                    "numbers": Array [
                      1,
                      2,
                      3,
                      7,
                      11,
                    ],
                    "plurals": [Function],
                  },
                  "gd": Object {
                    "numbers": Array [
                      1,
                      2,
                      3,
                      20,
                    ],
                    "plurals": [Function],
                  },
                  "gl": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "gu": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "gun": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "ha": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "he": Object {
                    "numbers": Array [
                      1,
                      2,
                      20,
                      21,
                    ],
                    "plurals": [Function],
                  },
                  "hi": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "hr": Object {
                    "numbers": Array [
                      1,
                      2,
                      5,
                    ],
                    "plurals": [Function],
                  },
                  "ht": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "hu": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "hy": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "ia": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "id": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "is": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "it": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "iw": Object {
                    "numbers": Array [
                      1,
                      2,
                      20,
                      21,
                    ],
                    "plurals": [Function],
                  },
                  "ja": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "jbo": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "jv": Object {
                    "numbers": Array [
                      0,
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "ka": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "kk": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "km": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "kn": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "ko": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "ku": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "kw": Object {
                    "numbers": Array [
                      1,
                      2,
                      3,
                      4,
                    ],
                    "plurals": [Function],
                  },
                  "ky": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "lb": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "ln": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "lo": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "lt": Object {
                    "numbers": Array [
                      1,
                      2,
                      10,
                    ],
                    "plurals": [Function],
                  },
                  "lv": Object {
                    "numbers": Array [
                      1,
                      2,
                      0,
                    ],
                    "plurals": [Function],
                  },
                  "mai": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "mfe": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "mg": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "mi": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "mk": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "ml": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "mn": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "mnk": Object {
                    "numbers": Array [
                      0,
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "mr": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "ms": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "mt": Object {
                    "numbers": Array [
                      1,
                      2,
                      11,
                      20,
                    ],
                    "plurals": [Function],
                  },
                  "nah": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "nap": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "nb": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "ne": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "nl": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "nn": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "no": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "nso": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "oc": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "or": Object {
                    "numbers": Array [
                      2,
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "pa": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "pap": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "pl": Object {
                    "numbers": Array [
                      1,
                      2,
                      5,
                    ],
                    "plurals": [Function],
                  },
                  "pms": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "ps": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "pt": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "pt-BR": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "pt-PT": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "rm": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "ro": Object {
                    "numbers": Array [
                      1,
                      2,
                      20,
                    ],
                    "plurals": [Function],
                  },
                  "ru": Object {
                    "numbers": Array [
                      1,
                      2,
                      5,
                    ],
                    "plurals": [Function],
                  },
                  "sah": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "sco": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "se": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "si": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "sk": Object {
                    "numbers": Array [
                      1,
                      2,
                      5,
                    ],
                    "plurals": [Function],
                  },
                  "sl": Object {
                    "numbers": Array [
                      5,
                      1,
                      2,
                      3,
                    ],
                    "plurals": [Function],
                  },
                  "so": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "son": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "sq": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "sr": Object {
                    "numbers": Array [
                      1,
                      2,
                      5,
                    ],
                    "plurals": [Function],
                  },
                  "su": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "sv": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "sw": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "ta": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "te": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "tg": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "th": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "ti": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "tk": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "tr": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "tt": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "ug": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "uk": Object {
                    "numbers": Array [
                      1,
                      2,
                      5,
                    ],
                    "plurals": [Function],
                  },
                  "ur": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "uz": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "vi": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "wa": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "wo": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "yo": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "zh": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                },
              },
              "resourceStore": Object {
                "de": Object {},
                "en": Object {},
                "fr": Object {},
                "ru": Object {},
                "uz": Object {},
              },
              "utils": Object {
                "hasLoadedNamespace": [Function],
              },
            },
          }
        }
      >
        <Memo(MuiPickerUtils)>
          <MuiPickersUtilsProvider
            libInstance={[Function]}
            locale="en"
            utils={[Function]}
          >
            <Memo(ThemeProvider)
              defaultTheme={[Function]}
            >
              <ThemeProvider
                theme={
                  Object {
                    "breakpoints": Object {
                      "between": [Function],
                      "down": [Function],
                      "keys": Array [
                        "xs",
                        "sm",
                        "md",
                        "lg",
                        "xl",
                      ],
                      "only": [Function],
                      "up": [Function],
                      "values": Object {
                        "lg": 1280,
                        "md": 960,
                        "sm": 600,
                        "xl": 1920,
                        "xs": 0,
                      },
                      "width": [Function],
                    },
                    "direction": "ltr",
                    "mixins": Object {
                      "gutters": [Function],
                      "toolbar": Object {
                        "@media (min-width:0px) and (orientation: landscape)": Object {
                          "minHeight": 48,
                        },
                        "@media (min-width:600px)": Object {
                          "minHeight": 64,
                        },
                        "minHeight": 56,
                      },
                    },
                    "overrides": Object {},
                    "palette": Object {
                      "action": Object {
                        "activatedOpacity": 0.12,
                        "active": "rgba(0, 0, 0, 0.54)",
                        "disabled": "rgba(0, 0, 0, 0.26)",
                        "disabledBackground": "rgba(0, 0, 0, 0.12)",
                        "disabledOpacity": 0.38,
                        "focus": "rgba(0, 0, 0, 0.12)",
                        "focusOpacity": 0.12,
                        "hover": "rgba(0, 0, 0, 0.04)",
                        "hoverOpacity": 0.04,
                        "selected": "rgba(0, 0, 0, 0.08)",
                        "selectedOpacity": 0.08,
                      },
                      "augmentColor": [Function],
                      "background": Object {
                        "default": "#fafafa",
                        "paper": "#fff",
                      },
                      "common": Object {
                        "black": "#000",
                        "white": "#fff",
                      },
                      "contrastThreshold": 3,
                      "divider": "rgba(0, 0, 0, 0.12)",
                      "error": Object {
                        "contrastText": "#fff",
                        "dark": "#d32f2f",
                        "light": "#e57373",
                        "main": "#f44336",
                      },
                      "getContrastText": [Function],
                      "grey": Object {
                        "100": "#f5f5f5",
                        "200": "#eeeeee",
                        "300": "#e0e0e0",
                        "400": "#bdbdbd",
                        "50": "#fafafa",
                        "500": "#9e9e9e",
                        "600": "#757575",
                        "700": "#616161",
                        "800": "#424242",
                        "900": "#212121",
                        "A100": "#d5d5d5",
                        "A200": "#aaaaaa",
                        "A400": "#303030",
                        "A700": "#616161",
                      },
                      "info": Object {
                        "contrastText": "#fff",
                        "dark": "#1976d2",
                        "light": "#64b5f6",
                        "main": "#2196f3",
                      },
                      "primary": Object {
                        "contrastText": "#fff",
                        "dark": "rgb(44, 56, 126)",
                        "light": "rgb(101, 115, 195)",
                        "main": "#3f51b5",
                      },
                      "secondary": Object {
                        "contrastText": "#fff",
                        "dark": "rgb(171, 0, 60)",
                        "light": "rgb(247, 51, 120)",
                        "main": "#f50057",
                      },
                      "success": Object {
                        "contrastText": "rgba(0, 0, 0, 0.87)",
                        "dark": "#388e3c",
                        "light": "#81c784",
                        "main": "#4caf50",
                      },
                      "text": Object {
                        "disabled": "rgba(0, 0, 0, 0.38)",
                        "hint": "rgba(0, 0, 0, 0.38)",
                        "primary": "rgba(0, 0, 0, 0.87)",
                        "secondary": "rgba(0, 0, 0, 0.54)",
                      },
                      "tonalOffset": 0.2,
                      "type": "light",
                      "warning": Object {
                        "contrastText": "rgba(0, 0, 0, 0.87)",
                        "dark": "#f57c00",
                        "light": "#ffb74d",
                        "main": "#ff9800",
                      },
                    },
                    "props": Object {},
                    "shadows": Array [
                      "none",
                      "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                      "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                      "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                      "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                      "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                      "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                      "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                      "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                      "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                      "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                      "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                      "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                      "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                      "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                      "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                      "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                      "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                      "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                      "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                      "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                      "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                      "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                      "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                      "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                    ],
                    "shape": Object {
                      "borderRadius": 4,
                    },
                    "spacing": [Function],
                    "transitions": Object {
                      "create": [Function],
                      "duration": Object {
                        "complex": 375,
                        "enteringScreen": 225,
                        "leavingScreen": 195,
                        "short": 250,
                        "shorter": 200,
                        "shortest": 150,
                        "standard": 300,
                      },
                      "easing": Object {
                        "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                        "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                        "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                        "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                      },
                      "getAutoHeightDuration": [Function],
                    },
                    "typography": Object {
                      "body1": Object {
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "1rem",
                        "fontWeight": 400,
                        "letterSpacing": "0.00938em",
                        "lineHeight": 1.5,
                      },
                      "body2": Object {
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "0.875rem",
                        "fontWeight": 400,
                        "letterSpacing": "0.01071em",
                        "lineHeight": 1.43,
                      },
                      "button": Object {
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "0.875rem",
                        "fontWeight": 500,
                        "letterSpacing": "0.02857em",
                        "lineHeight": 1.75,
                        "textTransform": "uppercase",
                      },
                      "caption": Object {
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "0.75rem",
                        "fontWeight": 400,
                        "letterSpacing": "0.03333em",
                        "lineHeight": 1.66,
                      },
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": 14,
                      "fontWeightBold": 700,
                      "fontWeightLight": 300,
                      "fontWeightMedium": 500,
                      "fontWeightRegular": 400,
                      "h1": Object {
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "6rem",
                        "fontWeight": 300,
                        "letterSpacing": "-0.01562em",
                        "lineHeight": 1.167,
                      },
                      "h2": Object {
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "3.75rem",
                        "fontWeight": 300,
                        "letterSpacing": "-0.00833em",
                        "lineHeight": 1.2,
                      },
                      "h3": Object {
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "3rem",
                        "fontWeight": 400,
                        "letterSpacing": "0em",
                        "lineHeight": 1.167,
                      },
                      "h4": Object {
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "2.125rem",
                        "fontWeight": 400,
                        "letterSpacing": "0.00735em",
                        "lineHeight": 1.235,
                      },
                      "h5": Object {
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "1.5rem",
                        "fontWeight": 400,
                        "letterSpacing": "0em",
                        "lineHeight": 1.334,
                      },
                      "h6": Object {
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "1.25rem",
                        "fontWeight": 500,
                        "letterSpacing": "0.0075em",
                        "lineHeight": 1.6,
                      },
                      "htmlFontSize": 16,
                      "overline": Object {
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "0.75rem",
                        "fontWeight": 400,
                        "letterSpacing": "0.08333em",
                        "lineHeight": 2.66,
                        "textTransform": "uppercase",
                      },
                      "pxToRem": [Function],
                      "round": [Function],
                      "subtitle1": Object {
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "1rem",
                        "fontWeight": 400,
                        "letterSpacing": "0.00938em",
                        "lineHeight": 1.75,
                      },
                      "subtitle2": Object {
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "0.875rem",
                        "fontWeight": 500,
                        "letterSpacing": "0.00714em",
                        "lineHeight": 1.57,
                      },
                    },
                    "zIndex": Object {
                      "appBar": 1100,
                      "drawer": 1200,
                      "mobileStepper": 1000,
                      "modal": 1300,
                      "snackbar": 1400,
                      "speedDial": 1050,
                      "tooltip": 1500,
                    },
                    Symbol(mui.nested): false,
                  }
                }
              >
                <WithStyles(CssBaseline)>
                  <CssBaseline
                    classes={Object {}}
                  />
                </WithStyles(CssBaseline)>
                <QueryClientProvider
                  client={
                    QueryClient {
                      "defaultOptions": Object {},
                      "mutationCache": MutationCache {
                        "config": Object {},
                        "listeners": Array [],
                        "mutationId": 0,
                        "mutations": Array [],
                      },
                      "mutationDefaults": Array [],
                      "queryCache": QueryCache {
                        "config": Object {},
                        "listeners": Array [],
                        "queries": Array [],
                        "queriesMap": Object {},
                      },
                      "queryDefaults": Array [],
                      "unsubscribeFocus": [Function],
                      "unsubscribeOnline": [Function],
                    }
                  }
                >
                  <Memo(PermissionContextProvider)>
                    <Router
                      history={
                        Object {
                          "action": "POP",
                          "block": [Function],
                          "createHref": [Function],
                          "go": [Function],
                          "goBack": [Function],
                          "goForward": [Function],
                          "length": 1,
                          "listen": [Function],
                          "location": Object {
                            "hash": "",
                            "pathname": "/",
                            "search": "",
                            "state": undefined,
                          },
                          "push": [Function],
                          "replace": [Function],
                        }
                      }
                    >
                      <Memo(DialogContextProvider)>
                        <ThemeSelector>
                          <AdvThemeSelector>
                            <LanguageSelector />
                            <StylesProvider
                              generateClassName={[Function]}
                            >
                              <Component>
                                <DialogContent />
                              </Component>
                            </StylesProvider>
                          </AdvThemeSelector>
                        </ThemeSelector>
                        <Memo(ErrorDialogRaw)
                          buttons={
                            Array [
                              Object {
                                "autoFocus": true,
                                "onClick": [Function],
                                "text": "Btn0",
                              },
                            ]
                          }
                          message="Enter your own text in Knobs!"
                          onClose={[Function]}
                          title="Storybook"
                        >
                          <WithStyles(ForwardRef(Dialog))
                            onClose={[Function]}
                            open={true}
                          >
                            <ForwardRef(Dialog)
                              classes={
                                Object {
                                  "container": "MuiDialog-container",
                                  "paper": "MuiDialog-paper",
                                  "paperFullScreen": "MuiDialog-paperFullScreen",
                                  "paperFullWidth": "MuiDialog-paperFullWidth",
                                  "paperScrollBody": "MuiDialog-paperScrollBody",
                                  "paperScrollPaper": "MuiDialog-paperScrollPaper",
                                  "paperWidthFalse": "MuiDialog-paperWidthFalse",
                                  "paperWidthLg": "MuiDialog-paperWidthLg",
                                  "paperWidthMd": "MuiDialog-paperWidthMd",
                                  "paperWidthSm": "MuiDialog-paperWidthSm",
                                  "paperWidthXl": "MuiDialog-paperWidthXl",
                                  "paperWidthXs": "MuiDialog-paperWidthXs",
                                  "root": "MuiDialog-root",
                                  "scrollBody": "MuiDialog-scrollBody",
                                  "scrollPaper": "MuiDialog-scrollPaper",
                                }
                              }
                              onClose={[Function]}
                              open={true}
                            >
                              <ForwardRef(Modal)
                                BackdropComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "Naked": Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "propTypes": Object {
                                        "children": [Function],
                                        "className": [Function],
                                        "classes": [Function],
                                        "invisible": [Function],
                                        "open": [Function],
                                        "transitionDuration": [Function],
                                      },
                                      "render": [Function],
                                    },
                                    "options": Object {
                                      "defaultTheme": Object {
                                        "breakpoints": Object {
                                          "between": [Function],
                                          "down": [Function],
                                          "keys": Array [
                                            "xs",
                                            "sm",
                                            "md",
                                            "lg",
                                            "xl",
                                          ],
                                          "only": [Function],
                                          "up": [Function],
                                          "values": Object {
                                            "lg": 1280,
                                            "md": 960,
                                            "sm": 600,
                                            "xl": 1920,
                                            "xs": 0,
                                          },
                                          "width": [Function],
                                        },
                                        "direction": "ltr",
                                        "mixins": Object {
                                          "gutters": [Function],
                                          "toolbar": Object {
                                            "@media (min-width:0px) and (orientation: landscape)": Object {
                                              "minHeight": 48,
                                            },
                                            "@media (min-width:600px)": Object {
                                              "minHeight": 64,
                                            },
                                            "minHeight": 56,
                                          },
                                        },
                                        "overrides": Object {},
                                        "palette": Object {
                                          "action": Object {
                                            "activatedOpacity": 0.12,
                                            "active": "rgba(0, 0, 0, 0.54)",
                                            "disabled": "rgba(0, 0, 0, 0.26)",
                                            "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                            "disabledOpacity": 0.38,
                                            "focus": "rgba(0, 0, 0, 0.12)",
                                            "focusOpacity": 0.12,
                                            "hover": "rgba(0, 0, 0, 0.04)",
                                            "hoverOpacity": 0.04,
                                            "selected": "rgba(0, 0, 0, 0.08)",
                                            "selectedOpacity": 0.08,
                                          },
                                          "augmentColor": [Function],
                                          "background": Object {
                                            "default": "#fafafa",
                                            "paper": "#fff",
                                          },
                                          "common": Object {
                                            "black": "#000",
                                            "white": "#fff",
                                          },
                                          "contrastThreshold": 3,
                                          "divider": "rgba(0, 0, 0, 0.12)",
                                          "error": Object {
                                            "contrastText": "#fff",
                                            "dark": "#d32f2f",
                                            "light": "#e57373",
                                            "main": "#f44336",
                                          },
                                          "getContrastText": [Function],
                                          "grey": Object {
                                            "100": "#f5f5f5",
                                            "200": "#eeeeee",
                                            "300": "#e0e0e0",
                                            "400": "#bdbdbd",
                                            "50": "#fafafa",
                                            "500": "#9e9e9e",
                                            "600": "#757575",
                                            "700": "#616161",
                                            "800": "#424242",
                                            "900": "#212121",
                                            "A100": "#d5d5d5",
                                            "A200": "#aaaaaa",
                                            "A400": "#303030",
                                            "A700": "#616161",
                                          },
                                          "info": Object {
                                            "contrastText": "#fff",
                                            "dark": "#1976d2",
                                            "light": "#64b5f6",
                                            "main": "#2196f3",
                                          },
                                          "primary": Object {
                                            "contrastText": "#fff",
                                            "dark": "#303f9f",
                                            "light": "#7986cb",
                                            "main": "#3f51b5",
                                          },
                                          "secondary": Object {
                                            "contrastText": "#fff",
                                            "dark": "#c51162",
                                            "light": "#ff4081",
                                            "main": "#f50057",
                                          },
                                          "success": Object {
                                            "contrastText": "rgba(0, 0, 0, 0.87)",
                                            "dark": "#388e3c",
                                            "light": "#81c784",
                                            "main": "#4caf50",
                                          },
                                          "text": Object {
                                            "disabled": "rgba(0, 0, 0, 0.38)",
                                            "hint": "rgba(0, 0, 0, 0.38)",
                                            "primary": "rgba(0, 0, 0, 0.87)",
                                            "secondary": "rgba(0, 0, 0, 0.54)",
                                          },
                                          "tonalOffset": 0.2,
                                          "type": "light",
                                          "warning": Object {
                                            "contrastText": "rgba(0, 0, 0, 0.87)",
                                            "dark": "#f57c00",
                                            "light": "#ffb74d",
                                            "main": "#ff9800",
                                          },
                                        },
                                        "props": Object {},
                                        "shadows": Array [
                                          "none",
                                          "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                          "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                          "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                          "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                          "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                          "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                          "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                          "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                          "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                          "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                          "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                          "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                          "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                          "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                          "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                          "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                          "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                          "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                          "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                          "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                          "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                          "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                          "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                          "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                        ],
                                        "shape": Object {
                                          "borderRadius": 4,
                                        },
                                        "spacing": [Function],
                                        "transitions": Object {
                                          "create": [Function],
                                          "duration": Object {
                                            "complex": 375,
                                            "enteringScreen": 225,
                                            "leavingScreen": 195,
                                            "short": 250,
                                            "shorter": 200,
                                            "shortest": 150,
                                            "standard": 300,
                                          },
                                          "easing": Object {
                                            "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                            "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                            "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                            "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                          },
                                          "getAutoHeightDuration": [Function],
                                        },
                                        "typography": Object {
                                          "body1": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "1rem",
                                            "fontWeight": 400,
                                            "letterSpacing": "0.00938em",
                                            "lineHeight": 1.5,
                                          },
                                          "body2": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "0.875rem",
                                            "fontWeight": 400,
                                            "letterSpacing": "0.01071em",
                                            "lineHeight": 1.43,
                                          },
                                          "button": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "0.875rem",
                                            "fontWeight": 500,
                                            "letterSpacing": "0.02857em",
                                            "lineHeight": 1.75,
                                            "textTransform": "uppercase",
                                          },
                                          "caption": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "0.75rem",
                                            "fontWeight": 400,
                                            "letterSpacing": "0.03333em",
                                            "lineHeight": 1.66,
                                          },
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": 14,
                                          "fontWeightBold": 700,
                                          "fontWeightLight": 300,
                                          "fontWeightMedium": 500,
                                          "fontWeightRegular": 400,
                                          "h1": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "6rem",
                                            "fontWeight": 300,
                                            "letterSpacing": "-0.01562em",
                                            "lineHeight": 1.167,
                                          },
                                          "h2": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "3.75rem",
                                            "fontWeight": 300,
                                            "letterSpacing": "-0.00833em",
                                            "lineHeight": 1.2,
                                          },
                                          "h3": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "3rem",
                                            "fontWeight": 400,
                                            "letterSpacing": "0em",
                                            "lineHeight": 1.167,
                                          },
                                          "h4": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "2.125rem",
                                            "fontWeight": 400,
                                            "letterSpacing": "0.00735em",
                                            "lineHeight": 1.235,
                                          },
                                          "h5": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "1.5rem",
                                            "fontWeight": 400,
                                            "letterSpacing": "0em",
                                            "lineHeight": 1.334,
                                          },
                                          "h6": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "1.25rem",
                                            "fontWeight": 500,
                                            "letterSpacing": "0.0075em",
                                            "lineHeight": 1.6,
                                          },
                                          "htmlFontSize": 16,
                                          "overline": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "0.75rem",
                                            "fontWeight": 400,
                                            "letterSpacing": "0.08333em",
                                            "lineHeight": 2.66,
                                            "textTransform": "uppercase",
                                          },
                                          "pxToRem": [Function],
                                          "round": [Function],
                                          "subtitle1": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "1rem",
                                            "fontWeight": 400,
                                            "letterSpacing": "0.00938em",
                                            "lineHeight": 1.75,
                                          },
                                          "subtitle2": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "0.875rem",
                                            "fontWeight": 500,
                                            "letterSpacing": "0.00714em",
                                            "lineHeight": 1.57,
                                          },
                                        },
                                        "zIndex": Object {
                                          "appBar": 1100,
                                          "drawer": 1200,
                                          "mobileStepper": 1000,
                                          "modal": 1300,
                                          "snackbar": 1400,
                                          "speedDial": 1050,
                                          "tooltip": 1500,
                                        },
                                      },
                                      "name": "MuiBackdrop",
                                    },
                                    "propTypes": Object {
                                      "classes": [Function],
                                      "innerRef": [Function],
                                    },
                                    "render": [Function],
                                    "useStyles": [Function],
                                  }
                                }
                                BackdropProps={
                                  Object {
                                    "transitionDuration": Object {
                                      "enter": 225,
                                      "exit": 195,
                                    },
                                  }
                                }
                                className="MuiDialog-root"
                                closeAfterTransition={true}
                                disableBackdropClick={false}
                                disableEscapeKeyDown={false}
                                onClose={[Function]}
                                open={true}
                              >
                                <ForwardRef(Portal)
                                  disablePortal={false}
                                >
                                  <Portal
                                    containerInfo={
                                      <body
                                        style="padding-right: 0px; overflow: hidden;"
                                      >
                                        <div
                                          aria-hidden="true"
                                          class="app"
                                          id="app"
                                        />
                                        <div
                                          class="MuiDialog-root"
                                          role="presentation"
                                          style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px;"
                                        >
                                          <div
                                            aria-hidden="true"
                                            class="MuiBackdrop-root"
                                            style="opacity: 1; webkit-transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;"
                                          />
                                          <div
                                            data-test="sentinelStart"
                                            tabindex="0"
                                          />
                                          <div
                                            class="MuiDialog-container MuiDialog-scrollPaper"
                                            role="none presentation"
                                            style="opacity: 1; webkit-transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;"
                                            tabindex="-1"
                                          >
                                            <div
                                              class="MuiPaper-root MuiDialog-paper MuiDialog-paperScrollPaper MuiDialog-paperWidthSm MuiPaper-elevation24 MuiPaper-rounded"
                                              role="dialog"
                                            >
                                              <div
                                                class="MuiDialogTitle-root"
                                              >
                                                <h2
                                                  class="MuiTypography-root MuiTypography-h6"
                                                >
                                                  Storybook
                                                </h2>
                                              </div>
                                              <div
                                                class="MuiDialogContent-root"
                                              >
                                                <p
                                                  class="MuiTypography-root MuiDialogContentText-root MuiTypography-body1 MuiTypography-colorTextSecondary"
                                                >
                                                  Enter your own text in Knobs!
                                                </p>
                                              </div>
                                              <div
                                                class="MuiDialogActions-root MuiDialogActions-spacing"
                                              >
                                                <button
                                                  class="MuiButtonBase-root MuiButton-root MuiButton-text MuiButton-textPrimary Mui-focusVisible Mui-focusVisible"
                                                  tabindex="0"
                                                  type="button"
                                                >
                                                  <span
                                                    class="MuiButton-label"
                                                  >
                                                    Btn0
                                                  </span>
                                                  <span
                                                    class="MuiTouchRipple-root"
                                                  >
                                                    <span
                                                      class="MuiTouchRipple-ripple MuiTouchRipple-rippleVisible MuiTouchRipple-ripplePulsate"
                                                      style="width: 1px; height: 1px; top: -0.5px; left: -0.5px;"
                                                    >
                                                      <span
                                                        class="MuiTouchRipple-child MuiTouchRipple-childPulsate"
                                                      />
                                                    </span>
                                                  </span>
                                                </button>
                                              </div>
                                            </div>
                                          </div>
                                          <div
                                            data-test="sentinelEnd"
                                            tabindex="0"
                                          />
                                        </div>
                                      </body>
                                    }
                                  >
                                    <div
                                      className="MuiDialog-root"
                                      onKeyDown={[Function]}
                                      role="presentation"
                                      style={
                                        Object {
                                          "bottom": 0,
                                          "left": 0,
                                          "position": "fixed",
                                          "right": 0,
                                          "top": 0,
                                          "zIndex": 1300,
                                        }
                                      }
                                    >
                                      <WithStyles(ForwardRef(Backdrop))
                                        onClick={[Function]}
                                        open={true}
                                        transitionDuration={
                                          Object {
                                            "enter": 225,
                                            "exit": 195,
                                          }
                                        }
                                      >
                                        <ForwardRef(Backdrop)
                                          classes={
                                            Object {
                                              "invisible": "MuiBackdrop-invisible",
                                              "root": "MuiBackdrop-root",
                                            }
                                          }
                                          onClick={[Function]}
                                          open={true}
                                          transitionDuration={
                                            Object {
                                              "enter": 225,
                                              "exit": 195,
                                            }
                                          }
                                        >
                                          <ForwardRef(Fade)
                                            in={true}
                                            onClick={[Function]}
                                            timeout={
                                              Object {
                                                "enter": 225,
                                                "exit": 195,
                                              }
                                            }
                                          >
                                            <Transition
                                              appear={true}
                                              enter={true}
                                              exit={true}
                                              in={true}
                                              mountOnEnter={false}
                                              onClick={[Function]}
                                              onEnter={[Function]}
                                              onEntered={[Function]}
                                              onEntering={[Function]}
                                              onExit={[Function]}
                                              onExited={[Function]}
                                              onExiting={[Function]}
                                              timeout={
                                                Object {
                                                  "enter": 225,
                                                  "exit": 195,
                                                }
                                              }
                                              unmountOnExit={false}
                                            >
                                              <div
                                                aria-hidden={true}
                                                className="MuiBackdrop-root"
                                                onClick={[Function]}
                                                style={
                                                  Object {
                                                    "opacity": 1,
                                                    "visibility": undefined,
                                                  }
                                                }
                                              />
                                            </Transition>
                                          </ForwardRef(Fade)>
                                        </ForwardRef(Backdrop)>
                                      </WithStyles(ForwardRef(Backdrop))>
                                      <Unstable_TrapFocus
                                        disableAutoFocus={false}
                                        disableEnforceFocus={false}
                                        disableRestoreFocus={false}
                                        getDoc={[Function]}
                                        isEnabled={[Function]}
                                        open={true}
                                      >
                                        <div
                                          data-test="sentinelStart"
                                          tabIndex={0}
                                        />
                                        <ForwardRef(Fade)
                                          appear={true}
                                          in={true}
                                          onEnter={[Function]}
                                          onExited={[Function]}
                                          role="none presentation"
                                          tabIndex="-1"
                                          timeout={
                                            Object {
                                              "enter": 225,
                                              "exit": 195,
                                            }
                                          }
                                        >
                                          <Transition
                                            appear={true}
                                            enter={true}
                                            exit={true}
                                            in={true}
                                            mountOnEnter={false}
                                            onEnter={[Function]}
                                            onEntered={[Function]}
                                            onEntering={[Function]}
                                            onExit={[Function]}
                                            onExited={[Function]}
                                            onExiting={[Function]}
                                            role="none presentation"
                                            tabIndex="-1"
                                            timeout={
                                              Object {
                                                "enter": 225,
                                                "exit": 195,
                                              }
                                            }
                                            unmountOnExit={false}
                                          >
                                            <div
                                              className="MuiDialog-container MuiDialog-scrollPaper"
                                              onMouseDown={[Function]}
                                              onMouseUp={[Function]}
                                              role="none presentation"
                                              style={
                                                Object {
                                                  "opacity": 1,
                                                  "visibility": undefined,
                                                }
                                              }
                                              tabIndex="-1"
                                            >
                                              <WithStyles(ForwardRef(Paper))
                                                className="MuiDialog-paper MuiDialog-paperScrollPaper MuiDialog-paperWidthSm"
                                                elevation={24}
                                                role="dialog"
                                              >
                                                <ForwardRef(Paper)
                                                  className="MuiDialog-paper MuiDialog-paperScrollPaper MuiDialog-paperWidthSm"
                                                  classes={
                                                    Object {
                                                      "elevation0": "MuiPaper-elevation0",
                                                      "elevation1": "MuiPaper-elevation1",
                                                      "elevation10": "MuiPaper-elevation10",
                                                      "elevation11": "MuiPaper-elevation11",
                                                      "elevation12": "MuiPaper-elevation12",
                                                      "elevation13": "MuiPaper-elevation13",
                                                      "elevation14": "MuiPaper-elevation14",
                                                      "elevation15": "MuiPaper-elevation15",
                                                      "elevation16": "MuiPaper-elevation16",
                                                      "elevation17": "MuiPaper-elevation17",
                                                      "elevation18": "MuiPaper-elevation18",
                                                      "elevation19": "MuiPaper-elevation19",
                                                      "elevation2": "MuiPaper-elevation2",
                                                      "elevation20": "MuiPaper-elevation20",
                                                      "elevation21": "MuiPaper-elevation21",
                                                      "elevation22": "MuiPaper-elevation22",
                                                      "elevation23": "MuiPaper-elevation23",
                                                      "elevation24": "MuiPaper-elevation24",
                                                      "elevation3": "MuiPaper-elevation3",
                                                      "elevation4": "MuiPaper-elevation4",
                                                      "elevation5": "MuiPaper-elevation5",
                                                      "elevation6": "MuiPaper-elevation6",
                                                      "elevation7": "MuiPaper-elevation7",
                                                      "elevation8": "MuiPaper-elevation8",
                                                      "elevation9": "MuiPaper-elevation9",
                                                      "outlined": "MuiPaper-outlined",
                                                      "root": "MuiPaper-root",
                                                      "rounded": "MuiPaper-rounded",
                                                    }
                                                  }
                                                  elevation={24}
                                                  role="dialog"
                                                >
                                                  <div
                                                    className="MuiPaper-root MuiDialog-paper MuiDialog-paperScrollPaper MuiDialog-paperWidthSm MuiPaper-elevation24 MuiPaper-rounded"
                                                    role="dialog"
                                                  >
                                                    <WithStyles(ForwardRef(DialogTitle))>
                                                      <ForwardRef(DialogTitle)
                                                        classes={
                                                          Object {
                                                            "root": "MuiDialogTitle-root",
                                                          }
                                                        }
                                                      >
                                                        <div
                                                          className="MuiDialogTitle-root"
                                                        >
                                                          <WithStyles(ForwardRef(Typography))
                                                            component="h2"
                                                            variant="h6"
                                                          >
                                                            <ForwardRef(Typography)
                                                              classes={
                                                                Object {
                                                                  "alignCenter": "MuiTypography-alignCenter",
                                                                  "alignJustify": "MuiTypography-alignJustify",
                                                                  "alignLeft": "MuiTypography-alignLeft",
                                                                  "alignRight": "MuiTypography-alignRight",
                                                                  "body1": "MuiTypography-body1",
                                                                  "body2": "MuiTypography-body2",
                                                                  "button": "MuiTypography-button",
                                                                  "caption": "MuiTypography-caption",
                                                                  "colorError": "MuiTypography-colorError",
                                                                  "colorInherit": "MuiTypography-colorInherit",
                                                                  "colorPrimary": "MuiTypography-colorPrimary",
                                                                  "colorSecondary": "MuiTypography-colorSecondary",
                                                                  "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                  "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                  "displayBlock": "MuiTypography-displayBlock",
                                                                  "displayInline": "MuiTypography-displayInline",
                                                                  "gutterBottom": "MuiTypography-gutterBottom",
                                                                  "h1": "MuiTypography-h1",
                                                                  "h2": "MuiTypography-h2",
                                                                  "h3": "MuiTypography-h3",
                                                                  "h4": "MuiTypography-h4",
                                                                  "h5": "MuiTypography-h5",
                                                                  "h6": "MuiTypography-h6",
                                                                  "noWrap": "MuiTypography-noWrap",
                                                                  "overline": "MuiTypography-overline",
                                                                  "paragraph": "MuiTypography-paragraph",
                                                                  "root": "MuiTypography-root",
                                                                  "srOnly": "MuiTypography-srOnly",
                                                                  "subtitle1": "MuiTypography-subtitle1",
                                                                  "subtitle2": "MuiTypography-subtitle2",
                                                                }
                                                              }
                                                              component="h2"
                                                              variant="h6"
                                                            >
                                                              <h2
                                                                className="MuiTypography-root MuiTypography-h6"
                                                              >
                                                                Storybook
                                                              </h2>
                                                            </ForwardRef(Typography)>
                                                          </WithStyles(ForwardRef(Typography))>
                                                        </div>
                                                      </ForwardRef(DialogTitle)>
                                                    </WithStyles(ForwardRef(DialogTitle))>
                                                    <WithStyles(ForwardRef(DialogContent))>
                                                      <ForwardRef(DialogContent)
                                                        classes={
                                                          Object {
                                                            "dividers": "MuiDialogContent-dividers",
                                                            "root": "MuiDialogContent-root",
                                                          }
                                                        }
                                                      >
                                                        <div
                                                          className="MuiDialogContent-root"
                                                        >
                                                          <WithStyles(ForwardRef(DialogContentText))>
                                                            <ForwardRef(DialogContentText)
                                                              classes={
                                                                Object {
                                                                  "root": "MuiDialogContentText-root",
                                                                }
                                                              }
                                                            >
                                                              <WithStyles(ForwardRef(Typography))
                                                                classes={
                                                                  Object {
                                                                    "root": "MuiDialogContentText-root",
                                                                  }
                                                                }
                                                                color="textSecondary"
                                                                component="p"
                                                                variant="body1"
                                                              >
                                                                <ForwardRef(Typography)
                                                                  classes={
                                                                    Object {
                                                                      "alignCenter": "MuiTypography-alignCenter",
                                                                      "alignJustify": "MuiTypography-alignJustify",
                                                                      "alignLeft": "MuiTypography-alignLeft",
                                                                      "alignRight": "MuiTypography-alignRight",
                                                                      "body1": "MuiTypography-body1",
                                                                      "body2": "MuiTypography-body2",
                                                                      "button": "MuiTypography-button",
                                                                      "caption": "MuiTypography-caption",
                                                                      "colorError": "MuiTypography-colorError",
                                                                      "colorInherit": "MuiTypography-colorInherit",
                                                                      "colorPrimary": "MuiTypography-colorPrimary",
                                                                      "colorSecondary": "MuiTypography-colorSecondary",
                                                                      "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                      "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                      "displayBlock": "MuiTypography-displayBlock",
                                                                      "displayInline": "MuiTypography-displayInline",
                                                                      "gutterBottom": "MuiTypography-gutterBottom",
                                                                      "h1": "MuiTypography-h1",
                                                                      "h2": "MuiTypography-h2",
                                                                      "h3": "MuiTypography-h3",
                                                                      "h4": "MuiTypography-h4",
                                                                      "h5": "MuiTypography-h5",
                                                                      "h6": "MuiTypography-h6",
                                                                      "noWrap": "MuiTypography-noWrap",
                                                                      "overline": "MuiTypography-overline",
                                                                      "paragraph": "MuiTypography-paragraph",
                                                                      "root": "MuiTypography-root MuiDialogContentText-root",
                                                                      "srOnly": "MuiTypography-srOnly",
                                                                      "subtitle1": "MuiTypography-subtitle1",
                                                                      "subtitle2": "MuiTypography-subtitle2",
                                                                    }
                                                                  }
                                                                  color="textSecondary"
                                                                  component="p"
                                                                  variant="body1"
                                                                >
                                                                  <p
                                                                    className="MuiTypography-root MuiDialogContentText-root MuiTypography-body1 MuiTypography-colorTextSecondary"
                                                                  >
                                                                    Enter your own text in Knobs!
                                                                  </p>
                                                                </ForwardRef(Typography)>
                                                              </WithStyles(ForwardRef(Typography))>
                                                            </ForwardRef(DialogContentText)>
                                                          </WithStyles(ForwardRef(DialogContentText))>
                                                        </div>
                                                      </ForwardRef(DialogContent)>
                                                    </WithStyles(ForwardRef(DialogContent))>
                                                    <WithStyles(ForwardRef(DialogActions))>
                                                      <ForwardRef(DialogActions)
                                                        classes={
                                                          Object {
                                                            "root": "MuiDialogActions-root",
                                                            "spacing": "MuiDialogActions-spacing",
                                                          }
                                                        }
                                                      >
                                                        <div
                                                          className="MuiDialogActions-root MuiDialogActions-spacing"
                                                        >
                                                          <WithStyles(ForwardRef(Button))
                                                            autoFocus={true}
                                                            color="primary"
                                                            key="0"
                                                            onClick={[Function]}
                                                          >
                                                            <ForwardRef(Button)
                                                              autoFocus={true}
                                                              classes={
                                                                Object {
                                                                  "colorInherit": "MuiButton-colorInherit",
                                                                  "contained": "MuiButton-contained",
                                                                  "containedPrimary": "MuiButton-containedPrimary",
                                                                  "containedSecondary": "MuiButton-containedSecondary",
                                                                  "containedSizeLarge": "MuiButton-containedSizeLarge",
                                                                  "containedSizeSmall": "MuiButton-containedSizeSmall",
                                                                  "disableElevation": "MuiButton-disableElevation",
                                                                  "disabled": "Mui-disabled",
                                                                  "endIcon": "MuiButton-endIcon",
                                                                  "focusVisible": "Mui-focusVisible",
                                                                  "fullWidth": "MuiButton-fullWidth",
                                                                  "iconSizeLarge": "MuiButton-iconSizeLarge",
                                                                  "iconSizeMedium": "MuiButton-iconSizeMedium",
                                                                  "iconSizeSmall": "MuiButton-iconSizeSmall",
                                                                  "label": "MuiButton-label",
                                                                  "outlined": "MuiButton-outlined",
                                                                  "outlinedPrimary": "MuiButton-outlinedPrimary",
                                                                  "outlinedSecondary": "MuiButton-outlinedSecondary",
                                                                  "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                                                                  "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                                                                  "root": "MuiButton-root",
                                                                  "sizeLarge": "MuiButton-sizeLarge",
                                                                  "sizeSmall": "MuiButton-sizeSmall",
                                                                  "startIcon": "MuiButton-startIcon",
                                                                  "text": "MuiButton-text",
                                                                  "textPrimary": "MuiButton-textPrimary",
                                                                  "textSecondary": "MuiButton-textSecondary",
                                                                  "textSizeLarge": "MuiButton-textSizeLarge",
                                                                  "textSizeSmall": "MuiButton-textSizeSmall",
                                                                }
                                                              }
                                                              color="primary"
                                                              onClick={[Function]}
                                                            >
                                                              <WithStyles(ForwardRef(ButtonBase))
                                                                autoFocus={true}
                                                                className="MuiButton-root MuiButton-text MuiButton-textPrimary"
                                                                component="button"
                                                                disabled={false}
                                                                focusRipple={true}
                                                                focusVisibleClassName="Mui-focusVisible"
                                                                onClick={[Function]}
                                                                type="button"
                                                              >
                                                                <ForwardRef(ButtonBase)
                                                                  autoFocus={true}
                                                                  className="MuiButton-root MuiButton-text MuiButton-textPrimary"
                                                                  classes={
                                                                    Object {
                                                                      "disabled": "Mui-disabled",
                                                                      "focusVisible": "Mui-focusVisible",
                                                                      "root": "MuiButtonBase-root",
                                                                    }
                                                                  }
                                                                  component="button"
                                                                  disabled={false}
                                                                  focusRipple={true}
                                                                  focusVisibleClassName="Mui-focusVisible"
                                                                  onClick={[Function]}
                                                                  type="button"
                                                                >
                                                                  <button
                                                                    autoFocus={true}
                                                                    className="MuiButtonBase-root MuiButton-root MuiButton-text MuiButton-textPrimary Mui-focusVisible Mui-focusVisible"
                                                                    disabled={false}
                                                                    onBlur={[Function]}
                                                                    onClick={[Function]}
                                                                    onDragLeave={[Function]}
                                                                    onFocus={[Function]}
                                                                    onKeyDown={[Function]}
                                                                    onKeyUp={[Function]}
                                                                    onMouseDown={[Function]}
                                                                    onMouseLeave={[Function]}
                                                                    onMouseUp={[Function]}
                                                                    onTouchEnd={[Function]}
                                                                    onTouchMove={[Function]}
                                                                    onTouchStart={[Function]}
                                                                    tabIndex={0}
                                                                    type="button"
                                                                  >
                                                                    <span
                                                                      className="MuiButton-label"
                                                                    >
                                                                      Btn0
                                                                    </span>
                                                                    <WithStyles(memo)
                                                                      center={false}
                                                                    >
                                                                      <ForwardRef(TouchRipple)
                                                                        center={false}
                                                                        classes={
                                                                          Object {
                                                                            "child": "MuiTouchRipple-child",
                                                                            "childLeaving": "MuiTouchRipple-childLeaving",
                                                                            "childPulsate": "MuiTouchRipple-childPulsate",
                                                                            "ripple": "MuiTouchRipple-ripple",
                                                                            "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                            "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                            "root": "MuiTouchRipple-root",
                                                                          }
                                                                        }
                                                                      >
                                                                        <span
                                                                          className="MuiTouchRipple-root"
                                                                        >
                                                                          <TransitionGroup
                                                                            childFactory={[Function]}
                                                                            component={null}
                                                                            exit={true}
                                                                          >
                                                                            <Ripple
                                                                              classes={
                                                                                Object {
                                                                                  "child": "MuiTouchRipple-child",
                                                                                  "childLeaving": "MuiTouchRipple-childLeaving",
                                                                                  "childPulsate": "MuiTouchRipple-childPulsate",
                                                                                  "ripple": "MuiTouchRipple-ripple",
                                                                                  "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                                  "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                                  "root": "MuiTouchRipple-root",
                                                                                }
                                                                              }
                                                                              exit={true}
                                                                              in={true}
                                                                              key=".$0"
                                                                              onExited={[Function]}
                                                                              pulsate={true}
                                                                              rippleSize={1}
                                                                              rippleX={0}
                                                                              rippleY={0}
                                                                              timeout={550}
                                                                            >
                                                                              <span
                                                                                className="MuiTouchRipple-ripple MuiTouchRipple-rippleVisible MuiTouchRipple-ripplePulsate"
                                                                                style={
                                                                                  Object {
                                                                                    "height": 1,
                                                                                    "left": -0.5,
                                                                                    "top": -0.5,
                                                                                    "width": 1,
                                                                                  }
                                                                                }
                                                                              >
                                                                                <span
                                                                                  className="MuiTouchRipple-child MuiTouchRipple-childPulsate"
                                                                                />
                                                                              </span>
                                                                            </Ripple>
                                                                          </TransitionGroup>
                                                                        </span>
                                                                      </ForwardRef(TouchRipple)>
                                                                    </WithStyles(memo)>
                                                                  </button>
                                                                </ForwardRef(ButtonBase)>
                                                              </WithStyles(ForwardRef(ButtonBase))>
                                                            </ForwardRef(Button)>
                                                          </WithStyles(ForwardRef(Button))>
                                                        </div>
                                                      </ForwardRef(DialogActions)>
                                                    </WithStyles(ForwardRef(DialogActions))>
                                                  </div>
                                                </ForwardRef(Paper)>
                                              </WithStyles(ForwardRef(Paper))>
                                            </div>
                                          </Transition>
                                        </ForwardRef(Fade)>
                                        <div
                                          data-test="sentinelEnd"
                                          tabIndex={0}
                                        />
                                      </Unstable_TrapFocus>
                                    </div>
                                  </Portal>
                                </ForwardRef(Portal)>
                              </ForwardRef(Modal)>
                            </ForwardRef(Dialog)>
                          </WithStyles(ForwardRef(Dialog))>
                        </Memo(ErrorDialogRaw)>
                      </Memo(DialogContextProvider)>
                    </Router>
                  </Memo(PermissionContextProvider)>
                </QueryClientProvider>
              </ThemeProvider>
            </Memo(ThemeProvider)>
          </MuiPickersUtilsProvider>
        </Memo(MuiPickerUtils)>
      </I18nextProvider>
    </Memo(CCI18nProvider)>
  </Suspense>
</Memo(ComponentsCareFramework)>
`;

exports[`Storyshots Non-Standalone/Dialog Form (custom) 1`] = `
<Memo(ComponentsCareFramework)
  defaultTheme={[Function]}
>
  <Suspense
    fallback={<Memo(Loader) />}
  >
    <Memo(CCI18nProvider)>
      <I18nextProvider
        defaultNS="translation"
        i18n={
          I18n {
            "addResource": [Function],
            "addResourceBundle": [Function],
            "addResources": [Function],
            "format": undefined,
            "getDataByLanguage": [Function],
            "getResource": [Function],
            "getResourceBundle": [Function],
            "hasResourceBundle": [Function],
            "isInitialized": true,
            "isLanguageChangingTo": undefined,
            "language": "en",
            "languages": Array [
              "en",
            ],
            "logger": Logger {
              "debug": true,
              "logger": Object {
                "error": [Function],
                "log": [Function],
                "output": [Function],
                "type": "logger",
                "warn": [Function],
              },
              "options": Object {
                "appendNamespaceToCIMode": false,
                "appendNamespaceToMissingKey": false,
                "contextSeparator": "_",
                "debug": true,
                "defaultNS": "translation",
                "fallbackLng": Array [
                  "en",
                ],
                "fallbackNS": false,
                "initImmediate": false,
                "interpolation": Object {
                  "escapeValue": false,
                },
                "joinArrays": false,
                "keySeparator": ".",
                "load": "all",
                "missingInterpolationHandler": false,
                "missingKeyHandler": false,
                "nonExplicitSupportedLngs": true,
                "nonExplicitWhitelist": false,
                "ns": Array [],
                "nsSeparator": ":",
                "overloadTranslationOptionHandler": [Function],
                "parseMissingKeyHandler": false,
                "partialBundledLanguages": false,
                "pluralSeparator": "_",
                "postProcess": false,
                "postProcessPassResolved": false,
                "preload": false,
                "resources": Object {
                  "de": Object {},
                  "en": Object {},
                  "fr": Object {},
                  "ru": Object {},
                  "uz": Object {},
                },
                "returnEmptyString": true,
                "returnNull": true,
                "returnObjects": false,
                "returnedObjectHandler": false,
                "saveMissing": false,
                "saveMissingPlurals": true,
                "saveMissingTo": "fallback",
                "simplifyPluralSuffix": true,
                "supportedLngs": Array [
                  "de",
                  "en",
                  "fr",
                  "ru",
                  "uz",
                  "cimode",
                ],
                "updateMissing": false,
                "whitelist": false,
              },
              "prefix": "i18next:",
            },
            "modules": Object {
              "external": Array [],
              "languageDetector": [Function],
            },
            "observers": Object {
              "languageChanged": Array [
                [Function],
                [Function],
              ],
            },
            "options": Object {
              "appendNamespaceToCIMode": false,
              "appendNamespaceToMissingKey": false,
              "contextSeparator": "_",
              "debug": true,
              "defaultNS": "translation",
              "fallbackLng": Array [
                "en",
              ],
              "fallbackNS": false,
              "initImmediate": false,
              "interpolation": Object {
                "escapeValue": false,
              },
              "joinArrays": false,
              "keySeparator": ".",
              "load": "all",
              "missingInterpolationHandler": false,
              "missingKeyHandler": false,
              "nonExplicitSupportedLngs": true,
              "nonExplicitWhitelist": false,
              "ns": Array [],
              "nsSeparator": ":",
              "overloadTranslationOptionHandler": [Function],
              "parseMissingKeyHandler": false,
              "partialBundledLanguages": false,
              "pluralSeparator": "_",
              "postProcess": false,
              "postProcessPassResolved": false,
              "preload": false,
              "resources": Object {
                "de": Object {},
                "en": Object {},
                "fr": Object {},
                "ru": Object {},
                "uz": Object {},
              },
              "returnEmptyString": true,
              "returnNull": true,
              "returnObjects": false,
              "returnedObjectHandler": false,
              "saveMissing": false,
              "saveMissingPlurals": true,
              "saveMissingTo": "fallback",
              "simplifyPluralSuffix": true,
              "supportedLngs": Array [
                "de",
                "en",
                "fr",
                "ru",
                "uz",
                "cimode",
              ],
              "updateMissing": false,
              "whitelist": false,
            },
            "removeResourceBundle": [Function],
            "reportNamespaces": ReportNamespaces {
              "usedNamespaces": Object {
                "translation": true,
              },
            },
            "services": Object {
              "backendConnector": Connector {
                "backend": null,
                "languageUtils": LanguageUtil {
                  "logger": Logger {
                    "debug": true,
                    "logger": Object {
                      "error": [Function],
                      "log": [Function],
                      "output": [Function],
                      "type": "logger",
                      "warn": [Function],
                    },
                    "options": Object {
                      "appendNamespaceToCIMode": false,
                      "appendNamespaceToMissingKey": false,
                      "contextSeparator": "_",
                      "debug": true,
                      "defaultNS": "translation",
                      "fallbackLng": Array [
                        "en",
                      ],
                      "fallbackNS": false,
                      "initImmediate": false,
                      "interpolation": Object {
                        "escapeValue": false,
                      },
                      "joinArrays": false,
                      "keySeparator": ".",
                      "load": "all",
                      "missingInterpolationHandler": false,
                      "missingKeyHandler": false,
                      "nonExplicitSupportedLngs": true,
                      "nonExplicitWhitelist": false,
                      "ns": Array [],
                      "nsSeparator": ":",
                      "overloadTranslationOptionHandler": [Function],
                      "parseMissingKeyHandler": false,
                      "partialBundledLanguages": false,
                      "pluralSeparator": "_",
                      "postProcess": false,
                      "postProcessPassResolved": false,
                      "prefix": "i18next::languageUtils:",
                      "preload": false,
                      "resources": Object {
                        "de": Object {},
                        "en": Object {},
                        "fr": Object {},
                        "ru": Object {},
                        "uz": Object {},
                      },
                      "returnEmptyString": true,
                      "returnNull": true,
                      "returnObjects": false,
                      "returnedObjectHandler": false,
                      "saveMissing": false,
                      "saveMissingPlurals": true,
                      "saveMissingTo": "fallback",
                      "simplifyPluralSuffix": true,
                      "supportedLngs": Array [
                        "de",
                        "en",
                        "fr",
                        "ru",
                        "uz",
                        "cimode",
                      ],
                      "updateMissing": false,
                      "whitelist": false,
                    },
                    "prefix": "i18next::languageUtils:",
                  },
                  "options": Object {
                    "appendNamespaceToCIMode": false,
                    "appendNamespaceToMissingKey": false,
                    "contextSeparator": "_",
                    "debug": true,
                    "defaultNS": "translation",
                    "fallbackLng": Array [
                      "en",
                    ],
                    "fallbackNS": false,
                    "initImmediate": false,
                    "interpolation": Object {
                      "escapeValue": false,
                    },
                    "joinArrays": false,
                    "keySeparator": ".",
                    "load": "all",
                    "missingInterpolationHandler": false,
                    "missingKeyHandler": false,
                    "nonExplicitSupportedLngs": true,
                    "nonExplicitWhitelist": false,
                    "ns": Array [],
                    "nsSeparator": ":",
                    "overloadTranslationOptionHandler": [Function],
                    "parseMissingKeyHandler": false,
                    "partialBundledLanguages": false,
                    "pluralSeparator": "_",
                    "postProcess": false,
                    "postProcessPassResolved": false,
                    "preload": false,
                    "resources": Object {
                      "de": Object {},
                      "en": Object {},
                      "fr": Object {},
                      "ru": Object {},
                      "uz": Object {},
                    },
                    "returnEmptyString": true,
                    "returnNull": true,
                    "returnObjects": false,
                    "returnedObjectHandler": false,
                    "saveMissing": false,
                    "saveMissingPlurals": true,
                    "saveMissingTo": "fallback",
                    "simplifyPluralSuffix": true,
                    "supportedLngs": Array [
                      "de",
                      "en",
                      "fr",
                      "ru",
                      "uz",
                      "cimode",
                    ],
                    "updateMissing": false,
                    "whitelist": false,
                  },
                  "supportedLngs": Array [
                    "de",
                    "en",
                    "fr",
                    "ru",
                    "uz",
                    "cimode",
                  ],
                  "whitelist": Array [
                    "de",
                    "en",
                    "fr",
                    "ru",
                    "uz",
                    "cimode",
                  ],
                },
                "logger": Logger {
                  "debug": true,
                  "logger": Object {
                    "error": [Function],
                    "log": [Function],
                    "output": [Function],
                    "type": "logger",
                    "warn": [Function],
                  },
                  "options": Object {
                    "appendNamespaceToCIMode": false,
                    "appendNamespaceToMissingKey": false,
                    "contextSeparator": "_",
                    "debug": true,
                    "defaultNS": "translation",
                    "fallbackLng": Array [
                      "en",
                    ],
                    "fallbackNS": false,
                    "initImmediate": false,
                    "interpolation": Object {
                      "escapeValue": false,
                    },
                    "joinArrays": false,
                    "keySeparator": ".",
                    "load": "all",
                    "missingInterpolationHandler": false,
                    "missingKeyHandler": false,
                    "nonExplicitSupportedLngs": true,
                    "nonExplicitWhitelist": false,
                    "ns": Array [],
                    "nsSeparator": ":",
                    "overloadTranslationOptionHandler": [Function],
                    "parseMissingKeyHandler": false,
                    "partialBundledLanguages": false,
                    "pluralSeparator": "_",
                    "postProcess": false,
                    "postProcessPassResolved": false,
                    "prefix": "i18next::backendConnector:",
                    "preload": false,
                    "resources": Object {
                      "de": Object {},
                      "en": Object {},
                      "fr": Object {},
                      "ru": Object {},
                      "uz": Object {},
                    },
                    "returnEmptyString": true,
                    "returnNull": true,
                    "returnObjects": false,
                    "returnedObjectHandler": false,
                    "saveMissing": false,
                    "saveMissingPlurals": true,
                    "saveMissingTo": "fallback",
                    "simplifyPluralSuffix": true,
                    "supportedLngs": Array [
                      "de",
                      "en",
                      "fr",
                      "ru",
                      "uz",
                      "cimode",
                    ],
                    "updateMissing": false,
                    "whitelist": false,
                  },
                  "prefix": "i18next::backendConnector:",
                },
                "observers": Object {
                  "*": Array [
                    [Function],
                  ],
                },
                "options": Object {
                  "appendNamespaceToCIMode": false,
                  "appendNamespaceToMissingKey": false,
                  "contextSeparator": "_",
                  "debug": true,
                  "defaultNS": "translation",
                  "fallbackLng": Array [
                    "en",
                  ],
                  "fallbackNS": false,
                  "initImmediate": false,
                  "interpolation": Object {
                    "escapeValue": false,
                  },
                  "joinArrays": false,
                  "keySeparator": ".",
                  "load": "all",
                  "missingInterpolationHandler": false,
                  "missingKeyHandler": false,
                  "nonExplicitSupportedLngs": true,
                  "nonExplicitWhitelist": false,
                  "ns": Array [],
                  "nsSeparator": ":",
                  "overloadTranslationOptionHandler": [Function],
                  "parseMissingKeyHandler": false,
                  "partialBundledLanguages": false,
                  "pluralSeparator": "_",
                  "postProcess": false,
                  "postProcessPassResolved": false,
                  "preload": false,
                  "resources": Object {
                    "de": Object {},
                    "en": Object {},
                    "fr": Object {},
                    "ru": Object {},
                    "uz": Object {},
                  },
                  "returnEmptyString": true,
                  "returnNull": true,
                  "returnObjects": false,
                  "returnedObjectHandler": false,
                  "saveMissing": false,
                  "saveMissingPlurals": true,
                  "saveMissingTo": "fallback",
                  "simplifyPluralSuffix": true,
                  "supportedLngs": Array [
                    "de",
                    "en",
                    "fr",
                    "ru",
                    "uz",
                    "cimode",
                  ],
                  "updateMissing": false,
                  "whitelist": false,
                },
                "queue": Array [],
                "services": [Circular],
                "state": Object {},
                "store": Object {
                  "de": Object {},
                  "en": Object {},
                  "fr": Object {},
                  "ru": Object {},
                  "uz": Object {},
                },
              },
              "interpolator": Interpolator {
                "alwaysFormat": false,
                "escape": [Function],
                "escapeValue": false,
                "format": [Function],
                "formatSeparator": ",",
                "logger": Logger {
                  "debug": true,
                  "logger": Object {
                    "error": [Function],
                    "log": [Function],
                    "output": [Function],
                    "type": "logger",
                    "warn": [Function],
                  },
                  "options": Object {
                    "appendNamespaceToCIMode": false,
                    "appendNamespaceToMissingKey": false,
                    "contextSeparator": "_",
                    "debug": true,
                    "defaultNS": "translation",
                    "fallbackLng": Array [
                      "en",
                    ],
                    "fallbackNS": false,
                    "initImmediate": false,
                    "interpolation": Object {
                      "escapeValue": false,
                    },
                    "joinArrays": false,
                    "keySeparator": ".",
                    "load": "all",
                    "missingInterpolationHandler": false,
                    "missingKeyHandler": false,
                    "nonExplicitSupportedLngs": true,
                    "nonExplicitWhitelist": false,
                    "ns": Array [],
                    "nsSeparator": ":",
                    "overloadTranslationOptionHandler": [Function],
                    "parseMissingKeyHandler": false,
                    "partialBundledLanguages": false,
                    "pluralSeparator": "_",
                    "postProcess": false,
                    "postProcessPassResolved": false,
                    "prefix": "i18next::interpolator:",
                    "preload": false,
                    "resources": Object {
                      "de": Object {},
                      "en": Object {},
                      "fr": Object {},
                      "ru": Object {},
                      "uz": Object {},
                    },
                    "returnEmptyString": true,
                    "returnNull": true,
                    "returnObjects": false,
                    "returnedObjectHandler": false,
                    "saveMissing": false,
                    "saveMissingPlurals": true,
                    "saveMissingTo": "fallback",
                    "simplifyPluralSuffix": true,
                    "supportedLngs": Array [
                      "de",
                      "en",
                      "fr",
                      "ru",
                      "uz",
                      "cimode",
                    ],
                    "updateMissing": false,
                    "whitelist": false,
                  },
                  "prefix": "i18next::interpolator:",
                },
                "maxReplaces": 1000,
                "nestingOptionsSeparator": ",",
                "nestingPrefix": "\\\\$t\\\\(",
                "nestingRegexp": /\\\\\\$t\\\\\\(\\(\\.\\+\\?\\)\\\\\\)/g,
                "nestingSuffix": "\\\\)",
                "options": Object {
                  "appendNamespaceToCIMode": false,
                  "appendNamespaceToMissingKey": false,
                  "contextSeparator": "_",
                  "debug": true,
                  "defaultNS": "translation",
                  "fallbackLng": Array [
                    "en",
                  ],
                  "fallbackNS": false,
                  "initImmediate": false,
                  "interpolation": Object {
                    "escapeValue": false,
                  },
                  "joinArrays": false,
                  "keySeparator": ".",
                  "load": "all",
                  "missingInterpolationHandler": false,
                  "missingKeyHandler": false,
                  "nonExplicitSupportedLngs": true,
                  "nonExplicitWhitelist": false,
                  "ns": Array [],
                  "nsSeparator": ":",
                  "overloadTranslationOptionHandler": [Function],
                  "parseMissingKeyHandler": false,
                  "partialBundledLanguages": false,
                  "pluralSeparator": "_",
                  "postProcess": false,
                  "postProcessPassResolved": false,
                  "preload": false,
                  "resources": Object {
                    "de": Object {},
                    "en": Object {},
                    "fr": Object {},
                    "ru": Object {},
                    "uz": Object {},
                  },
                  "returnEmptyString": true,
                  "returnNull": true,
                  "returnObjects": false,
                  "returnedObjectHandler": false,
                  "saveMissing": false,
                  "saveMissingPlurals": true,
                  "saveMissingTo": "fallback",
                  "simplifyPluralSuffix": true,
                  "supportedLngs": Array [
                    "de",
                    "en",
                    "fr",
                    "ru",
                    "uz",
                    "cimode",
                  ],
                  "updateMissing": false,
                  "whitelist": false,
                },
                "prefix": "{{",
                "regexp": /\\{\\{\\(\\.\\+\\?\\)\\}\\}/g,
                "regexpUnescape": /\\{\\{-\\(\\.\\+\\?\\)\\}\\}/g,
                "suffix": "}}",
                "unescapePrefix": "-",
                "unescapeSuffix": "",
                "useRawValueToEscape": false,
              },
              "languageDetector": Browser {
                "detectors": Object {
                  "cookie": Object {
                    "cacheUserLanguage": [Function],
                    "lookup": [Function],
                    "name": "cookie",
                  },
                  "htmlTag": Object {
                    "lookup": [Function],
                    "name": "htmlTag",
                  },
                  "localStorage": Object {
                    "cacheUserLanguage": [Function],
                    "lookup": [Function],
                    "name": "localStorage",
                  },
                  "navigator": Object {
                    "lookup": [Function],
                    "name": "navigator",
                  },
                  "path": Object {
                    "lookup": [Function],
                    "name": "path",
                  },
                  "querystring": Object {
                    "lookup": [Function],
                    "name": "querystring",
                  },
                  "sessionStorage": Object {
                    "cacheUserLanguage": [Function],
                    "lookup": [Function],
                    "name": "sessionStorage",
                  },
                  "subdomain": Object {
                    "lookup": [Function],
                    "name": "subdomain",
                  },
                },
                "i18nOptions": Object {
                  "appendNamespaceToCIMode": false,
                  "appendNamespaceToMissingKey": false,
                  "contextSeparator": "_",
                  "debug": true,
                  "defaultNS": "translation",
                  "fallbackLng": Array [
                    "en",
                  ],
                  "fallbackNS": false,
                  "initImmediate": false,
                  "interpolation": Object {
                    "escapeValue": false,
                  },
                  "joinArrays": false,
                  "keySeparator": ".",
                  "load": "all",
                  "missingInterpolationHandler": false,
                  "missingKeyHandler": false,
                  "nonExplicitSupportedLngs": true,
                  "nonExplicitWhitelist": false,
                  "ns": Array [],
                  "nsSeparator": ":",
                  "overloadTranslationOptionHandler": [Function],
                  "parseMissingKeyHandler": false,
                  "partialBundledLanguages": false,
                  "pluralSeparator": "_",
                  "postProcess": false,
                  "postProcessPassResolved": false,
                  "preload": false,
                  "resources": Object {
                    "de": Object {},
                    "en": Object {},
                    "fr": Object {},
                    "ru": Object {},
                    "uz": Object {},
                  },
                  "returnEmptyString": true,
                  "returnNull": true,
                  "returnObjects": false,
                  "returnedObjectHandler": false,
                  "saveMissing": false,
                  "saveMissingPlurals": true,
                  "saveMissingTo": "fallback",
                  "simplifyPluralSuffix": true,
                  "supportedLngs": Array [
                    "de",
                    "en",
                    "fr",
                    "ru",
                    "uz",
                    "cimode",
                  ],
                  "updateMissing": false,
                  "whitelist": false,
                },
                "options": Object {
                  "caches": Array [
                    "localStorage",
                  ],
                  "excludeCacheFor": Array [
                    "cimode",
                  ],
                  "lookupCookie": "i18next",
                  "lookupLocalStorage": "i18nextLng",
                  "lookupQuerystring": "lng",
                  "lookupSessionStorage": "i18nextLng",
                  "order": Array [
                    "querystring",
                    "cookie",
                    "localStorage",
                    "sessionStorage",
                    "navigator",
                    "htmlTag",
                  ],
                },
                "services": [Circular],
                "type": "languageDetector",
              },
              "languageUtils": LanguageUtil {
                "logger": Logger {
                  "debug": true,
                  "logger": Object {
                    "error": [Function],
                    "log": [Function],
                    "output": [Function],
                    "type": "logger",
                    "warn": [Function],
                  },
                  "options": Object {
                    "appendNamespaceToCIMode": false,
                    "appendNamespaceToMissingKey": false,
                    "contextSeparator": "_",
                    "debug": true,
                    "defaultNS": "translation",
                    "fallbackLng": Array [
                      "en",
                    ],
                    "fallbackNS": false,
                    "initImmediate": false,
                    "interpolation": Object {
                      "escapeValue": false,
                    },
                    "joinArrays": false,
                    "keySeparator": ".",
                    "load": "all",
                    "missingInterpolationHandler": false,
                    "missingKeyHandler": false,
                    "nonExplicitSupportedLngs": true,
                    "nonExplicitWhitelist": false,
                    "ns": Array [],
                    "nsSeparator": ":",
                    "overloadTranslationOptionHandler": [Function],
                    "parseMissingKeyHandler": false,
                    "partialBundledLanguages": false,
                    "pluralSeparator": "_",
                    "postProcess": false,
                    "postProcessPassResolved": false,
                    "prefix": "i18next::languageUtils:",
                    "preload": false,
                    "resources": Object {
                      "de": Object {},
                      "en": Object {},
                      "fr": Object {},
                      "ru": Object {},
                      "uz": Object {},
                    },
                    "returnEmptyString": true,
                    "returnNull": true,
                    "returnObjects": false,
                    "returnedObjectHandler": false,
                    "saveMissing": false,
                    "saveMissingPlurals": true,
                    "saveMissingTo": "fallback",
                    "simplifyPluralSuffix": true,
                    "supportedLngs": Array [
                      "de",
                      "en",
                      "fr",
                      "ru",
                      "uz",
                      "cimode",
                    ],
                    "updateMissing": false,
                    "whitelist": false,
                  },
                  "prefix": "i18next::languageUtils:",
                },
                "options": Object {
                  "appendNamespaceToCIMode": false,
                  "appendNamespaceToMissingKey": false,
                  "contextSeparator": "_",
                  "debug": true,
                  "defaultNS": "translation",
                  "fallbackLng": Array [
                    "en",
                  ],
                  "fallbackNS": false,
                  "initImmediate": false,
                  "interpolation": Object {
                    "escapeValue": false,
                  },
                  "joinArrays": false,
                  "keySeparator": ".",
                  "load": "all",
                  "missingInterpolationHandler": false,
                  "missingKeyHandler": false,
                  "nonExplicitSupportedLngs": true,
                  "nonExplicitWhitelist": false,
                  "ns": Array [],
                  "nsSeparator": ":",
                  "overloadTranslationOptionHandler": [Function],
                  "parseMissingKeyHandler": false,
                  "partialBundledLanguages": false,
                  "pluralSeparator": "_",
                  "postProcess": false,
                  "postProcessPassResolved": false,
                  "preload": false,
                  "resources": Object {
                    "de": Object {},
                    "en": Object {},
                    "fr": Object {},
                    "ru": Object {},
                    "uz": Object {},
                  },
                  "returnEmptyString": true,
                  "returnNull": true,
                  "returnObjects": false,
                  "returnedObjectHandler": false,
                  "saveMissing": false,
                  "saveMissingPlurals": true,
                  "saveMissingTo": "fallback",
                  "simplifyPluralSuffix": true,
                  "supportedLngs": Array [
                    "de",
                    "en",
                    "fr",
                    "ru",
                    "uz",
                    "cimode",
                  ],
                  "updateMissing": false,
                  "whitelist": false,
                },
                "supportedLngs": Array [
                  "de",
                  "en",
                  "fr",
                  "ru",
                  "uz",
                  "cimode",
                ],
                "whitelist": Array [
                  "de",
                  "en",
                  "fr",
                  "ru",
                  "uz",
                  "cimode",
                ],
              },
              "logger": Logger {
                "debug": true,
                "logger": Object {
                  "error": [Function],
                  "log": [Function],
                  "output": [Function],
                  "type": "logger",
                  "warn": [Function],
                },
                "options": Object {
                  "appendNamespaceToCIMode": false,
                  "appendNamespaceToMissingKey": false,
                  "contextSeparator": "_",
                  "debug": true,
                  "defaultNS": "translation",
                  "fallbackLng": Array [
                    "en",
                  ],
                  "fallbackNS": false,
                  "initImmediate": false,
                  "interpolation": Object {
                    "escapeValue": false,
                  },
                  "joinArrays": false,
                  "keySeparator": ".",
                  "load": "all",
                  "missingInterpolationHandler": false,
                  "missingKeyHandler": false,
                  "nonExplicitSupportedLngs": true,
                  "nonExplicitWhitelist": false,
                  "ns": Array [],
                  "nsSeparator": ":",
                  "overloadTranslationOptionHandler": [Function],
                  "parseMissingKeyHandler": false,
                  "partialBundledLanguages": false,
                  "pluralSeparator": "_",
                  "postProcess": false,
                  "postProcessPassResolved": false,
                  "preload": false,
                  "resources": Object {
                    "de": Object {},
                    "en": Object {},
                    "fr": Object {},
                    "ru": Object {},
                    "uz": Object {},
                  },
                  "returnEmptyString": true,
                  "returnNull": true,
                  "returnObjects": false,
                  "returnedObjectHandler": false,
                  "saveMissing": false,
                  "saveMissingPlurals": true,
                  "saveMissingTo": "fallback",
                  "simplifyPluralSuffix": true,
                  "supportedLngs": Array [
                    "de",
                    "en",
                    "fr",
                    "ru",
                    "uz",
                    "cimode",
                  ],
                  "updateMissing": false,
                  "whitelist": false,
                },
                "prefix": "i18next:",
              },
              "pluralResolver": PluralResolver {
                "languageUtils": LanguageUtil {
                  "logger": Logger {
                    "debug": true,
                    "logger": Object {
                      "error": [Function],
                      "log": [Function],
                      "output": [Function],
                      "type": "logger",
                      "warn": [Function],
                    },
                    "options": Object {
                      "appendNamespaceToCIMode": false,
                      "appendNamespaceToMissingKey": false,
                      "contextSeparator": "_",
                      "debug": true,
                      "defaultNS": "translation",
                      "fallbackLng": Array [
                        "en",
                      ],
                      "fallbackNS": false,
                      "initImmediate": false,
                      "interpolation": Object {
                        "escapeValue": false,
                      },
                      "joinArrays": false,
                      "keySeparator": ".",
                      "load": "all",
                      "missingInterpolationHandler": false,
                      "missingKeyHandler": false,
                      "nonExplicitSupportedLngs": true,
                      "nonExplicitWhitelist": false,
                      "ns": Array [],
                      "nsSeparator": ":",
                      "overloadTranslationOptionHandler": [Function],
                      "parseMissingKeyHandler": false,
                      "partialBundledLanguages": false,
                      "pluralSeparator": "_",
                      "postProcess": false,
                      "postProcessPassResolved": false,
                      "prefix": "i18next::languageUtils:",
                      "preload": false,
                      "resources": Object {
                        "de": Object {},
                        "en": Object {},
                        "fr": Object {},
                        "ru": Object {},
                        "uz": Object {},
                      },
                      "returnEmptyString": true,
                      "returnNull": true,
                      "returnObjects": false,
                      "returnedObjectHandler": false,
                      "saveMissing": false,
                      "saveMissingPlurals": true,
                      "saveMissingTo": "fallback",
                      "simplifyPluralSuffix": true,
                      "supportedLngs": Array [
                        "de",
                        "en",
                        "fr",
                        "ru",
                        "uz",
                        "cimode",
                      ],
                      "updateMissing": false,
                      "whitelist": false,
                    },
                    "prefix": "i18next::languageUtils:",
                  },
                  "options": Object {
                    "appendNamespaceToCIMode": false,
                    "appendNamespaceToMissingKey": false,
                    "contextSeparator": "_",
                    "debug": true,
                    "defaultNS": "translation",
                    "fallbackLng": Array [
                      "en",
                    ],
                    "fallbackNS": false,
                    "initImmediate": false,
                    "interpolation": Object {
                      "escapeValue": false,
                    },
                    "joinArrays": false,
                    "keySeparator": ".",
                    "load": "all",
                    "missingInterpolationHandler": false,
                    "missingKeyHandler": false,
                    "nonExplicitSupportedLngs": true,
                    "nonExplicitWhitelist": false,
                    "ns": Array [],
                    "nsSeparator": ":",
                    "overloadTranslationOptionHandler": [Function],
                    "parseMissingKeyHandler": false,
                    "partialBundledLanguages": false,
                    "pluralSeparator": "_",
                    "postProcess": false,
                    "postProcessPassResolved": false,
                    "preload": false,
                    "resources": Object {
                      "de": Object {},
                      "en": Object {},
                      "fr": Object {},
                      "ru": Object {},
                      "uz": Object {},
                    },
                    "returnEmptyString": true,
                    "returnNull": true,
                    "returnObjects": false,
                    "returnedObjectHandler": false,
                    "saveMissing": false,
                    "saveMissingPlurals": true,
                    "saveMissingTo": "fallback",
                    "simplifyPluralSuffix": true,
                    "supportedLngs": Array [
                      "de",
                      "en",
                      "fr",
                      "ru",
                      "uz",
                      "cimode",
                    ],
                    "updateMissing": false,
                    "whitelist": false,
                  },
                  "supportedLngs": Array [
                    "de",
                    "en",
                    "fr",
                    "ru",
                    "uz",
                    "cimode",
                  ],
                  "whitelist": Array [
                    "de",
                    "en",
                    "fr",
                    "ru",
                    "uz",
                    "cimode",
                  ],
                },
                "logger": Logger {
                  "debug": true,
                  "logger": Object {
                    "error": [Function],
                    "log": [Function],
                    "output": [Function],
                    "type": "logger",
                    "warn": [Function],
                  },
                  "options": Object {
                    "appendNamespaceToCIMode": false,
                    "appendNamespaceToMissingKey": false,
                    "contextSeparator": "_",
                    "debug": true,
                    "defaultNS": "translation",
                    "fallbackLng": Array [
                      "en",
                    ],
                    "fallbackNS": false,
                    "initImmediate": false,
                    "interpolation": Object {
                      "escapeValue": false,
                    },
                    "joinArrays": false,
                    "keySeparator": ".",
                    "load": "all",
                    "missingInterpolationHandler": false,
                    "missingKeyHandler": false,
                    "nonExplicitSupportedLngs": true,
                    "nonExplicitWhitelist": false,
                    "ns": Array [],
                    "nsSeparator": ":",
                    "overloadTranslationOptionHandler": [Function],
                    "parseMissingKeyHandler": false,
                    "partialBundledLanguages": false,
                    "pluralSeparator": "_",
                    "postProcess": false,
                    "postProcessPassResolved": false,
                    "prefix": "i18next::pluralResolver:",
                    "preload": false,
                    "resources": Object {
                      "de": Object {},
                      "en": Object {},
                      "fr": Object {},
                      "ru": Object {},
                      "uz": Object {},
                    },
                    "returnEmptyString": true,
                    "returnNull": true,
                    "returnObjects": false,
                    "returnedObjectHandler": false,
                    "saveMissing": false,
                    "saveMissingPlurals": true,
                    "saveMissingTo": "fallback",
                    "simplifyPluralSuffix": true,
                    "supportedLngs": Array [
                      "de",
                      "en",
                      "fr",
                      "ru",
                      "uz",
                      "cimode",
                    ],
                    "updateMissing": false,
                    "whitelist": false,
                  },
                  "prefix": "i18next::pluralResolver:",
                },
                "options": Object {
                  "compatibilityJSON": undefined,
                  "prepend": "_",
                  "simplifyPluralSuffix": true,
                },
                "rules": Object {
                  "ach": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "af": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "ak": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "am": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "an": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "ar": Object {
                    "numbers": Array [
                      0,
                      1,
                      2,
                      3,
                      11,
                      100,
                    ],
                    "plurals": [Function],
                  },
                  "arn": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "ast": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "ay": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "az": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "be": Object {
                    "numbers": Array [
                      1,
                      2,
                      5,
                    ],
                    "plurals": [Function],
                  },
                  "bg": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "bn": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "bo": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "br": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "bs": Object {
                    "numbers": Array [
                      1,
                      2,
                      5,
                    ],
                    "plurals": [Function],
                  },
                  "ca": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "cgg": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "cnr": Object {
                    "numbers": Array [
                      1,
                      2,
                      5,
                    ],
                    "plurals": [Function],
                  },
                  "cs": Object {
                    "numbers": Array [
                      1,
                      2,
                      5,
                    ],
                    "plurals": [Function],
                  },
                  "csb": Object {
                    "numbers": Array [
                      1,
                      2,
                      5,
                    ],
                    "plurals": [Function],
                  },
                  "cy": Object {
                    "numbers": Array [
                      1,
                      2,
                      3,
                      8,
                    ],
                    "plurals": [Function],
                  },
                  "da": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "de": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "dev": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "dz": Object {
                    "numbers": Array [
                      1,
                      2,
                      5,
                    ],
                    "plurals": [Function],
                  },
                  "el": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "en": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "eo": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "es": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "et": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "eu": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "fa": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "fi": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "fil": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "fo": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "fr": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "fur": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "fy": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "ga": Object {
                    "numbers": Array [
                      1,
                      2,
                      3,
                      7,
                      11,
                    ],
                    "plurals": [Function],
                  },
                  "gd": Object {
                    "numbers": Array [
                      1,
                      2,
                      3,
                      20,
                    ],
                    "plurals": [Function],
                  },
                  "gl": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "gu": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "gun": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "ha": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "he": Object {
                    "numbers": Array [
                      1,
                      2,
                      20,
                      21,
                    ],
                    "plurals": [Function],
                  },
                  "hi": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "hr": Object {
                    "numbers": Array [
                      1,
                      2,
                      5,
                    ],
                    "plurals": [Function],
                  },
                  "ht": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "hu": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "hy": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "ia": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "id": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "is": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "it": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "iw": Object {
                    "numbers": Array [
                      1,
                      2,
                      20,
                      21,
                    ],
                    "plurals": [Function],
                  },
                  "ja": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "jbo": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "jv": Object {
                    "numbers": Array [
                      0,
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "ka": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "kk": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "km": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "kn": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "ko": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "ku": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "kw": Object {
                    "numbers": Array [
                      1,
                      2,
                      3,
                      4,
                    ],
                    "plurals": [Function],
                  },
                  "ky": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "lb": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "ln": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "lo": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "lt": Object {
                    "numbers": Array [
                      1,
                      2,
                      10,
                    ],
                    "plurals": [Function],
                  },
                  "lv": Object {
                    "numbers": Array [
                      1,
                      2,
                      0,
                    ],
                    "plurals": [Function],
                  },
                  "mai": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "mfe": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "mg": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "mi": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "mk": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "ml": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "mn": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "mnk": Object {
                    "numbers": Array [
                      0,
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "mr": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "ms": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "mt": Object {
                    "numbers": Array [
                      1,
                      2,
                      11,
                      20,
                    ],
                    "plurals": [Function],
                  },
                  "nah": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "nap": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "nb": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "ne": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "nl": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "nn": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "no": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "nso": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "oc": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "or": Object {
                    "numbers": Array [
                      2,
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "pa": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "pap": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "pl": Object {
                    "numbers": Array [
                      1,
                      2,
                      5,
                    ],
                    "plurals": [Function],
                  },
                  "pms": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "ps": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "pt": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "pt-BR": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "pt-PT": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "rm": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "ro": Object {
                    "numbers": Array [
                      1,
                      2,
                      20,
                    ],
                    "plurals": [Function],
                  },
                  "ru": Object {
                    "numbers": Array [
                      1,
                      2,
                      5,
                    ],
                    "plurals": [Function],
                  },
                  "sah": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "sco": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "se": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "si": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "sk": Object {
                    "numbers": Array [
                      1,
                      2,
                      5,
                    ],
                    "plurals": [Function],
                  },
                  "sl": Object {
                    "numbers": Array [
                      5,
                      1,
                      2,
                      3,
                    ],
                    "plurals": [Function],
                  },
                  "so": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "son": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "sq": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "sr": Object {
                    "numbers": Array [
                      1,
                      2,
                      5,
                    ],
                    "plurals": [Function],
                  },
                  "su": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "sv": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "sw": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "ta": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "te": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "tg": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "th": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "ti": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "tk": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "tr": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "tt": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "ug": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "uk": Object {
                    "numbers": Array [
                      1,
                      2,
                      5,
                    ],
                    "plurals": [Function],
                  },
                  "ur": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "uz": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "vi": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "wa": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "wo": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "yo": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "zh": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                },
              },
              "resourceStore": Object {
                "de": Object {},
                "en": Object {},
                "fr": Object {},
                "ru": Object {},
                "uz": Object {},
              },
              "utils": Object {
                "hasLoadedNamespace": [Function],
              },
            },
            "store": Object {
              "de": Object {},
              "en": Object {},
              "fr": Object {},
              "ru": Object {},
              "uz": Object {},
            },
            "translator": Translator {
              "backendConnector": Connector {
                "backend": null,
                "languageUtils": LanguageUtil {
                  "logger": Logger {
                    "debug": true,
                    "logger": Object {
                      "error": [Function],
                      "log": [Function],
                      "output": [Function],
                      "type": "logger",
                      "warn": [Function],
                    },
                    "options": Object {
                      "appendNamespaceToCIMode": false,
                      "appendNamespaceToMissingKey": false,
                      "contextSeparator": "_",
                      "debug": true,
                      "defaultNS": "translation",
                      "fallbackLng": Array [
                        "en",
                      ],
                      "fallbackNS": false,
                      "initImmediate": false,
                      "interpolation": Object {
                        "escapeValue": false,
                      },
                      "joinArrays": false,
                      "keySeparator": ".",
                      "load": "all",
                      "missingInterpolationHandler": false,
                      "missingKeyHandler": false,
                      "nonExplicitSupportedLngs": true,
                      "nonExplicitWhitelist": false,
                      "ns": Array [],
                      "nsSeparator": ":",
                      "overloadTranslationOptionHandler": [Function],
                      "parseMissingKeyHandler": false,
                      "partialBundledLanguages": false,
                      "pluralSeparator": "_",
                      "postProcess": false,
                      "postProcessPassResolved": false,
                      "prefix": "i18next::languageUtils:",
                      "preload": false,
                      "resources": Object {
                        "de": Object {},
                        "en": Object {},
                        "fr": Object {},
                        "ru": Object {},
                        "uz": Object {},
                      },
                      "returnEmptyString": true,
                      "returnNull": true,
                      "returnObjects": false,
                      "returnedObjectHandler": false,
                      "saveMissing": false,
                      "saveMissingPlurals": true,
                      "saveMissingTo": "fallback",
                      "simplifyPluralSuffix": true,
                      "supportedLngs": Array [
                        "de",
                        "en",
                        "fr",
                        "ru",
                        "uz",
                        "cimode",
                      ],
                      "updateMissing": false,
                      "whitelist": false,
                    },
                    "prefix": "i18next::languageUtils:",
                  },
                  "options": Object {
                    "appendNamespaceToCIMode": false,
                    "appendNamespaceToMissingKey": false,
                    "contextSeparator": "_",
                    "debug": true,
                    "defaultNS": "translation",
                    "fallbackLng": Array [
                      "en",
                    ],
                    "fallbackNS": false,
                    "initImmediate": false,
                    "interpolation": Object {
                      "escapeValue": false,
                    },
                    "joinArrays": false,
                    "keySeparator": ".",
                    "load": "all",
                    "missingInterpolationHandler": false,
                    "missingKeyHandler": false,
                    "nonExplicitSupportedLngs": true,
                    "nonExplicitWhitelist": false,
                    "ns": Array [],
                    "nsSeparator": ":",
                    "overloadTranslationOptionHandler": [Function],
                    "parseMissingKeyHandler": false,
                    "partialBundledLanguages": false,
                    "pluralSeparator": "_",
                    "postProcess": false,
                    "postProcessPassResolved": false,
                    "preload": false,
                    "resources": Object {
                      "de": Object {},
                      "en": Object {},
                      "fr": Object {},
                      "ru": Object {},
                      "uz": Object {},
                    },
                    "returnEmptyString": true,
                    "returnNull": true,
                    "returnObjects": false,
                    "returnedObjectHandler": false,
                    "saveMissing": false,
                    "saveMissingPlurals": true,
                    "saveMissingTo": "fallback",
                    "simplifyPluralSuffix": true,
                    "supportedLngs": Array [
                      "de",
                      "en",
                      "fr",
                      "ru",
                      "uz",
                      "cimode",
                    ],
                    "updateMissing": false,
                    "whitelist": false,
                  },
                  "supportedLngs": Array [
                    "de",
                    "en",
                    "fr",
                    "ru",
                    "uz",
                    "cimode",
                  ],
                  "whitelist": Array [
                    "de",
                    "en",
                    "fr",
                    "ru",
                    "uz",
                    "cimode",
                  ],
                },
                "logger": Logger {
                  "debug": true,
                  "logger": Object {
                    "error": [Function],
                    "log": [Function],
                    "output": [Function],
                    "type": "logger",
                    "warn": [Function],
                  },
                  "options": Object {
                    "appendNamespaceToCIMode": false,
                    "appendNamespaceToMissingKey": false,
                    "contextSeparator": "_",
                    "debug": true,
                    "defaultNS": "translation",
                    "fallbackLng": Array [
                      "en",
                    ],
                    "fallbackNS": false,
                    "initImmediate": false,
                    "interpolation": Object {
                      "escapeValue": false,
                    },
                    "joinArrays": false,
                    "keySeparator": ".",
                    "load": "all",
                    "missingInterpolationHandler": false,
                    "missingKeyHandler": false,
                    "nonExplicitSupportedLngs": true,
                    "nonExplicitWhitelist": false,
                    "ns": Array [],
                    "nsSeparator": ":",
                    "overloadTranslationOptionHandler": [Function],
                    "parseMissingKeyHandler": false,
                    "partialBundledLanguages": false,
                    "pluralSeparator": "_",
                    "postProcess": false,
                    "postProcessPassResolved": false,
                    "prefix": "i18next::backendConnector:",
                    "preload": false,
                    "resources": Object {
                      "de": Object {},
                      "en": Object {},
                      "fr": Object {},
                      "ru": Object {},
                      "uz": Object {},
                    },
                    "returnEmptyString": true,
                    "returnNull": true,
                    "returnObjects": false,
                    "returnedObjectHandler": false,
                    "saveMissing": false,
                    "saveMissingPlurals": true,
                    "saveMissingTo": "fallback",
                    "simplifyPluralSuffix": true,
                    "supportedLngs": Array [
                      "de",
                      "en",
                      "fr",
                      "ru",
                      "uz",
                      "cimode",
                    ],
                    "updateMissing": false,
                    "whitelist": false,
                  },
                  "prefix": "i18next::backendConnector:",
                },
                "observers": Object {
                  "*": Array [
                    [Function],
                  ],
                },
                "options": Object {
                  "appendNamespaceToCIMode": false,
                  "appendNamespaceToMissingKey": false,
                  "contextSeparator": "_",
                  "debug": true,
                  "defaultNS": "translation",
                  "fallbackLng": Array [
                    "en",
                  ],
                  "fallbackNS": false,
                  "initImmediate": false,
                  "interpolation": Object {
                    "escapeValue": false,
                  },
                  "joinArrays": false,
                  "keySeparator": ".",
                  "load": "all",
                  "missingInterpolationHandler": false,
                  "missingKeyHandler": false,
                  "nonExplicitSupportedLngs": true,
                  "nonExplicitWhitelist": false,
                  "ns": Array [],
                  "nsSeparator": ":",
                  "overloadTranslationOptionHandler": [Function],
                  "parseMissingKeyHandler": false,
                  "partialBundledLanguages": false,
                  "pluralSeparator": "_",
                  "postProcess": false,
                  "postProcessPassResolved": false,
                  "preload": false,
                  "resources": Object {
                    "de": Object {},
                    "en": Object {},
                    "fr": Object {},
                    "ru": Object {},
                    "uz": Object {},
                  },
                  "returnEmptyString": true,
                  "returnNull": true,
                  "returnObjects": false,
                  "returnedObjectHandler": false,
                  "saveMissing": false,
                  "saveMissingPlurals": true,
                  "saveMissingTo": "fallback",
                  "simplifyPluralSuffix": true,
                  "supportedLngs": Array [
                    "de",
                    "en",
                    "fr",
                    "ru",
                    "uz",
                    "cimode",
                  ],
                  "updateMissing": false,
                  "whitelist": false,
                },
                "queue": Array [],
                "services": Object {
                  "backendConnector": [Circular],
                  "interpolator": Interpolator {
                    "alwaysFormat": false,
                    "escape": [Function],
                    "escapeValue": false,
                    "format": [Function],
                    "formatSeparator": ",",
                    "logger": Logger {
                      "debug": true,
                      "logger": Object {
                        "error": [Function],
                        "log": [Function],
                        "output": [Function],
                        "type": "logger",
                        "warn": [Function],
                      },
                      "options": Object {
                        "appendNamespaceToCIMode": false,
                        "appendNamespaceToMissingKey": false,
                        "contextSeparator": "_",
                        "debug": true,
                        "defaultNS": "translation",
                        "fallbackLng": Array [
                          "en",
                        ],
                        "fallbackNS": false,
                        "initImmediate": false,
                        "interpolation": Object {
                          "escapeValue": false,
                        },
                        "joinArrays": false,
                        "keySeparator": ".",
                        "load": "all",
                        "missingInterpolationHandler": false,
                        "missingKeyHandler": false,
                        "nonExplicitSupportedLngs": true,
                        "nonExplicitWhitelist": false,
                        "ns": Array [],
                        "nsSeparator": ":",
                        "overloadTranslationOptionHandler": [Function],
                        "parseMissingKeyHandler": false,
                        "partialBundledLanguages": false,
                        "pluralSeparator": "_",
                        "postProcess": false,
                        "postProcessPassResolved": false,
                        "prefix": "i18next::interpolator:",
                        "preload": false,
                        "resources": Object {
                          "de": Object {},
                          "en": Object {},
                          "fr": Object {},
                          "ru": Object {},
                          "uz": Object {},
                        },
                        "returnEmptyString": true,
                        "returnNull": true,
                        "returnObjects": false,
                        "returnedObjectHandler": false,
                        "saveMissing": false,
                        "saveMissingPlurals": true,
                        "saveMissingTo": "fallback",
                        "simplifyPluralSuffix": true,
                        "supportedLngs": Array [
                          "de",
                          "en",
                          "fr",
                          "ru",
                          "uz",
                          "cimode",
                        ],
                        "updateMissing": false,
                        "whitelist": false,
                      },
                      "prefix": "i18next::interpolator:",
                    },
                    "maxReplaces": 1000,
                    "nestingOptionsSeparator": ",",
                    "nestingPrefix": "\\\\$t\\\\(",
                    "nestingRegexp": /\\\\\\$t\\\\\\(\\(\\.\\+\\?\\)\\\\\\)/g,
                    "nestingSuffix": "\\\\)",
                    "options": Object {
                      "appendNamespaceToCIMode": false,
                      "appendNamespaceToMissingKey": false,
                      "contextSeparator": "_",
                      "debug": true,
                      "defaultNS": "translation",
                      "fallbackLng": Array [
                        "en",
                      ],
                      "fallbackNS": false,
                      "initImmediate": false,
                      "interpolation": Object {
                        "escapeValue": false,
                      },
                      "joinArrays": false,
                      "keySeparator": ".",
                      "load": "all",
                      "missingInterpolationHandler": false,
                      "missingKeyHandler": false,
                      "nonExplicitSupportedLngs": true,
                      "nonExplicitWhitelist": false,
                      "ns": Array [],
                      "nsSeparator": ":",
                      "overloadTranslationOptionHandler": [Function],
                      "parseMissingKeyHandler": false,
                      "partialBundledLanguages": false,
                      "pluralSeparator": "_",
                      "postProcess": false,
                      "postProcessPassResolved": false,
                      "preload": false,
                      "resources": Object {
                        "de": Object {},
                        "en": Object {},
                        "fr": Object {},
                        "ru": Object {},
                        "uz": Object {},
                      },
                      "returnEmptyString": true,
                      "returnNull": true,
                      "returnObjects": false,
                      "returnedObjectHandler": false,
                      "saveMissing": false,
                      "saveMissingPlurals": true,
                      "saveMissingTo": "fallback",
                      "simplifyPluralSuffix": true,
                      "supportedLngs": Array [
                        "de",
                        "en",
                        "fr",
                        "ru",
                        "uz",
                        "cimode",
                      ],
                      "updateMissing": false,
                      "whitelist": false,
                    },
                    "prefix": "{{",
                    "regexp": /\\{\\{\\(\\.\\+\\?\\)\\}\\}/g,
                    "regexpUnescape": /\\{\\{-\\(\\.\\+\\?\\)\\}\\}/g,
                    "suffix": "}}",
                    "unescapePrefix": "-",
                    "unescapeSuffix": "",
                    "useRawValueToEscape": false,
                  },
                  "languageDetector": Browser {
                    "detectors": Object {
                      "cookie": Object {
                        "cacheUserLanguage": [Function],
                        "lookup": [Function],
                        "name": "cookie",
                      },
                      "htmlTag": Object {
                        "lookup": [Function],
                        "name": "htmlTag",
                      },
                      "localStorage": Object {
                        "cacheUserLanguage": [Function],
                        "lookup": [Function],
                        "name": "localStorage",
                      },
                      "navigator": Object {
                        "lookup": [Function],
                        "name": "navigator",
                      },
                      "path": Object {
                        "lookup": [Function],
                        "name": "path",
                      },
                      "querystring": Object {
                        "lookup": [Function],
                        "name": "querystring",
                      },
                      "sessionStorage": Object {
                        "cacheUserLanguage": [Function],
                        "lookup": [Function],
                        "name": "sessionStorage",
                      },
                      "subdomain": Object {
                        "lookup": [Function],
                        "name": "subdomain",
                      },
                    },
                    "i18nOptions": Object {
                      "appendNamespaceToCIMode": false,
                      "appendNamespaceToMissingKey": false,
                      "contextSeparator": "_",
                      "debug": true,
                      "defaultNS": "translation",
                      "fallbackLng": Array [
                        "en",
                      ],
                      "fallbackNS": false,
                      "initImmediate": false,
                      "interpolation": Object {
                        "escapeValue": false,
                      },
                      "joinArrays": false,
                      "keySeparator": ".",
                      "load": "all",
                      "missingInterpolationHandler": false,
                      "missingKeyHandler": false,
                      "nonExplicitSupportedLngs": true,
                      "nonExplicitWhitelist": false,
                      "ns": Array [],
                      "nsSeparator": ":",
                      "overloadTranslationOptionHandler": [Function],
                      "parseMissingKeyHandler": false,
                      "partialBundledLanguages": false,
                      "pluralSeparator": "_",
                      "postProcess": false,
                      "postProcessPassResolved": false,
                      "preload": false,
                      "resources": Object {
                        "de": Object {},
                        "en": Object {},
                        "fr": Object {},
                        "ru": Object {},
                        "uz": Object {},
                      },
                      "returnEmptyString": true,
                      "returnNull": true,
                      "returnObjects": false,
                      "returnedObjectHandler": false,
                      "saveMissing": false,
                      "saveMissingPlurals": true,
                      "saveMissingTo": "fallback",
                      "simplifyPluralSuffix": true,
                      "supportedLngs": Array [
                        "de",
                        "en",
                        "fr",
                        "ru",
                        "uz",
                        "cimode",
                      ],
                      "updateMissing": false,
                      "whitelist": false,
                    },
                    "options": Object {
                      "caches": Array [
                        "localStorage",
                      ],
                      "excludeCacheFor": Array [
                        "cimode",
                      ],
                      "lookupCookie": "i18next",
                      "lookupLocalStorage": "i18nextLng",
                      "lookupQuerystring": "lng",
                      "lookupSessionStorage": "i18nextLng",
                      "order": Array [
                        "querystring",
                        "cookie",
                        "localStorage",
                        "sessionStorage",
                        "navigator",
                        "htmlTag",
                      ],
                    },
                    "services": [Circular],
                    "type": "languageDetector",
                  },
                  "languageUtils": LanguageUtil {
                    "logger": Logger {
                      "debug": true,
                      "logger": Object {
                        "error": [Function],
                        "log": [Function],
                        "output": [Function],
                        "type": "logger",
                        "warn": [Function],
                      },
                      "options": Object {
                        "appendNamespaceToCIMode": false,
                        "appendNamespaceToMissingKey": false,
                        "contextSeparator": "_",
                        "debug": true,
                        "defaultNS": "translation",
                        "fallbackLng": Array [
                          "en",
                        ],
                        "fallbackNS": false,
                        "initImmediate": false,
                        "interpolation": Object {
                          "escapeValue": false,
                        },
                        "joinArrays": false,
                        "keySeparator": ".",
                        "load": "all",
                        "missingInterpolationHandler": false,
                        "missingKeyHandler": false,
                        "nonExplicitSupportedLngs": true,
                        "nonExplicitWhitelist": false,
                        "ns": Array [],
                        "nsSeparator": ":",
                        "overloadTranslationOptionHandler": [Function],
                        "parseMissingKeyHandler": false,
                        "partialBundledLanguages": false,
                        "pluralSeparator": "_",
                        "postProcess": false,
                        "postProcessPassResolved": false,
                        "prefix": "i18next::languageUtils:",
                        "preload": false,
                        "resources": Object {
                          "de": Object {},
                          "en": Object {},
                          "fr": Object {},
                          "ru": Object {},
                          "uz": Object {},
                        },
                        "returnEmptyString": true,
                        "returnNull": true,
                        "returnObjects": false,
                        "returnedObjectHandler": false,
                        "saveMissing": false,
                        "saveMissingPlurals": true,
                        "saveMissingTo": "fallback",
                        "simplifyPluralSuffix": true,
                        "supportedLngs": Array [
                          "de",
                          "en",
                          "fr",
                          "ru",
                          "uz",
                          "cimode",
                        ],
                        "updateMissing": false,
                        "whitelist": false,
                      },
                      "prefix": "i18next::languageUtils:",
                    },
                    "options": Object {
                      "appendNamespaceToCIMode": false,
                      "appendNamespaceToMissingKey": false,
                      "contextSeparator": "_",
                      "debug": true,
                      "defaultNS": "translation",
                      "fallbackLng": Array [
                        "en",
                      ],
                      "fallbackNS": false,
                      "initImmediate": false,
                      "interpolation": Object {
                        "escapeValue": false,
                      },
                      "joinArrays": false,
                      "keySeparator": ".",
                      "load": "all",
                      "missingInterpolationHandler": false,
                      "missingKeyHandler": false,
                      "nonExplicitSupportedLngs": true,
                      "nonExplicitWhitelist": false,
                      "ns": Array [],
                      "nsSeparator": ":",
                      "overloadTranslationOptionHandler": [Function],
                      "parseMissingKeyHandler": false,
                      "partialBundledLanguages": false,
                      "pluralSeparator": "_",
                      "postProcess": false,
                      "postProcessPassResolved": false,
                      "preload": false,
                      "resources": Object {
                        "de": Object {},
                        "en": Object {},
                        "fr": Object {},
                        "ru": Object {},
                        "uz": Object {},
                      },
                      "returnEmptyString": true,
                      "returnNull": true,
                      "returnObjects": false,
                      "returnedObjectHandler": false,
                      "saveMissing": false,
                      "saveMissingPlurals": true,
                      "saveMissingTo": "fallback",
                      "simplifyPluralSuffix": true,
                      "supportedLngs": Array [
                        "de",
                        "en",
                        "fr",
                        "ru",
                        "uz",
                        "cimode",
                      ],
                      "updateMissing": false,
                      "whitelist": false,
                    },
                    "supportedLngs": Array [
                      "de",
                      "en",
                      "fr",
                      "ru",
                      "uz",
                      "cimode",
                    ],
                    "whitelist": Array [
                      "de",
                      "en",
                      "fr",
                      "ru",
                      "uz",
                      "cimode",
                    ],
                  },
                  "logger": Logger {
                    "debug": true,
                    "logger": Object {
                      "error": [Function],
                      "log": [Function],
                      "output": [Function],
                      "type": "logger",
                      "warn": [Function],
                    },
                    "options": Object {
                      "appendNamespaceToCIMode": false,
                      "appendNamespaceToMissingKey": false,
                      "contextSeparator": "_",
                      "debug": true,
                      "defaultNS": "translation",
                      "fallbackLng": Array [
                        "en",
                      ],
                      "fallbackNS": false,
                      "initImmediate": false,
                      "interpolation": Object {
                        "escapeValue": false,
                      },
                      "joinArrays": false,
                      "keySeparator": ".",
                      "load": "all",
                      "missingInterpolationHandler": false,
                      "missingKeyHandler": false,
                      "nonExplicitSupportedLngs": true,
                      "nonExplicitWhitelist": false,
                      "ns": Array [],
                      "nsSeparator": ":",
                      "overloadTranslationOptionHandler": [Function],
                      "parseMissingKeyHandler": false,
                      "partialBundledLanguages": false,
                      "pluralSeparator": "_",
                      "postProcess": false,
                      "postProcessPassResolved": false,
                      "preload": false,
                      "resources": Object {
                        "de": Object {},
                        "en": Object {},
                        "fr": Object {},
                        "ru": Object {},
                        "uz": Object {},
                      },
                      "returnEmptyString": true,
                      "returnNull": true,
                      "returnObjects": false,
                      "returnedObjectHandler": false,
                      "saveMissing": false,
                      "saveMissingPlurals": true,
                      "saveMissingTo": "fallback",
                      "simplifyPluralSuffix": true,
                      "supportedLngs": Array [
                        "de",
                        "en",
                        "fr",
                        "ru",
                        "uz",
                        "cimode",
                      ],
                      "updateMissing": false,
                      "whitelist": false,
                    },
                    "prefix": "i18next:",
                  },
                  "pluralResolver": PluralResolver {
                    "languageUtils": LanguageUtil {
                      "logger": Logger {
                        "debug": true,
                        "logger": Object {
                          "error": [Function],
                          "log": [Function],
                          "output": [Function],
                          "type": "logger",
                          "warn": [Function],
                        },
                        "options": Object {
                          "appendNamespaceToCIMode": false,
                          "appendNamespaceToMissingKey": false,
                          "contextSeparator": "_",
                          "debug": true,
                          "defaultNS": "translation",
                          "fallbackLng": Array [
                            "en",
                          ],
                          "fallbackNS": false,
                          "initImmediate": false,
                          "interpolation": Object {
                            "escapeValue": false,
                          },
                          "joinArrays": false,
                          "keySeparator": ".",
                          "load": "all",
                          "missingInterpolationHandler": false,
                          "missingKeyHandler": false,
                          "nonExplicitSupportedLngs": true,
                          "nonExplicitWhitelist": false,
                          "ns": Array [],
                          "nsSeparator": ":",
                          "overloadTranslationOptionHandler": [Function],
                          "parseMissingKeyHandler": false,
                          "partialBundledLanguages": false,
                          "pluralSeparator": "_",
                          "postProcess": false,
                          "postProcessPassResolved": false,
                          "prefix": "i18next::languageUtils:",
                          "preload": false,
                          "resources": Object {
                            "de": Object {},
                            "en": Object {},
                            "fr": Object {},
                            "ru": Object {},
                            "uz": Object {},
                          },
                          "returnEmptyString": true,
                          "returnNull": true,
                          "returnObjects": false,
                          "returnedObjectHandler": false,
                          "saveMissing": false,
                          "saveMissingPlurals": true,
                          "saveMissingTo": "fallback",
                          "simplifyPluralSuffix": true,
                          "supportedLngs": Array [
                            "de",
                            "en",
                            "fr",
                            "ru",
                            "uz",
                            "cimode",
                          ],
                          "updateMissing": false,
                          "whitelist": false,
                        },
                        "prefix": "i18next::languageUtils:",
                      },
                      "options": Object {
                        "appendNamespaceToCIMode": false,
                        "appendNamespaceToMissingKey": false,
                        "contextSeparator": "_",
                        "debug": true,
                        "defaultNS": "translation",
                        "fallbackLng": Array [
                          "en",
                        ],
                        "fallbackNS": false,
                        "initImmediate": false,
                        "interpolation": Object {
                          "escapeValue": false,
                        },
                        "joinArrays": false,
                        "keySeparator": ".",
                        "load": "all",
                        "missingInterpolationHandler": false,
                        "missingKeyHandler": false,
                        "nonExplicitSupportedLngs": true,
                        "nonExplicitWhitelist": false,
                        "ns": Array [],
                        "nsSeparator": ":",
                        "overloadTranslationOptionHandler": [Function],
                        "parseMissingKeyHandler": false,
                        "partialBundledLanguages": false,
                        "pluralSeparator": "_",
                        "postProcess": false,
                        "postProcessPassResolved": false,
                        "preload": false,
                        "resources": Object {
                          "de": Object {},
                          "en": Object {},
                          "fr": Object {},
                          "ru": Object {},
                          "uz": Object {},
                        },
                        "returnEmptyString": true,
                        "returnNull": true,
                        "returnObjects": false,
                        "returnedObjectHandler": false,
                        "saveMissing": false,
                        "saveMissingPlurals": true,
                        "saveMissingTo": "fallback",
                        "simplifyPluralSuffix": true,
                        "supportedLngs": Array [
                          "de",
                          "en",
                          "fr",
                          "ru",
                          "uz",
                          "cimode",
                        ],
                        "updateMissing": false,
                        "whitelist": false,
                      },
                      "supportedLngs": Array [
                        "de",
                        "en",
                        "fr",
                        "ru",
                        "uz",
                        "cimode",
                      ],
                      "whitelist": Array [
                        "de",
                        "en",
                        "fr",
                        "ru",
                        "uz",
                        "cimode",
                      ],
                    },
                    "logger": Logger {
                      "debug": true,
                      "logger": Object {
                        "error": [Function],
                        "log": [Function],
                        "output": [Function],
                        "type": "logger",
                        "warn": [Function],
                      },
                      "options": Object {
                        "appendNamespaceToCIMode": false,
                        "appendNamespaceToMissingKey": false,
                        "contextSeparator": "_",
                        "debug": true,
                        "defaultNS": "translation",
                        "fallbackLng": Array [
                          "en",
                        ],
                        "fallbackNS": false,
                        "initImmediate": false,
                        "interpolation": Object {
                          "escapeValue": false,
                        },
                        "joinArrays": false,
                        "keySeparator": ".",
                        "load": "all",
                        "missingInterpolationHandler": false,
                        "missingKeyHandler": false,
                        "nonExplicitSupportedLngs": true,
                        "nonExplicitWhitelist": false,
                        "ns": Array [],
                        "nsSeparator": ":",
                        "overloadTranslationOptionHandler": [Function],
                        "parseMissingKeyHandler": false,
                        "partialBundledLanguages": false,
                        "pluralSeparator": "_",
                        "postProcess": false,
                        "postProcessPassResolved": false,
                        "prefix": "i18next::pluralResolver:",
                        "preload": false,
                        "resources": Object {
                          "de": Object {},
                          "en": Object {},
                          "fr": Object {},
                          "ru": Object {},
                          "uz": Object {},
                        },
                        "returnEmptyString": true,
                        "returnNull": true,
                        "returnObjects": false,
                        "returnedObjectHandler": false,
                        "saveMissing": false,
                        "saveMissingPlurals": true,
                        "saveMissingTo": "fallback",
                        "simplifyPluralSuffix": true,
                        "supportedLngs": Array [
                          "de",
                          "en",
                          "fr",
                          "ru",
                          "uz",
                          "cimode",
                        ],
                        "updateMissing": false,
                        "whitelist": false,
                      },
                      "prefix": "i18next::pluralResolver:",
                    },
                    "options": Object {
                      "compatibilityJSON": undefined,
                      "prepend": "_",
                      "simplifyPluralSuffix": true,
                    },
                    "rules": Object {
                      "ach": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "af": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "ak": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "am": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "an": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "ar": Object {
                        "numbers": Array [
                          0,
                          1,
                          2,
                          3,
                          11,
                          100,
                        ],
                        "plurals": [Function],
                      },
                      "arn": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "ast": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "ay": Object {
                        "numbers": Array [
                          1,
                        ],
                        "plurals": [Function],
                      },
                      "az": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "be": Object {
                        "numbers": Array [
                          1,
                          2,
                          5,
                        ],
                        "plurals": [Function],
                      },
                      "bg": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "bn": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "bo": Object {
                        "numbers": Array [
                          1,
                        ],
                        "plurals": [Function],
                      },
                      "br": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "bs": Object {
                        "numbers": Array [
                          1,
                          2,
                          5,
                        ],
                        "plurals": [Function],
                      },
                      "ca": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "cgg": Object {
                        "numbers": Array [
                          1,
                        ],
                        "plurals": [Function],
                      },
                      "cnr": Object {
                        "numbers": Array [
                          1,
                          2,
                          5,
                        ],
                        "plurals": [Function],
                      },
                      "cs": Object {
                        "numbers": Array [
                          1,
                          2,
                          5,
                        ],
                        "plurals": [Function],
                      },
                      "csb": Object {
                        "numbers": Array [
                          1,
                          2,
                          5,
                        ],
                        "plurals": [Function],
                      },
                      "cy": Object {
                        "numbers": Array [
                          1,
                          2,
                          3,
                          8,
                        ],
                        "plurals": [Function],
                      },
                      "da": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "de": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "dev": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "dz": Object {
                        "numbers": Array [
                          1,
                          2,
                          5,
                        ],
                        "plurals": [Function],
                      },
                      "el": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "en": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "eo": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "es": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "et": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "eu": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "fa": Object {
                        "numbers": Array [
                          1,
                        ],
                        "plurals": [Function],
                      },
                      "fi": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "fil": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "fo": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "fr": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "fur": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "fy": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "ga": Object {
                        "numbers": Array [
                          1,
                          2,
                          3,
                          7,
                          11,
                        ],
                        "plurals": [Function],
                      },
                      "gd": Object {
                        "numbers": Array [
                          1,
                          2,
                          3,
                          20,
                        ],
                        "plurals": [Function],
                      },
                      "gl": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "gu": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "gun": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "ha": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "he": Object {
                        "numbers": Array [
                          1,
                          2,
                          20,
                          21,
                        ],
                        "plurals": [Function],
                      },
                      "hi": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "hr": Object {
                        "numbers": Array [
                          1,
                          2,
                          5,
                        ],
                        "plurals": [Function],
                      },
                      "ht": Object {
                        "numbers": Array [
                          1,
                        ],
                        "plurals": [Function],
                      },
                      "hu": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "hy": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "ia": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "id": Object {
                        "numbers": Array [
                          1,
                        ],
                        "plurals": [Function],
                      },
                      "is": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "it": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "iw": Object {
                        "numbers": Array [
                          1,
                          2,
                          20,
                          21,
                        ],
                        "plurals": [Function],
                      },
                      "ja": Object {
                        "numbers": Array [
                          1,
                        ],
                        "plurals": [Function],
                      },
                      "jbo": Object {
                        "numbers": Array [
                          1,
                        ],
                        "plurals": [Function],
                      },
                      "jv": Object {
                        "numbers": Array [
                          0,
                          1,
                        ],
                        "plurals": [Function],
                      },
                      "ka": Object {
                        "numbers": Array [
                          1,
                        ],
                        "plurals": [Function],
                      },
                      "kk": Object {
                        "numbers": Array [
                          1,
                        ],
                        "plurals": [Function],
                      },
                      "km": Object {
                        "numbers": Array [
                          1,
                        ],
                        "plurals": [Function],
                      },
                      "kn": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "ko": Object {
                        "numbers": Array [
                          1,
                        ],
                        "plurals": [Function],
                      },
                      "ku": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "kw": Object {
                        "numbers": Array [
                          1,
                          2,
                          3,
                          4,
                        ],
                        "plurals": [Function],
                      },
                      "ky": Object {
                        "numbers": Array [
                          1,
                        ],
                        "plurals": [Function],
                      },
                      "lb": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "ln": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "lo": Object {
                        "numbers": Array [
                          1,
                        ],
                        "plurals": [Function],
                      },
                      "lt": Object {
                        "numbers": Array [
                          1,
                          2,
                          10,
                        ],
                        "plurals": [Function],
                      },
                      "lv": Object {
                        "numbers": Array [
                          1,
                          2,
                          0,
                        ],
                        "plurals": [Function],
                      },
                      "mai": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "mfe": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "mg": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "mi": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "mk": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "ml": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "mn": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "mnk": Object {
                        "numbers": Array [
                          0,
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "mr": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "ms": Object {
                        "numbers": Array [
                          1,
                        ],
                        "plurals": [Function],
                      },
                      "mt": Object {
                        "numbers": Array [
                          1,
                          2,
                          11,
                          20,
                        ],
                        "plurals": [Function],
                      },
                      "nah": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "nap": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "nb": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "ne": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "nl": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "nn": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "no": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "nso": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "oc": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "or": Object {
                        "numbers": Array [
                          2,
                          1,
                        ],
                        "plurals": [Function],
                      },
                      "pa": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "pap": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "pl": Object {
                        "numbers": Array [
                          1,
                          2,
                          5,
                        ],
                        "plurals": [Function],
                      },
                      "pms": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "ps": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "pt": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "pt-BR": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "pt-PT": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "rm": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "ro": Object {
                        "numbers": Array [
                          1,
                          2,
                          20,
                        ],
                        "plurals": [Function],
                      },
                      "ru": Object {
                        "numbers": Array [
                          1,
                          2,
                          5,
                        ],
                        "plurals": [Function],
                      },
                      "sah": Object {
                        "numbers": Array [
                          1,
                        ],
                        "plurals": [Function],
                      },
                      "sco": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "se": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "si": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "sk": Object {
                        "numbers": Array [
                          1,
                          2,
                          5,
                        ],
                        "plurals": [Function],
                      },
                      "sl": Object {
                        "numbers": Array [
                          5,
                          1,
                          2,
                          3,
                        ],
                        "plurals": [Function],
                      },
                      "so": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "son": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "sq": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "sr": Object {
                        "numbers": Array [
                          1,
                          2,
                          5,
                        ],
                        "plurals": [Function],
                      },
                      "su": Object {
                        "numbers": Array [
                          1,
                        ],
                        "plurals": [Function],
                      },
                      "sv": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "sw": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "ta": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "te": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "tg": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "th": Object {
                        "numbers": Array [
                          1,
                        ],
                        "plurals": [Function],
                      },
                      "ti": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "tk": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "tr": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "tt": Object {
                        "numbers": Array [
                          1,
                        ],
                        "plurals": [Function],
                      },
                      "ug": Object {
                        "numbers": Array [
                          1,
                        ],
                        "plurals": [Function],
                      },
                      "uk": Object {
                        "numbers": Array [
                          1,
                          2,
                          5,
                        ],
                        "plurals": [Function],
                      },
                      "ur": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "uz": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "vi": Object {
                        "numbers": Array [
                          1,
                        ],
                        "plurals": [Function],
                      },
                      "wa": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "wo": Object {
                        "numbers": Array [
                          1,
                        ],
                        "plurals": [Function],
                      },
                      "yo": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "zh": Object {
                        "numbers": Array [
                          1,
                        ],
                        "plurals": [Function],
                      },
                    },
                  },
                  "resourceStore": Object {
                    "de": Object {},
                    "en": Object {},
                    "fr": Object {},
                    "ru": Object {},
                    "uz": Object {},
                  },
                  "utils": Object {
                    "hasLoadedNamespace": [Function],
                  },
                },
                "state": Object {},
                "store": Object {
                  "de": Object {},
                  "en": Object {},
                  "fr": Object {},
                  "ru": Object {},
                  "uz": Object {},
                },
              },
              "interpolator": Interpolator {
                "alwaysFormat": false,
                "escape": [Function],
                "escapeValue": false,
                "format": [Function],
                "formatSeparator": ",",
                "logger": Logger {
                  "debug": true,
                  "logger": Object {
                    "error": [Function],
                    "log": [Function],
                    "output": [Function],
                    "type": "logger",
                    "warn": [Function],
                  },
                  "options": Object {
                    "appendNamespaceToCIMode": false,
                    "appendNamespaceToMissingKey": false,
                    "contextSeparator": "_",
                    "debug": true,
                    "defaultNS": "translation",
                    "fallbackLng": Array [
                      "en",
                    ],
                    "fallbackNS": false,
                    "initImmediate": false,
                    "interpolation": Object {
                      "escapeValue": false,
                    },
                    "joinArrays": false,
                    "keySeparator": ".",
                    "load": "all",
                    "missingInterpolationHandler": false,
                    "missingKeyHandler": false,
                    "nonExplicitSupportedLngs": true,
                    "nonExplicitWhitelist": false,
                    "ns": Array [],
                    "nsSeparator": ":",
                    "overloadTranslationOptionHandler": [Function],
                    "parseMissingKeyHandler": false,
                    "partialBundledLanguages": false,
                    "pluralSeparator": "_",
                    "postProcess": false,
                    "postProcessPassResolved": false,
                    "prefix": "i18next::interpolator:",
                    "preload": false,
                    "resources": Object {
                      "de": Object {},
                      "en": Object {},
                      "fr": Object {},
                      "ru": Object {},
                      "uz": Object {},
                    },
                    "returnEmptyString": true,
                    "returnNull": true,
                    "returnObjects": false,
                    "returnedObjectHandler": false,
                    "saveMissing": false,
                    "saveMissingPlurals": true,
                    "saveMissingTo": "fallback",
                    "simplifyPluralSuffix": true,
                    "supportedLngs": Array [
                      "de",
                      "en",
                      "fr",
                      "ru",
                      "uz",
                      "cimode",
                    ],
                    "updateMissing": false,
                    "whitelist": false,
                  },
                  "prefix": "i18next::interpolator:",
                },
                "maxReplaces": 1000,
                "nestingOptionsSeparator": ",",
                "nestingPrefix": "\\\\$t\\\\(",
                "nestingRegexp": /\\\\\\$t\\\\\\(\\(\\.\\+\\?\\)\\\\\\)/g,
                "nestingSuffix": "\\\\)",
                "options": Object {
                  "appendNamespaceToCIMode": false,
                  "appendNamespaceToMissingKey": false,
                  "contextSeparator": "_",
                  "debug": true,
                  "defaultNS": "translation",
                  "fallbackLng": Array [
                    "en",
                  ],
                  "fallbackNS": false,
                  "initImmediate": false,
                  "interpolation": Object {
                    "escapeValue": false,
                  },
                  "joinArrays": false,
                  "keySeparator": ".",
                  "load": "all",
                  "missingInterpolationHandler": false,
                  "missingKeyHandler": false,
                  "nonExplicitSupportedLngs": true,
                  "nonExplicitWhitelist": false,
                  "ns": Array [],
                  "nsSeparator": ":",
                  "overloadTranslationOptionHandler": [Function],
                  "parseMissingKeyHandler": false,
                  "partialBundledLanguages": false,
                  "pluralSeparator": "_",
                  "postProcess": false,
                  "postProcessPassResolved": false,
                  "preload": false,
                  "resources": Object {
                    "de": Object {},
                    "en": Object {},
                    "fr": Object {},
                    "ru": Object {},
                    "uz": Object {},
                  },
                  "returnEmptyString": true,
                  "returnNull": true,
                  "returnObjects": false,
                  "returnedObjectHandler": false,
                  "saveMissing": false,
                  "saveMissingPlurals": true,
                  "saveMissingTo": "fallback",
                  "simplifyPluralSuffix": true,
                  "supportedLngs": Array [
                    "de",
                    "en",
                    "fr",
                    "ru",
                    "uz",
                    "cimode",
                  ],
                  "updateMissing": false,
                  "whitelist": false,
                },
                "prefix": "{{",
                "regexp": /\\{\\{\\(\\.\\+\\?\\)\\}\\}/g,
                "regexpUnescape": /\\{\\{-\\(\\.\\+\\?\\)\\}\\}/g,
                "suffix": "}}",
                "unescapePrefix": "-",
                "unescapeSuffix": "",
                "useRawValueToEscape": false,
              },
              "language": "en",
              "languageUtils": LanguageUtil {
                "logger": Logger {
                  "debug": true,
                  "logger": Object {
                    "error": [Function],
                    "log": [Function],
                    "output": [Function],
                    "type": "logger",
                    "warn": [Function],
                  },
                  "options": Object {
                    "appendNamespaceToCIMode": false,
                    "appendNamespaceToMissingKey": false,
                    "contextSeparator": "_",
                    "debug": true,
                    "defaultNS": "translation",
                    "fallbackLng": Array [
                      "en",
                    ],
                    "fallbackNS": false,
                    "initImmediate": false,
                    "interpolation": Object {
                      "escapeValue": false,
                    },
                    "joinArrays": false,
                    "keySeparator": ".",
                    "load": "all",
                    "missingInterpolationHandler": false,
                    "missingKeyHandler": false,
                    "nonExplicitSupportedLngs": true,
                    "nonExplicitWhitelist": false,
                    "ns": Array [],
                    "nsSeparator": ":",
                    "overloadTranslationOptionHandler": [Function],
                    "parseMissingKeyHandler": false,
                    "partialBundledLanguages": false,
                    "pluralSeparator": "_",
                    "postProcess": false,
                    "postProcessPassResolved": false,
                    "prefix": "i18next::languageUtils:",
                    "preload": false,
                    "resources": Object {
                      "de": Object {},
                      "en": Object {},
                      "fr": Object {},
                      "ru": Object {},
                      "uz": Object {},
                    },
                    "returnEmptyString": true,
                    "returnNull": true,
                    "returnObjects": false,
                    "returnedObjectHandler": false,
                    "saveMissing": false,
                    "saveMissingPlurals": true,
                    "saveMissingTo": "fallback",
                    "simplifyPluralSuffix": true,
                    "supportedLngs": Array [
                      "de",
                      "en",
                      "fr",
                      "ru",
                      "uz",
                      "cimode",
                    ],
                    "updateMissing": false,
                    "whitelist": false,
                  },
                  "prefix": "i18next::languageUtils:",
                },
                "options": Object {
                  "appendNamespaceToCIMode": false,
                  "appendNamespaceToMissingKey": false,
                  "contextSeparator": "_",
                  "debug": true,
                  "defaultNS": "translation",
                  "fallbackLng": Array [
                    "en",
                  ],
                  "fallbackNS": false,
                  "initImmediate": false,
                  "interpolation": Object {
                    "escapeValue": false,
                  },
                  "joinArrays": false,
                  "keySeparator": ".",
                  "load": "all",
                  "missingInterpolationHandler": false,
                  "missingKeyHandler": false,
                  "nonExplicitSupportedLngs": true,
                  "nonExplicitWhitelist": false,
                  "ns": Array [],
                  "nsSeparator": ":",
                  "overloadTranslationOptionHandler": [Function],
                  "parseMissingKeyHandler": false,
                  "partialBundledLanguages": false,
                  "pluralSeparator": "_",
                  "postProcess": false,
                  "postProcessPassResolved": false,
                  "preload": false,
                  "resources": Object {
                    "de": Object {},
                    "en": Object {},
                    "fr": Object {},
                    "ru": Object {},
                    "uz": Object {},
                  },
                  "returnEmptyString": true,
                  "returnNull": true,
                  "returnObjects": false,
                  "returnedObjectHandler": false,
                  "saveMissing": false,
                  "saveMissingPlurals": true,
                  "saveMissingTo": "fallback",
                  "simplifyPluralSuffix": true,
                  "supportedLngs": Array [
                    "de",
                    "en",
                    "fr",
                    "ru",
                    "uz",
                    "cimode",
                  ],
                  "updateMissing": false,
                  "whitelist": false,
                },
                "supportedLngs": Array [
                  "de",
                  "en",
                  "fr",
                  "ru",
                  "uz",
                  "cimode",
                ],
                "whitelist": Array [
                  "de",
                  "en",
                  "fr",
                  "ru",
                  "uz",
                  "cimode",
                ],
              },
              "logger": Logger {
                "debug": true,
                "logger": Object {
                  "error": [Function],
                  "log": [Function],
                  "output": [Function],
                  "type": "logger",
                  "warn": [Function],
                },
                "options": Object {
                  "appendNamespaceToCIMode": false,
                  "appendNamespaceToMissingKey": false,
                  "contextSeparator": "_",
                  "debug": true,
                  "defaultNS": "translation",
                  "fallbackLng": Array [
                    "en",
                  ],
                  "fallbackNS": false,
                  "initImmediate": false,
                  "interpolation": Object {
                    "escapeValue": false,
                  },
                  "joinArrays": false,
                  "keySeparator": ".",
                  "load": "all",
                  "missingInterpolationHandler": false,
                  "missingKeyHandler": false,
                  "nonExplicitSupportedLngs": true,
                  "nonExplicitWhitelist": false,
                  "ns": Array [],
                  "nsSeparator": ":",
                  "overloadTranslationOptionHandler": [Function],
                  "parseMissingKeyHandler": false,
                  "partialBundledLanguages": false,
                  "pluralSeparator": "_",
                  "postProcess": false,
                  "postProcessPassResolved": false,
                  "prefix": "i18next::translator:",
                  "preload": false,
                  "resources": Object {
                    "de": Object {},
                    "en": Object {},
                    "fr": Object {},
                    "ru": Object {},
                    "uz": Object {},
                  },
                  "returnEmptyString": true,
                  "returnNull": true,
                  "returnObjects": false,
                  "returnedObjectHandler": false,
                  "saveMissing": false,
                  "saveMissingPlurals": true,
                  "saveMissingTo": "fallback",
                  "simplifyPluralSuffix": true,
                  "supportedLngs": Array [
                    "de",
                    "en",
                    "fr",
                    "ru",
                    "uz",
                    "cimode",
                  ],
                  "updateMissing": false,
                  "whitelist": false,
                },
                "prefix": "i18next::translator:",
              },
              "observers": Object {
                "*": Array [
                  [Function],
                ],
              },
              "options": Object {
                "appendNamespaceToCIMode": false,
                "appendNamespaceToMissingKey": false,
                "contextSeparator": "_",
                "debug": true,
                "defaultNS": "translation",
                "fallbackLng": Array [
                  "en",
                ],
                "fallbackNS": false,
                "initImmediate": false,
                "interpolation": Object {
                  "escapeValue": false,
                },
                "joinArrays": false,
                "keySeparator": ".",
                "load": "all",
                "missingInterpolationHandler": false,
                "missingKeyHandler": false,
                "nonExplicitSupportedLngs": true,
                "nonExplicitWhitelist": false,
                "ns": Array [],
                "nsSeparator": ":",
                "overloadTranslationOptionHandler": [Function],
                "parseMissingKeyHandler": false,
                "partialBundledLanguages": false,
                "pluralSeparator": "_",
                "postProcess": false,
                "postProcessPassResolved": false,
                "preload": false,
                "resources": Object {
                  "de": Object {},
                  "en": Object {},
                  "fr": Object {},
                  "ru": Object {},
                  "uz": Object {},
                },
                "returnEmptyString": true,
                "returnNull": true,
                "returnObjects": false,
                "returnedObjectHandler": false,
                "saveMissing": false,
                "saveMissingPlurals": true,
                "saveMissingTo": "fallback",
                "simplifyPluralSuffix": true,
                "supportedLngs": Array [
                  "de",
                  "en",
                  "fr",
                  "ru",
                  "uz",
                  "cimode",
                ],
                "updateMissing": false,
                "whitelist": false,
              },
              "pluralResolver": PluralResolver {
                "languageUtils": LanguageUtil {
                  "logger": Logger {
                    "debug": true,
                    "logger": Object {
                      "error": [Function],
                      "log": [Function],
                      "output": [Function],
                      "type": "logger",
                      "warn": [Function],
                    },
                    "options": Object {
                      "appendNamespaceToCIMode": false,
                      "appendNamespaceToMissingKey": false,
                      "contextSeparator": "_",
                      "debug": true,
                      "defaultNS": "translation",
                      "fallbackLng": Array [
                        "en",
                      ],
                      "fallbackNS": false,
                      "initImmediate": false,
                      "interpolation": Object {
                        "escapeValue": false,
                      },
                      "joinArrays": false,
                      "keySeparator": ".",
                      "load": "all",
                      "missingInterpolationHandler": false,
                      "missingKeyHandler": false,
                      "nonExplicitSupportedLngs": true,
                      "nonExplicitWhitelist": false,
                      "ns": Array [],
                      "nsSeparator": ":",
                      "overloadTranslationOptionHandler": [Function],
                      "parseMissingKeyHandler": false,
                      "partialBundledLanguages": false,
                      "pluralSeparator": "_",
                      "postProcess": false,
                      "postProcessPassResolved": false,
                      "prefix": "i18next::languageUtils:",
                      "preload": false,
                      "resources": Object {
                        "de": Object {},
                        "en": Object {},
                        "fr": Object {},
                        "ru": Object {},
                        "uz": Object {},
                      },
                      "returnEmptyString": true,
                      "returnNull": true,
                      "returnObjects": false,
                      "returnedObjectHandler": false,
                      "saveMissing": false,
                      "saveMissingPlurals": true,
                      "saveMissingTo": "fallback",
                      "simplifyPluralSuffix": true,
                      "supportedLngs": Array [
                        "de",
                        "en",
                        "fr",
                        "ru",
                        "uz",
                        "cimode",
                      ],
                      "updateMissing": false,
                      "whitelist": false,
                    },
                    "prefix": "i18next::languageUtils:",
                  },
                  "options": Object {
                    "appendNamespaceToCIMode": false,
                    "appendNamespaceToMissingKey": false,
                    "contextSeparator": "_",
                    "debug": true,
                    "defaultNS": "translation",
                    "fallbackLng": Array [
                      "en",
                    ],
                    "fallbackNS": false,
                    "initImmediate": false,
                    "interpolation": Object {
                      "escapeValue": false,
                    },
                    "joinArrays": false,
                    "keySeparator": ".",
                    "load": "all",
                    "missingInterpolationHandler": false,
                    "missingKeyHandler": false,
                    "nonExplicitSupportedLngs": true,
                    "nonExplicitWhitelist": false,
                    "ns": Array [],
                    "nsSeparator": ":",
                    "overloadTranslationOptionHandler": [Function],
                    "parseMissingKeyHandler": false,
                    "partialBundledLanguages": false,
                    "pluralSeparator": "_",
                    "postProcess": false,
                    "postProcessPassResolved": false,
                    "preload": false,
                    "resources": Object {
                      "de": Object {},
                      "en": Object {},
                      "fr": Object {},
                      "ru": Object {},
                      "uz": Object {},
                    },
                    "returnEmptyString": true,
                    "returnNull": true,
                    "returnObjects": false,
                    "returnedObjectHandler": false,
                    "saveMissing": false,
                    "saveMissingPlurals": true,
                    "saveMissingTo": "fallback",
                    "simplifyPluralSuffix": true,
                    "supportedLngs": Array [
                      "de",
                      "en",
                      "fr",
                      "ru",
                      "uz",
                      "cimode",
                    ],
                    "updateMissing": false,
                    "whitelist": false,
                  },
                  "supportedLngs": Array [
                    "de",
                    "en",
                    "fr",
                    "ru",
                    "uz",
                    "cimode",
                  ],
                  "whitelist": Array [
                    "de",
                    "en",
                    "fr",
                    "ru",
                    "uz",
                    "cimode",
                  ],
                },
                "logger": Logger {
                  "debug": true,
                  "logger": Object {
                    "error": [Function],
                    "log": [Function],
                    "output": [Function],
                    "type": "logger",
                    "warn": [Function],
                  },
                  "options": Object {
                    "appendNamespaceToCIMode": false,
                    "appendNamespaceToMissingKey": false,
                    "contextSeparator": "_",
                    "debug": true,
                    "defaultNS": "translation",
                    "fallbackLng": Array [
                      "en",
                    ],
                    "fallbackNS": false,
                    "initImmediate": false,
                    "interpolation": Object {
                      "escapeValue": false,
                    },
                    "joinArrays": false,
                    "keySeparator": ".",
                    "load": "all",
                    "missingInterpolationHandler": false,
                    "missingKeyHandler": false,
                    "nonExplicitSupportedLngs": true,
                    "nonExplicitWhitelist": false,
                    "ns": Array [],
                    "nsSeparator": ":",
                    "overloadTranslationOptionHandler": [Function],
                    "parseMissingKeyHandler": false,
                    "partialBundledLanguages": false,
                    "pluralSeparator": "_",
                    "postProcess": false,
                    "postProcessPassResolved": false,
                    "prefix": "i18next::pluralResolver:",
                    "preload": false,
                    "resources": Object {
                      "de": Object {},
                      "en": Object {},
                      "fr": Object {},
                      "ru": Object {},
                      "uz": Object {},
                    },
                    "returnEmptyString": true,
                    "returnNull": true,
                    "returnObjects": false,
                    "returnedObjectHandler": false,
                    "saveMissing": false,
                    "saveMissingPlurals": true,
                    "saveMissingTo": "fallback",
                    "simplifyPluralSuffix": true,
                    "supportedLngs": Array [
                      "de",
                      "en",
                      "fr",
                      "ru",
                      "uz",
                      "cimode",
                    ],
                    "updateMissing": false,
                    "whitelist": false,
                  },
                  "prefix": "i18next::pluralResolver:",
                },
                "options": Object {
                  "compatibilityJSON": undefined,
                  "prepend": "_",
                  "simplifyPluralSuffix": true,
                },
                "rules": Object {
                  "ach": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "af": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "ak": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "am": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "an": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "ar": Object {
                    "numbers": Array [
                      0,
                      1,
                      2,
                      3,
                      11,
                      100,
                    ],
                    "plurals": [Function],
                  },
                  "arn": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "ast": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "ay": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "az": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "be": Object {
                    "numbers": Array [
                      1,
                      2,
                      5,
                    ],
                    "plurals": [Function],
                  },
                  "bg": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "bn": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "bo": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "br": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "bs": Object {
                    "numbers": Array [
                      1,
                      2,
                      5,
                    ],
                    "plurals": [Function],
                  },
                  "ca": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "cgg": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "cnr": Object {
                    "numbers": Array [
                      1,
                      2,
                      5,
                    ],
                    "plurals": [Function],
                  },
                  "cs": Object {
                    "numbers": Array [
                      1,
                      2,
                      5,
                    ],
                    "plurals": [Function],
                  },
                  "csb": Object {
                    "numbers": Array [
                      1,
                      2,
                      5,
                    ],
                    "plurals": [Function],
                  },
                  "cy": Object {
                    "numbers": Array [
                      1,
                      2,
                      3,
                      8,
                    ],
                    "plurals": [Function],
                  },
                  "da": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "de": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "dev": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "dz": Object {
                    "numbers": Array [
                      1,
                      2,
                      5,
                    ],
                    "plurals": [Function],
                  },
                  "el": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "en": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "eo": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "es": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "et": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "eu": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "fa": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "fi": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "fil": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "fo": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "fr": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "fur": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "fy": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "ga": Object {
                    "numbers": Array [
                      1,
                      2,
                      3,
                      7,
                      11,
                    ],
                    "plurals": [Function],
                  },
                  "gd": Object {
                    "numbers": Array [
                      1,
                      2,
                      3,
                      20,
                    ],
                    "plurals": [Function],
                  },
                  "gl": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "gu": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "gun": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "ha": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "he": Object {
                    "numbers": Array [
                      1,
                      2,
                      20,
                      21,
                    ],
                    "plurals": [Function],
                  },
                  "hi": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "hr": Object {
                    "numbers": Array [
                      1,
                      2,
                      5,
                    ],
                    "plurals": [Function],
                  },
                  "ht": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "hu": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "hy": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "ia": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "id": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "is": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "it": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "iw": Object {
                    "numbers": Array [
                      1,
                      2,
                      20,
                      21,
                    ],
                    "plurals": [Function],
                  },
                  "ja": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "jbo": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "jv": Object {
                    "numbers": Array [
                      0,
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "ka": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "kk": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "km": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "kn": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "ko": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "ku": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "kw": Object {
                    "numbers": Array [
                      1,
                      2,
                      3,
                      4,
                    ],
                    "plurals": [Function],
                  },
                  "ky": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "lb": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "ln": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "lo": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "lt": Object {
                    "numbers": Array [
                      1,
                      2,
                      10,
                    ],
                    "plurals": [Function],
                  },
                  "lv": Object {
                    "numbers": Array [
                      1,
                      2,
                      0,
                    ],
                    "plurals": [Function],
                  },
                  "mai": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "mfe": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "mg": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "mi": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "mk": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "ml": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "mn": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "mnk": Object {
                    "numbers": Array [
                      0,
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "mr": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "ms": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "mt": Object {
                    "numbers": Array [
                      1,
                      2,
                      11,
                      20,
                    ],
                    "plurals": [Function],
                  },
                  "nah": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "nap": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "nb": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "ne": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "nl": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "nn": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "no": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "nso": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "oc": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "or": Object {
                    "numbers": Array [
                      2,
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "pa": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "pap": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "pl": Object {
                    "numbers": Array [
                      1,
                      2,
                      5,
                    ],
                    "plurals": [Function],
                  },
                  "pms": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "ps": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "pt": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "pt-BR": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "pt-PT": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "rm": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "ro": Object {
                    "numbers": Array [
                      1,
                      2,
                      20,
                    ],
                    "plurals": [Function],
                  },
                  "ru": Object {
                    "numbers": Array [
                      1,
                      2,
                      5,
                    ],
                    "plurals": [Function],
                  },
                  "sah": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "sco": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "se": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "si": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "sk": Object {
                    "numbers": Array [
                      1,
                      2,
                      5,
                    ],
                    "plurals": [Function],
                  },
                  "sl": Object {
                    "numbers": Array [
                      5,
                      1,
                      2,
                      3,
                    ],
                    "plurals": [Function],
                  },
                  "so": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "son": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "sq": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "sr": Object {
                    "numbers": Array [
                      1,
                      2,
                      5,
                    ],
                    "plurals": [Function],
                  },
                  "su": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "sv": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "sw": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "ta": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "te": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "tg": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "th": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "ti": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "tk": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "tr": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "tt": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "ug": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "uk": Object {
                    "numbers": Array [
                      1,
                      2,
                      5,
                    ],
                    "plurals": [Function],
                  },
                  "ur": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "uz": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "vi": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "wa": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "wo": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "yo": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "zh": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                },
              },
              "resourceStore": Object {
                "de": Object {},
                "en": Object {},
                "fr": Object {},
                "ru": Object {},
                "uz": Object {},
              },
              "utils": Object {
                "hasLoadedNamespace": [Function],
              },
            },
          }
        }
      >
        <Memo(MuiPickerUtils)>
          <MuiPickersUtilsProvider
            libInstance={[Function]}
            locale="en"
            utils={[Function]}
          >
            <Memo(ThemeProvider)
              defaultTheme={[Function]}
            >
              <ThemeProvider
                theme={
                  Object {
                    "breakpoints": Object {
                      "between": [Function],
                      "down": [Function],
                      "keys": Array [
                        "xs",
                        "sm",
                        "md",
                        "lg",
                        "xl",
                      ],
                      "only": [Function],
                      "up": [Function],
                      "values": Object {
                        "lg": 1280,
                        "md": 960,
                        "sm": 600,
                        "xl": 1920,
                        "xs": 0,
                      },
                      "width": [Function],
                    },
                    "direction": "ltr",
                    "mixins": Object {
                      "gutters": [Function],
                      "toolbar": Object {
                        "@media (min-width:0px) and (orientation: landscape)": Object {
                          "minHeight": 48,
                        },
                        "@media (min-width:600px)": Object {
                          "minHeight": 64,
                        },
                        "minHeight": 56,
                      },
                    },
                    "overrides": Object {},
                    "palette": Object {
                      "action": Object {
                        "activatedOpacity": 0.12,
                        "active": "rgba(0, 0, 0, 0.54)",
                        "disabled": "rgba(0, 0, 0, 0.26)",
                        "disabledBackground": "rgba(0, 0, 0, 0.12)",
                        "disabledOpacity": 0.38,
                        "focus": "rgba(0, 0, 0, 0.12)",
                        "focusOpacity": 0.12,
                        "hover": "rgba(0, 0, 0, 0.04)",
                        "hoverOpacity": 0.04,
                        "selected": "rgba(0, 0, 0, 0.08)",
                        "selectedOpacity": 0.08,
                      },
                      "augmentColor": [Function],
                      "background": Object {
                        "default": "#fafafa",
                        "paper": "#fff",
                      },
                      "common": Object {
                        "black": "#000",
                        "white": "#fff",
                      },
                      "contrastThreshold": 3,
                      "divider": "rgba(0, 0, 0, 0.12)",
                      "error": Object {
                        "contrastText": "#fff",
                        "dark": "#d32f2f",
                        "light": "#e57373",
                        "main": "#f44336",
                      },
                      "getContrastText": [Function],
                      "grey": Object {
                        "100": "#f5f5f5",
                        "200": "#eeeeee",
                        "300": "#e0e0e0",
                        "400": "#bdbdbd",
                        "50": "#fafafa",
                        "500": "#9e9e9e",
                        "600": "#757575",
                        "700": "#616161",
                        "800": "#424242",
                        "900": "#212121",
                        "A100": "#d5d5d5",
                        "A200": "#aaaaaa",
                        "A400": "#303030",
                        "A700": "#616161",
                      },
                      "info": Object {
                        "contrastText": "#fff",
                        "dark": "#1976d2",
                        "light": "#64b5f6",
                        "main": "#2196f3",
                      },
                      "primary": Object {
                        "contrastText": "#fff",
                        "dark": "rgb(44, 56, 126)",
                        "light": "rgb(101, 115, 195)",
                        "main": "#3f51b5",
                      },
                      "secondary": Object {
                        "contrastText": "#fff",
                        "dark": "rgb(171, 0, 60)",
                        "light": "rgb(247, 51, 120)",
                        "main": "#f50057",
                      },
                      "success": Object {
                        "contrastText": "rgba(0, 0, 0, 0.87)",
                        "dark": "#388e3c",
                        "light": "#81c784",
                        "main": "#4caf50",
                      },
                      "text": Object {
                        "disabled": "rgba(0, 0, 0, 0.38)",
                        "hint": "rgba(0, 0, 0, 0.38)",
                        "primary": "rgba(0, 0, 0, 0.87)",
                        "secondary": "rgba(0, 0, 0, 0.54)",
                      },
                      "tonalOffset": 0.2,
                      "type": "light",
                      "warning": Object {
                        "contrastText": "rgba(0, 0, 0, 0.87)",
                        "dark": "#f57c00",
                        "light": "#ffb74d",
                        "main": "#ff9800",
                      },
                    },
                    "props": Object {},
                    "shadows": Array [
                      "none",
                      "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                      "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                      "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                      "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                      "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                      "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                      "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                      "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                      "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                      "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                      "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                      "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                      "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                      "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                      "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                      "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                      "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                      "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                      "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                      "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                      "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                      "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                      "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                      "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                    ],
                    "shape": Object {
                      "borderRadius": 4,
                    },
                    "spacing": [Function],
                    "transitions": Object {
                      "create": [Function],
                      "duration": Object {
                        "complex": 375,
                        "enteringScreen": 225,
                        "leavingScreen": 195,
                        "short": 250,
                        "shorter": 200,
                        "shortest": 150,
                        "standard": 300,
                      },
                      "easing": Object {
                        "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                        "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                        "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                        "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                      },
                      "getAutoHeightDuration": [Function],
                    },
                    "typography": Object {
                      "body1": Object {
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "1rem",
                        "fontWeight": 400,
                        "letterSpacing": "0.00938em",
                        "lineHeight": 1.5,
                      },
                      "body2": Object {
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "0.875rem",
                        "fontWeight": 400,
                        "letterSpacing": "0.01071em",
                        "lineHeight": 1.43,
                      },
                      "button": Object {
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "0.875rem",
                        "fontWeight": 500,
                        "letterSpacing": "0.02857em",
                        "lineHeight": 1.75,
                        "textTransform": "uppercase",
                      },
                      "caption": Object {
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "0.75rem",
                        "fontWeight": 400,
                        "letterSpacing": "0.03333em",
                        "lineHeight": 1.66,
                      },
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": 14,
                      "fontWeightBold": 700,
                      "fontWeightLight": 300,
                      "fontWeightMedium": 500,
                      "fontWeightRegular": 400,
                      "h1": Object {
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "6rem",
                        "fontWeight": 300,
                        "letterSpacing": "-0.01562em",
                        "lineHeight": 1.167,
                      },
                      "h2": Object {
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "3.75rem",
                        "fontWeight": 300,
                        "letterSpacing": "-0.00833em",
                        "lineHeight": 1.2,
                      },
                      "h3": Object {
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "3rem",
                        "fontWeight": 400,
                        "letterSpacing": "0em",
                        "lineHeight": 1.167,
                      },
                      "h4": Object {
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "2.125rem",
                        "fontWeight": 400,
                        "letterSpacing": "0.00735em",
                        "lineHeight": 1.235,
                      },
                      "h5": Object {
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "1.5rem",
                        "fontWeight": 400,
                        "letterSpacing": "0em",
                        "lineHeight": 1.334,
                      },
                      "h6": Object {
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "1.25rem",
                        "fontWeight": 500,
                        "letterSpacing": "0.0075em",
                        "lineHeight": 1.6,
                      },
                      "htmlFontSize": 16,
                      "overline": Object {
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "0.75rem",
                        "fontWeight": 400,
                        "letterSpacing": "0.08333em",
                        "lineHeight": 2.66,
                        "textTransform": "uppercase",
                      },
                      "pxToRem": [Function],
                      "round": [Function],
                      "subtitle1": Object {
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "1rem",
                        "fontWeight": 400,
                        "letterSpacing": "0.00938em",
                        "lineHeight": 1.75,
                      },
                      "subtitle2": Object {
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "0.875rem",
                        "fontWeight": 500,
                        "letterSpacing": "0.00714em",
                        "lineHeight": 1.57,
                      },
                    },
                    "zIndex": Object {
                      "appBar": 1100,
                      "drawer": 1200,
                      "mobileStepper": 1000,
                      "modal": 1300,
                      "snackbar": 1400,
                      "speedDial": 1050,
                      "tooltip": 1500,
                    },
                    Symbol(mui.nested): false,
                  }
                }
              >
                <WithStyles(CssBaseline)>
                  <CssBaseline
                    classes={Object {}}
                  />
                </WithStyles(CssBaseline)>
                <QueryClientProvider
                  client={
                    QueryClient {
                      "defaultOptions": Object {},
                      "mutationCache": MutationCache {
                        "config": Object {},
                        "listeners": Array [],
                        "mutationId": 0,
                        "mutations": Array [],
                      },
                      "mutationDefaults": Array [],
                      "queryCache": QueryCache {
                        "config": Object {},
                        "listeners": Array [],
                        "queries": Array [],
                        "queriesMap": Object {},
                      },
                      "queryDefaults": Array [],
                      "unsubscribeFocus": [Function],
                      "unsubscribeOnline": [Function],
                    }
                  }
                >
                  <Memo(PermissionContextProvider)>
                    <Router
                      history={
                        Object {
                          "action": "POP",
                          "block": [Function],
                          "createHref": [Function],
                          "go": [Function],
                          "goBack": [Function],
                          "goForward": [Function],
                          "length": 1,
                          "listen": [Function],
                          "location": Object {
                            "hash": "",
                            "pathname": "/",
                            "search": "",
                            "state": undefined,
                          },
                          "push": [Function],
                          "replace": [Function],
                        }
                      }
                    >
                      <Memo(DialogContextProvider)>
                        <ThemeSelector>
                          <AdvThemeSelector>
                            <LanguageSelector />
                            <StylesProvider
                              generateClassName={[Function]}
                            >
                              <Component>
                                <DialogContent />
                              </Component>
                            </StylesProvider>
                          </AdvThemeSelector>
                        </ThemeSelector>
                        <MyCustomDialog
                          buttons={
                            Array [
                              Object {
                                "autoFocus": true,
                                "onClick": [Function],
                                "text": "Btn0",
                              },
                            ]
                          }
                          message="Enter your own text in Knobs!"
                          onClose={[Function]}
                          title="Storybook"
                        >
                          <Memo(FormDialogRaw)
                            buttons={
                              Array [
                                Object {
                                  "autoFocus": true,
                                  "onClick": [Function],
                                  "text": "Btn0",
                                },
                              ]
                            }
                            inputs={
                              Array [
                                <WithStyles(ForwardRef(TextField))
                                  fullWidth={true}
                                  label="Some prefilled input"
                                  margin="normal"
                                  onChange={[Function]}
                                  value="Prefilled"
                                />,
                                <WithStyles(ForwardRef(TextField))
                                  fullWidth={true}
                                  label="Some empty input"
                                  margin="normal"
                                  onChange={[Function]}
                                  value=""
                                />,
                                <WithStyles(ForwardRef(TextField))
                                  fullWidth={true}
                                  label="Empty password input"
                                  margin="normal"
                                  onChange={[Function]}
                                  type="password"
                                  value=""
                                />,
                              ]
                            }
                            message="Enter your own text in Knobs!"
                            onClose={[Function]}
                            title="Storybook"
                          >
                            <WithStyles(ForwardRef(Dialog))
                              onClose={[Function]}
                              open={true}
                            >
                              <ForwardRef(Dialog)
                                classes={
                                  Object {
                                    "container": "MuiDialog-container",
                                    "paper": "MuiDialog-paper",
                                    "paperFullScreen": "MuiDialog-paperFullScreen",
                                    "paperFullWidth": "MuiDialog-paperFullWidth",
                                    "paperScrollBody": "MuiDialog-paperScrollBody",
                                    "paperScrollPaper": "MuiDialog-paperScrollPaper",
                                    "paperWidthFalse": "MuiDialog-paperWidthFalse",
                                    "paperWidthLg": "MuiDialog-paperWidthLg",
                                    "paperWidthMd": "MuiDialog-paperWidthMd",
                                    "paperWidthSm": "MuiDialog-paperWidthSm",
                                    "paperWidthXl": "MuiDialog-paperWidthXl",
                                    "paperWidthXs": "MuiDialog-paperWidthXs",
                                    "root": "MuiDialog-root",
                                    "scrollBody": "MuiDialog-scrollBody",
                                    "scrollPaper": "MuiDialog-scrollPaper",
                                  }
                                }
                                onClose={[Function]}
                                open={true}
                              >
                                <ForwardRef(Modal)
                                  BackdropComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "Naked": Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "propTypes": Object {
                                          "children": [Function],
                                          "className": [Function],
                                          "classes": [Function],
                                          "invisible": [Function],
                                          "open": [Function],
                                          "transitionDuration": [Function],
                                        },
                                        "render": [Function],
                                      },
                                      "options": Object {
                                        "defaultTheme": Object {
                                          "breakpoints": Object {
                                            "between": [Function],
                                            "down": [Function],
                                            "keys": Array [
                                              "xs",
                                              "sm",
                                              "md",
                                              "lg",
                                              "xl",
                                            ],
                                            "only": [Function],
                                            "up": [Function],
                                            "values": Object {
                                              "lg": 1280,
                                              "md": 960,
                                              "sm": 600,
                                              "xl": 1920,
                                              "xs": 0,
                                            },
                                            "width": [Function],
                                          },
                                          "direction": "ltr",
                                          "mixins": Object {
                                            "gutters": [Function],
                                            "toolbar": Object {
                                              "@media (min-width:0px) and (orientation: landscape)": Object {
                                                "minHeight": 48,
                                              },
                                              "@media (min-width:600px)": Object {
                                                "minHeight": 64,
                                              },
                                              "minHeight": 56,
                                            },
                                          },
                                          "overrides": Object {},
                                          "palette": Object {
                                            "action": Object {
                                              "activatedOpacity": 0.12,
                                              "active": "rgba(0, 0, 0, 0.54)",
                                              "disabled": "rgba(0, 0, 0, 0.26)",
                                              "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                              "disabledOpacity": 0.38,
                                              "focus": "rgba(0, 0, 0, 0.12)",
                                              "focusOpacity": 0.12,
                                              "hover": "rgba(0, 0, 0, 0.04)",
                                              "hoverOpacity": 0.04,
                                              "selected": "rgba(0, 0, 0, 0.08)",
                                              "selectedOpacity": 0.08,
                                            },
                                            "augmentColor": [Function],
                                            "background": Object {
                                              "default": "#fafafa",
                                              "paper": "#fff",
                                            },
                                            "common": Object {
                                              "black": "#000",
                                              "white": "#fff",
                                            },
                                            "contrastThreshold": 3,
                                            "divider": "rgba(0, 0, 0, 0.12)",
                                            "error": Object {
                                              "contrastText": "#fff",
                                              "dark": "#d32f2f",
                                              "light": "#e57373",
                                              "main": "#f44336",
                                            },
                                            "getContrastText": [Function],
                                            "grey": Object {
                                              "100": "#f5f5f5",
                                              "200": "#eeeeee",
                                              "300": "#e0e0e0",
                                              "400": "#bdbdbd",
                                              "50": "#fafafa",
                                              "500": "#9e9e9e",
                                              "600": "#757575",
                                              "700": "#616161",
                                              "800": "#424242",
                                              "900": "#212121",
                                              "A100": "#d5d5d5",
                                              "A200": "#aaaaaa",
                                              "A400": "#303030",
                                              "A700": "#616161",
                                            },
                                            "info": Object {
                                              "contrastText": "#fff",
                                              "dark": "#1976d2",
                                              "light": "#64b5f6",
                                              "main": "#2196f3",
                                            },
                                            "primary": Object {
                                              "contrastText": "#fff",
                                              "dark": "#303f9f",
                                              "light": "#7986cb",
                                              "main": "#3f51b5",
                                            },
                                            "secondary": Object {
                                              "contrastText": "#fff",
                                              "dark": "#c51162",
                                              "light": "#ff4081",
                                              "main": "#f50057",
                                            },
                                            "success": Object {
                                              "contrastText": "rgba(0, 0, 0, 0.87)",
                                              "dark": "#388e3c",
                                              "light": "#81c784",
                                              "main": "#4caf50",
                                            },
                                            "text": Object {
                                              "disabled": "rgba(0, 0, 0, 0.38)",
                                              "hint": "rgba(0, 0, 0, 0.38)",
                                              "primary": "rgba(0, 0, 0, 0.87)",
                                              "secondary": "rgba(0, 0, 0, 0.54)",
                                            },
                                            "tonalOffset": 0.2,
                                            "type": "light",
                                            "warning": Object {
                                              "contrastText": "rgba(0, 0, 0, 0.87)",
                                              "dark": "#f57c00",
                                              "light": "#ffb74d",
                                              "main": "#ff9800",
                                            },
                                          },
                                          "props": Object {},
                                          "shadows": Array [
                                            "none",
                                            "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                            "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                            "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                            "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                            "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                            "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                            "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                            "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                            "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                            "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                            "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                            "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                            "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                            "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                            "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                            "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                            "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                            "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                            "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                            "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                            "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                            "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                            "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                            "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                          ],
                                          "shape": Object {
                                            "borderRadius": 4,
                                          },
                                          "spacing": [Function],
                                          "transitions": Object {
                                            "create": [Function],
                                            "duration": Object {
                                              "complex": 375,
                                              "enteringScreen": 225,
                                              "leavingScreen": 195,
                                              "short": 250,
                                              "shorter": 200,
                                              "shortest": 150,
                                              "standard": 300,
                                            },
                                            "easing": Object {
                                              "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                              "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                              "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                              "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                            },
                                            "getAutoHeightDuration": [Function],
                                          },
                                          "typography": Object {
                                            "body1": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "1rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0.00938em",
                                              "lineHeight": 1.5,
                                            },
                                            "body2": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "0.875rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0.01071em",
                                              "lineHeight": 1.43,
                                            },
                                            "button": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "0.875rem",
                                              "fontWeight": 500,
                                              "letterSpacing": "0.02857em",
                                              "lineHeight": 1.75,
                                              "textTransform": "uppercase",
                                            },
                                            "caption": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "0.75rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0.03333em",
                                              "lineHeight": 1.66,
                                            },
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": 14,
                                            "fontWeightBold": 700,
                                            "fontWeightLight": 300,
                                            "fontWeightMedium": 500,
                                            "fontWeightRegular": 400,
                                            "h1": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "6rem",
                                              "fontWeight": 300,
                                              "letterSpacing": "-0.01562em",
                                              "lineHeight": 1.167,
                                            },
                                            "h2": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "3.75rem",
                                              "fontWeight": 300,
                                              "letterSpacing": "-0.00833em",
                                              "lineHeight": 1.2,
                                            },
                                            "h3": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "3rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0em",
                                              "lineHeight": 1.167,
                                            },
                                            "h4": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "2.125rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0.00735em",
                                              "lineHeight": 1.235,
                                            },
                                            "h5": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "1.5rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0em",
                                              "lineHeight": 1.334,
                                            },
                                            "h6": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "1.25rem",
                                              "fontWeight": 500,
                                              "letterSpacing": "0.0075em",
                                              "lineHeight": 1.6,
                                            },
                                            "htmlFontSize": 16,
                                            "overline": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "0.75rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0.08333em",
                                              "lineHeight": 2.66,
                                              "textTransform": "uppercase",
                                            },
                                            "pxToRem": [Function],
                                            "round": [Function],
                                            "subtitle1": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "1rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0.00938em",
                                              "lineHeight": 1.75,
                                            },
                                            "subtitle2": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "0.875rem",
                                              "fontWeight": 500,
                                              "letterSpacing": "0.00714em",
                                              "lineHeight": 1.57,
                                            },
                                          },
                                          "zIndex": Object {
                                            "appBar": 1100,
                                            "drawer": 1200,
                                            "mobileStepper": 1000,
                                            "modal": 1300,
                                            "snackbar": 1400,
                                            "speedDial": 1050,
                                            "tooltip": 1500,
                                          },
                                        },
                                        "name": "MuiBackdrop",
                                      },
                                      "propTypes": Object {
                                        "classes": [Function],
                                        "innerRef": [Function],
                                      },
                                      "render": [Function],
                                      "useStyles": [Function],
                                    }
                                  }
                                  BackdropProps={
                                    Object {
                                      "transitionDuration": Object {
                                        "enter": 225,
                                        "exit": 195,
                                      },
                                    }
                                  }
                                  className="MuiDialog-root"
                                  closeAfterTransition={true}
                                  disableBackdropClick={false}
                                  disableEscapeKeyDown={false}
                                  onClose={[Function]}
                                  open={true}
                                >
                                  <ForwardRef(Portal)
                                    disablePortal={false}
                                  >
                                    <Portal
                                      containerInfo={
                                        <body
                                          style="padding-right: 0px; overflow: hidden;"
                                        >
                                          <div
                                            aria-hidden="true"
                                            class="app"
                                            id="app"
                                          />
                                          <div
                                            class="MuiDialog-root"
                                            role="presentation"
                                            style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px;"
                                          >
                                            <div
                                              aria-hidden="true"
                                              class="MuiBackdrop-root"
                                              style="opacity: 1; webkit-transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;"
                                            />
                                            <div
                                              data-test="sentinelStart"
                                              tabindex="0"
                                            />
                                            <div
                                              class="MuiDialog-container MuiDialog-scrollPaper"
                                              role="none presentation"
                                              style="opacity: 1; webkit-transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;"
                                              tabindex="-1"
                                            >
                                              <div
                                                class="MuiPaper-root MuiDialog-paper MuiDialog-paperScrollPaper MuiDialog-paperWidthSm MuiPaper-elevation24 MuiPaper-rounded"
                                                role="dialog"
                                              >
                                                <div
                                                  class="MuiDialogTitle-root"
                                                >
                                                  <h2
                                                    class="MuiTypography-root MuiTypography-h6"
                                                  >
                                                    Storybook
                                                  </h2>
                                                </div>
                                                <div
                                                  class="MuiDialogContent-root"
                                                >
                                                  <p
                                                    class="MuiTypography-root MuiDialogContentText-root MuiTypography-body1 MuiTypography-colorTextSecondary"
                                                  >
                                                    Enter your own text in Knobs!
                                                  </p>
                                                  <div
                                                    class="MuiFormControl-root MuiTextField-root MuiFormControl-marginNormal MuiFormControl-fullWidth"
                                                  >
                                                    <label
                                                      class="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiFormLabel-filled"
                                                      data-shrink="true"
                                                    >
                                                      Some prefilled input
                                                    </label>
                                                    <div
                                                      class="MuiInputBase-root MuiInput-root MuiInput-underline MuiInputBase-fullWidth MuiInput-fullWidth MuiInputBase-formControl MuiInput-formControl"
                                                    >
                                                      <input
                                                        aria-invalid="false"
                                                        class="MuiInputBase-input MuiInput-input"
                                                        type="text"
                                                        value="Prefilled"
                                                      />
                                                    </div>
                                                  </div>
                                                  <div
                                                    class="MuiFormControl-root MuiTextField-root MuiFormControl-marginNormal MuiFormControl-fullWidth"
                                                  >
                                                    <label
                                                      class="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                                                      data-shrink="false"
                                                    >
                                                      Some empty input
                                                    </label>
                                                    <div
                                                      class="MuiInputBase-root MuiInput-root MuiInput-underline MuiInputBase-fullWidth MuiInput-fullWidth MuiInputBase-formControl MuiInput-formControl"
                                                    >
                                                      <input
                                                        aria-invalid="false"
                                                        class="MuiInputBase-input MuiInput-input"
                                                        type="text"
                                                        value=""
                                                      />
                                                    </div>
                                                  </div>
                                                  <div
                                                    class="MuiFormControl-root MuiTextField-root MuiFormControl-marginNormal MuiFormControl-fullWidth"
                                                  >
                                                    <label
                                                      class="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                                                      data-shrink="false"
                                                    >
                                                      Empty password input
                                                    </label>
                                                    <div
                                                      class="MuiInputBase-root MuiInput-root MuiInput-underline MuiInputBase-fullWidth MuiInput-fullWidth MuiInputBase-formControl MuiInput-formControl"
                                                    >
                                                      <input
                                                        aria-invalid="false"
                                                        class="MuiInputBase-input MuiInput-input"
                                                        type="password"
                                                        value=""
                                                      />
                                                    </div>
                                                  </div>
                                                </div>
                                                <div
                                                  class="MuiDialogActions-root MuiDialogActions-spacing"
                                                >
                                                  <button
                                                    class="MuiButtonBase-root MuiButton-root MuiButton-text MuiButton-textPrimary Mui-focusVisible Mui-focusVisible"
                                                    tabindex="0"
                                                    type="button"
                                                  >
                                                    <span
                                                      class="MuiButton-label"
                                                    >
                                                      Btn0
                                                    </span>
                                                    <span
                                                      class="MuiTouchRipple-root"
                                                    >
                                                      <span
                                                        class="MuiTouchRipple-ripple MuiTouchRipple-rippleVisible MuiTouchRipple-ripplePulsate"
                                                        style="width: 1px; height: 1px; top: -0.5px; left: -0.5px;"
                                                      >
                                                        <span
                                                          class="MuiTouchRipple-child MuiTouchRipple-childPulsate"
                                                        />
                                                      </span>
                                                    </span>
                                                  </button>
                                                </div>
                                              </div>
                                            </div>
                                            <div
                                              data-test="sentinelEnd"
                                              tabindex="0"
                                            />
                                          </div>
                                        </body>
                                      }
                                    >
                                      <div
                                        className="MuiDialog-root"
                                        onKeyDown={[Function]}
                                        role="presentation"
                                        style={
                                          Object {
                                            "bottom": 0,
                                            "left": 0,
                                            "position": "fixed",
                                            "right": 0,
                                            "top": 0,
                                            "zIndex": 1300,
                                          }
                                        }
                                      >
                                        <WithStyles(ForwardRef(Backdrop))
                                          onClick={[Function]}
                                          open={true}
                                          transitionDuration={
                                            Object {
                                              "enter": 225,
                                              "exit": 195,
                                            }
                                          }
                                        >
                                          <ForwardRef(Backdrop)
                                            classes={
                                              Object {
                                                "invisible": "MuiBackdrop-invisible",
                                                "root": "MuiBackdrop-root",
                                              }
                                            }
                                            onClick={[Function]}
                                            open={true}
                                            transitionDuration={
                                              Object {
                                                "enter": 225,
                                                "exit": 195,
                                              }
                                            }
                                          >
                                            <ForwardRef(Fade)
                                              in={true}
                                              onClick={[Function]}
                                              timeout={
                                                Object {
                                                  "enter": 225,
                                                  "exit": 195,
                                                }
                                              }
                                            >
                                              <Transition
                                                appear={true}
                                                enter={true}
                                                exit={true}
                                                in={true}
                                                mountOnEnter={false}
                                                onClick={[Function]}
                                                onEnter={[Function]}
                                                onEntered={[Function]}
                                                onEntering={[Function]}
                                                onExit={[Function]}
                                                onExited={[Function]}
                                                onExiting={[Function]}
                                                timeout={
                                                  Object {
                                                    "enter": 225,
                                                    "exit": 195,
                                                  }
                                                }
                                                unmountOnExit={false}
                                              >
                                                <div
                                                  aria-hidden={true}
                                                  className="MuiBackdrop-root"
                                                  onClick={[Function]}
                                                  style={
                                                    Object {
                                                      "opacity": 1,
                                                      "visibility": undefined,
                                                    }
                                                  }
                                                />
                                              </Transition>
                                            </ForwardRef(Fade)>
                                          </ForwardRef(Backdrop)>
                                        </WithStyles(ForwardRef(Backdrop))>
                                        <Unstable_TrapFocus
                                          disableAutoFocus={false}
                                          disableEnforceFocus={false}
                                          disableRestoreFocus={false}
                                          getDoc={[Function]}
                                          isEnabled={[Function]}
                                          open={true}
                                        >
                                          <div
                                            data-test="sentinelStart"
                                            tabIndex={0}
                                          />
                                          <ForwardRef(Fade)
                                            appear={true}
                                            in={true}
                                            onEnter={[Function]}
                                            onExited={[Function]}
                                            role="none presentation"
                                            tabIndex="-1"
                                            timeout={
                                              Object {
                                                "enter": 225,
                                                "exit": 195,
                                              }
                                            }
                                          >
                                            <Transition
                                              appear={true}
                                              enter={true}
                                              exit={true}
                                              in={true}
                                              mountOnEnter={false}
                                              onEnter={[Function]}
                                              onEntered={[Function]}
                                              onEntering={[Function]}
                                              onExit={[Function]}
                                              onExited={[Function]}
                                              onExiting={[Function]}
                                              role="none presentation"
                                              tabIndex="-1"
                                              timeout={
                                                Object {
                                                  "enter": 225,
                                                  "exit": 195,
                                                }
                                              }
                                              unmountOnExit={false}
                                            >
                                              <div
                                                className="MuiDialog-container MuiDialog-scrollPaper"
                                                onMouseDown={[Function]}
                                                onMouseUp={[Function]}
                                                role="none presentation"
                                                style={
                                                  Object {
                                                    "opacity": 1,
                                                    "visibility": undefined,
                                                  }
                                                }
                                                tabIndex="-1"
                                              >
                                                <WithStyles(ForwardRef(Paper))
                                                  className="MuiDialog-paper MuiDialog-paperScrollPaper MuiDialog-paperWidthSm"
                                                  elevation={24}
                                                  role="dialog"
                                                >
                                                  <ForwardRef(Paper)
                                                    className="MuiDialog-paper MuiDialog-paperScrollPaper MuiDialog-paperWidthSm"
                                                    classes={
                                                      Object {
                                                        "elevation0": "MuiPaper-elevation0",
                                                        "elevation1": "MuiPaper-elevation1",
                                                        "elevation10": "MuiPaper-elevation10",
                                                        "elevation11": "MuiPaper-elevation11",
                                                        "elevation12": "MuiPaper-elevation12",
                                                        "elevation13": "MuiPaper-elevation13",
                                                        "elevation14": "MuiPaper-elevation14",
                                                        "elevation15": "MuiPaper-elevation15",
                                                        "elevation16": "MuiPaper-elevation16",
                                                        "elevation17": "MuiPaper-elevation17",
                                                        "elevation18": "MuiPaper-elevation18",
                                                        "elevation19": "MuiPaper-elevation19",
                                                        "elevation2": "MuiPaper-elevation2",
                                                        "elevation20": "MuiPaper-elevation20",
                                                        "elevation21": "MuiPaper-elevation21",
                                                        "elevation22": "MuiPaper-elevation22",
                                                        "elevation23": "MuiPaper-elevation23",
                                                        "elevation24": "MuiPaper-elevation24",
                                                        "elevation3": "MuiPaper-elevation3",
                                                        "elevation4": "MuiPaper-elevation4",
                                                        "elevation5": "MuiPaper-elevation5",
                                                        "elevation6": "MuiPaper-elevation6",
                                                        "elevation7": "MuiPaper-elevation7",
                                                        "elevation8": "MuiPaper-elevation8",
                                                        "elevation9": "MuiPaper-elevation9",
                                                        "outlined": "MuiPaper-outlined",
                                                        "root": "MuiPaper-root",
                                                        "rounded": "MuiPaper-rounded",
                                                      }
                                                    }
                                                    elevation={24}
                                                    role="dialog"
                                                  >
                                                    <div
                                                      className="MuiPaper-root MuiDialog-paper MuiDialog-paperScrollPaper MuiDialog-paperWidthSm MuiPaper-elevation24 MuiPaper-rounded"
                                                      role="dialog"
                                                    >
                                                      <WithStyles(ForwardRef(DialogTitle))>
                                                        <ForwardRef(DialogTitle)
                                                          classes={
                                                            Object {
                                                              "root": "MuiDialogTitle-root",
                                                            }
                                                          }
                                                        >
                                                          <div
                                                            className="MuiDialogTitle-root"
                                                          >
                                                            <WithStyles(ForwardRef(Typography))
                                                              component="h2"
                                                              variant="h6"
                                                            >
                                                              <ForwardRef(Typography)
                                                                classes={
                                                                  Object {
                                                                    "alignCenter": "MuiTypography-alignCenter",
                                                                    "alignJustify": "MuiTypography-alignJustify",
                                                                    "alignLeft": "MuiTypography-alignLeft",
                                                                    "alignRight": "MuiTypography-alignRight",
                                                                    "body1": "MuiTypography-body1",
                                                                    "body2": "MuiTypography-body2",
                                                                    "button": "MuiTypography-button",
                                                                    "caption": "MuiTypography-caption",
                                                                    "colorError": "MuiTypography-colorError",
                                                                    "colorInherit": "MuiTypography-colorInherit",
                                                                    "colorPrimary": "MuiTypography-colorPrimary",
                                                                    "colorSecondary": "MuiTypography-colorSecondary",
                                                                    "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                    "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                    "displayBlock": "MuiTypography-displayBlock",
                                                                    "displayInline": "MuiTypography-displayInline",
                                                                    "gutterBottom": "MuiTypography-gutterBottom",
                                                                    "h1": "MuiTypography-h1",
                                                                    "h2": "MuiTypography-h2",
                                                                    "h3": "MuiTypography-h3",
                                                                    "h4": "MuiTypography-h4",
                                                                    "h5": "MuiTypography-h5",
                                                                    "h6": "MuiTypography-h6",
                                                                    "noWrap": "MuiTypography-noWrap",
                                                                    "overline": "MuiTypography-overline",
                                                                    "paragraph": "MuiTypography-paragraph",
                                                                    "root": "MuiTypography-root",
                                                                    "srOnly": "MuiTypography-srOnly",
                                                                    "subtitle1": "MuiTypography-subtitle1",
                                                                    "subtitle2": "MuiTypography-subtitle2",
                                                                  }
                                                                }
                                                                component="h2"
                                                                variant="h6"
                                                              >
                                                                <h2
                                                                  className="MuiTypography-root MuiTypography-h6"
                                                                >
                                                                  Storybook
                                                                </h2>
                                                              </ForwardRef(Typography)>
                                                            </WithStyles(ForwardRef(Typography))>
                                                          </div>
                                                        </ForwardRef(DialogTitle)>
                                                      </WithStyles(ForwardRef(DialogTitle))>
                                                      <WithStyles(ForwardRef(DialogContent))>
                                                        <ForwardRef(DialogContent)
                                                          classes={
                                                            Object {
                                                              "dividers": "MuiDialogContent-dividers",
                                                              "root": "MuiDialogContent-root",
                                                            }
                                                          }
                                                        >
                                                          <div
                                                            className="MuiDialogContent-root"
                                                          >
                                                            <WithStyles(ForwardRef(DialogContentText))>
                                                              <ForwardRef(DialogContentText)
                                                                classes={
                                                                  Object {
                                                                    "root": "MuiDialogContentText-root",
                                                                  }
                                                                }
                                                              >
                                                                <WithStyles(ForwardRef(Typography))
                                                                  classes={
                                                                    Object {
                                                                      "root": "MuiDialogContentText-root",
                                                                    }
                                                                  }
                                                                  color="textSecondary"
                                                                  component="p"
                                                                  variant="body1"
                                                                >
                                                                  <ForwardRef(Typography)
                                                                    classes={
                                                                      Object {
                                                                        "alignCenter": "MuiTypography-alignCenter",
                                                                        "alignJustify": "MuiTypography-alignJustify",
                                                                        "alignLeft": "MuiTypography-alignLeft",
                                                                        "alignRight": "MuiTypography-alignRight",
                                                                        "body1": "MuiTypography-body1",
                                                                        "body2": "MuiTypography-body2",
                                                                        "button": "MuiTypography-button",
                                                                        "caption": "MuiTypography-caption",
                                                                        "colorError": "MuiTypography-colorError",
                                                                        "colorInherit": "MuiTypography-colorInherit",
                                                                        "colorPrimary": "MuiTypography-colorPrimary",
                                                                        "colorSecondary": "MuiTypography-colorSecondary",
                                                                        "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                        "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                        "displayBlock": "MuiTypography-displayBlock",
                                                                        "displayInline": "MuiTypography-displayInline",
                                                                        "gutterBottom": "MuiTypography-gutterBottom",
                                                                        "h1": "MuiTypography-h1",
                                                                        "h2": "MuiTypography-h2",
                                                                        "h3": "MuiTypography-h3",
                                                                        "h4": "MuiTypography-h4",
                                                                        "h5": "MuiTypography-h5",
                                                                        "h6": "MuiTypography-h6",
                                                                        "noWrap": "MuiTypography-noWrap",
                                                                        "overline": "MuiTypography-overline",
                                                                        "paragraph": "MuiTypography-paragraph",
                                                                        "root": "MuiTypography-root MuiDialogContentText-root",
                                                                        "srOnly": "MuiTypography-srOnly",
                                                                        "subtitle1": "MuiTypography-subtitle1",
                                                                        "subtitle2": "MuiTypography-subtitle2",
                                                                      }
                                                                    }
                                                                    color="textSecondary"
                                                                    component="p"
                                                                    variant="body1"
                                                                  >
                                                                    <p
                                                                      className="MuiTypography-root MuiDialogContentText-root MuiTypography-body1 MuiTypography-colorTextSecondary"
                                                                    >
                                                                      Enter your own text in Knobs!
                                                                    </p>
                                                                  </ForwardRef(Typography)>
                                                                </WithStyles(ForwardRef(Typography))>
                                                              </ForwardRef(DialogContentText)>
                                                            </WithStyles(ForwardRef(DialogContentText))>
                                                            <WithStyles(ForwardRef(TextField))
                                                              fullWidth={true}
                                                              key="v1"
                                                              label="Some prefilled input"
                                                              margin="normal"
                                                              onChange={[Function]}
                                                              value="Prefilled"
                                                            >
                                                              <ForwardRef(TextField)
                                                                classes={
                                                                  Object {
                                                                    "root": "MuiTextField-root",
                                                                  }
                                                                }
                                                                fullWidth={true}
                                                                label="Some prefilled input"
                                                                margin="normal"
                                                                onChange={[Function]}
                                                                value="Prefilled"
                                                              >
                                                                <WithStyles(ForwardRef(FormControl))
                                                                  className="MuiTextField-root"
                                                                  color="primary"
                                                                  disabled={false}
                                                                  error={false}
                                                                  fullWidth={true}
                                                                  margin="normal"
                                                                  required={false}
                                                                  variant="standard"
                                                                >
                                                                  <ForwardRef(FormControl)
                                                                    className="MuiTextField-root"
                                                                    classes={
                                                                      Object {
                                                                        "fullWidth": "MuiFormControl-fullWidth",
                                                                        "marginDense": "MuiFormControl-marginDense",
                                                                        "marginNormal": "MuiFormControl-marginNormal",
                                                                        "root": "MuiFormControl-root",
                                                                      }
                                                                    }
                                                                    color="primary"
                                                                    disabled={false}
                                                                    error={false}
                                                                    fullWidth={true}
                                                                    margin="normal"
                                                                    required={false}
                                                                    variant="standard"
                                                                  >
                                                                    <div
                                                                      className="MuiFormControl-root MuiTextField-root MuiFormControl-marginNormal MuiFormControl-fullWidth"
                                                                    >
                                                                      <WithStyles(ForwardRef(InputLabel))>
                                                                        <ForwardRef(InputLabel)
                                                                          classes={
                                                                            Object {
                                                                              "animated": "MuiInputLabel-animated",
                                                                              "asterisk": "MuiInputLabel-asterisk",
                                                                              "disabled": "Mui-disabled",
                                                                              "error": "Mui-error",
                                                                              "filled": "MuiInputLabel-filled",
                                                                              "focused": "Mui-focused",
                                                                              "formControl": "MuiInputLabel-formControl",
                                                                              "marginDense": "MuiInputLabel-marginDense",
                                                                              "outlined": "MuiInputLabel-outlined",
                                                                              "required": "Mui-required",
                                                                              "root": "MuiInputLabel-root",
                                                                              "shrink": "MuiInputLabel-shrink",
                                                                            }
                                                                          }
                                                                        >
                                                                          <WithStyles(ForwardRef(FormLabel))
                                                                            className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink"
                                                                            classes={
                                                                              Object {
                                                                                "asterisk": "MuiInputLabel-asterisk",
                                                                                "disabled": "Mui-disabled",
                                                                                "error": "Mui-error",
                                                                                "focused": "Mui-focused",
                                                                                "required": "Mui-required",
                                                                              }
                                                                            }
                                                                            data-shrink={true}
                                                                          >
                                                                            <ForwardRef(FormLabel)
                                                                              className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink"
                                                                              classes={
                                                                                Object {
                                                                                  "asterisk": "MuiFormLabel-asterisk MuiInputLabel-asterisk",
                                                                                  "colorSecondary": "MuiFormLabel-colorSecondary",
                                                                                  "disabled": "Mui-disabled Mui-disabled",
                                                                                  "error": "Mui-error Mui-error",
                                                                                  "filled": "MuiFormLabel-filled",
                                                                                  "focused": "Mui-focused Mui-focused",
                                                                                  "required": "Mui-required Mui-required",
                                                                                  "root": "MuiFormLabel-root",
                                                                                }
                                                                              }
                                                                              data-shrink={true}
                                                                            >
                                                                              <label
                                                                                className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiFormLabel-filled"
                                                                                data-shrink={true}
                                                                              >
                                                                                Some prefilled input
                                                                              </label>
                                                                            </ForwardRef(FormLabel)>
                                                                          </WithStyles(ForwardRef(FormLabel))>
                                                                        </ForwardRef(InputLabel)>
                                                                      </WithStyles(ForwardRef(InputLabel))>
                                                                      <WithStyles(ForwardRef(Input))
                                                                        autoFocus={false}
                                                                        fullWidth={true}
                                                                        multiline={false}
                                                                        onChange={[Function]}
                                                                        value="Prefilled"
                                                                      >
                                                                        <ForwardRef(Input)
                                                                          autoFocus={false}
                                                                          classes={
                                                                            Object {
                                                                              "colorSecondary": "MuiInput-colorSecondary",
                                                                              "disabled": "Mui-disabled",
                                                                              "error": "Mui-error",
                                                                              "focused": "Mui-focused",
                                                                              "formControl": "MuiInput-formControl",
                                                                              "fullWidth": "MuiInput-fullWidth",
                                                                              "input": "MuiInput-input",
                                                                              "inputMarginDense": "MuiInput-inputMarginDense",
                                                                              "inputMultiline": "MuiInput-inputMultiline",
                                                                              "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                                              "marginDense": "MuiInput-marginDense",
                                                                              "multiline": "MuiInput-multiline",
                                                                              "root": "MuiInput-root",
                                                                              "underline": "MuiInput-underline",
                                                                            }
                                                                          }
                                                                          fullWidth={true}
                                                                          multiline={false}
                                                                          onChange={[Function]}
                                                                          value="Prefilled"
                                                                        >
                                                                          <WithStyles(ForwardRef(InputBase))
                                                                            autoFocus={false}
                                                                            classes={
                                                                              Object {
                                                                                "colorSecondary": "MuiInput-colorSecondary",
                                                                                "disabled": "Mui-disabled",
                                                                                "error": "Mui-error",
                                                                                "focused": "Mui-focused",
                                                                                "formControl": "MuiInput-formControl",
                                                                                "fullWidth": "MuiInput-fullWidth",
                                                                                "input": "MuiInput-input",
                                                                                "inputMarginDense": "MuiInput-inputMarginDense",
                                                                                "inputMultiline": "MuiInput-inputMultiline",
                                                                                "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                                                "marginDense": "MuiInput-marginDense",
                                                                                "multiline": "MuiInput-multiline",
                                                                                "root": "MuiInput-root MuiInput-underline",
                                                                                "underline": null,
                                                                              }
                                                                            }
                                                                            fullWidth={true}
                                                                            inputComponent="input"
                                                                            multiline={false}
                                                                            onChange={[Function]}
                                                                            type="text"
                                                                            value="Prefilled"
                                                                          >
                                                                            <ForwardRef(InputBase)
                                                                              autoFocus={false}
                                                                              classes={
                                                                                Object {
                                                                                  "adornedEnd": "MuiInputBase-adornedEnd",
                                                                                  "adornedStart": "MuiInputBase-adornedStart",
                                                                                  "colorSecondary": "MuiInputBase-colorSecondary MuiInput-colorSecondary",
                                                                                  "disabled": "Mui-disabled Mui-disabled",
                                                                                  "error": "Mui-error Mui-error",
                                                                                  "focused": "Mui-focused Mui-focused",
                                                                                  "formControl": "MuiInputBase-formControl MuiInput-formControl",
                                                                                  "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                                                                                  "input": "MuiInputBase-input MuiInput-input",
                                                                                  "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                                                                  "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                                                                  "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                                                                  "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                                                                                  "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                                                                                  "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                                                                                  "marginDense": "MuiInputBase-marginDense MuiInput-marginDense",
                                                                                  "multiline": "MuiInputBase-multiline MuiInput-multiline",
                                                                                  "root": "MuiInputBase-root MuiInput-root MuiInput-underline",
                                                                                }
                                                                              }
                                                                              fullWidth={true}
                                                                              inputComponent="input"
                                                                              multiline={false}
                                                                              onChange={[Function]}
                                                                              type="text"
                                                                              value="Prefilled"
                                                                            >
                                                                              <div
                                                                                className="MuiInputBase-root MuiInput-root MuiInput-underline MuiInputBase-fullWidth MuiInput-fullWidth MuiInputBase-formControl MuiInput-formControl"
                                                                                onClick={[Function]}
                                                                              >
                                                                                <input
                                                                                  aria-invalid={false}
                                                                                  autoFocus={false}
                                                                                  className="MuiInputBase-input MuiInput-input"
                                                                                  disabled={false}
                                                                                  onAnimationStart={[Function]}
                                                                                  onBlur={[Function]}
                                                                                  onChange={[Function]}
                                                                                  onFocus={[Function]}
                                                                                  required={false}
                                                                                  type="text"
                                                                                  value="Prefilled"
                                                                                />
                                                                              </div>
                                                                            </ForwardRef(InputBase)>
                                                                          </WithStyles(ForwardRef(InputBase))>
                                                                        </ForwardRef(Input)>
                                                                      </WithStyles(ForwardRef(Input))>
                                                                    </div>
                                                                  </ForwardRef(FormControl)>
                                                                </WithStyles(ForwardRef(FormControl))>
                                                              </ForwardRef(TextField)>
                                                            </WithStyles(ForwardRef(TextField))>
                                                            <WithStyles(ForwardRef(TextField))
                                                              fullWidth={true}
                                                              key="v2"
                                                              label="Some empty input"
                                                              margin="normal"
                                                              onChange={[Function]}
                                                              value=""
                                                            >
                                                              <ForwardRef(TextField)
                                                                classes={
                                                                  Object {
                                                                    "root": "MuiTextField-root",
                                                                  }
                                                                }
                                                                fullWidth={true}
                                                                label="Some empty input"
                                                                margin="normal"
                                                                onChange={[Function]}
                                                                value=""
                                                              >
                                                                <WithStyles(ForwardRef(FormControl))
                                                                  className="MuiTextField-root"
                                                                  color="primary"
                                                                  disabled={false}
                                                                  error={false}
                                                                  fullWidth={true}
                                                                  margin="normal"
                                                                  required={false}
                                                                  variant="standard"
                                                                >
                                                                  <ForwardRef(FormControl)
                                                                    className="MuiTextField-root"
                                                                    classes={
                                                                      Object {
                                                                        "fullWidth": "MuiFormControl-fullWidth",
                                                                        "marginDense": "MuiFormControl-marginDense",
                                                                        "marginNormal": "MuiFormControl-marginNormal",
                                                                        "root": "MuiFormControl-root",
                                                                      }
                                                                    }
                                                                    color="primary"
                                                                    disabled={false}
                                                                    error={false}
                                                                    fullWidth={true}
                                                                    margin="normal"
                                                                    required={false}
                                                                    variant="standard"
                                                                  >
                                                                    <div
                                                                      className="MuiFormControl-root MuiTextField-root MuiFormControl-marginNormal MuiFormControl-fullWidth"
                                                                    >
                                                                      <WithStyles(ForwardRef(InputLabel))>
                                                                        <ForwardRef(InputLabel)
                                                                          classes={
                                                                            Object {
                                                                              "animated": "MuiInputLabel-animated",
                                                                              "asterisk": "MuiInputLabel-asterisk",
                                                                              "disabled": "Mui-disabled",
                                                                              "error": "Mui-error",
                                                                              "filled": "MuiInputLabel-filled",
                                                                              "focused": "Mui-focused",
                                                                              "formControl": "MuiInputLabel-formControl",
                                                                              "marginDense": "MuiInputLabel-marginDense",
                                                                              "outlined": "MuiInputLabel-outlined",
                                                                              "required": "Mui-required",
                                                                              "root": "MuiInputLabel-root",
                                                                              "shrink": "MuiInputLabel-shrink",
                                                                            }
                                                                          }
                                                                        >
                                                                          <WithStyles(ForwardRef(FormLabel))
                                                                            className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                                                                            classes={
                                                                              Object {
                                                                                "asterisk": "MuiInputLabel-asterisk",
                                                                                "disabled": "Mui-disabled",
                                                                                "error": "Mui-error",
                                                                                "focused": "Mui-focused",
                                                                                "required": "Mui-required",
                                                                              }
                                                                            }
                                                                            data-shrink={false}
                                                                          >
                                                                            <ForwardRef(FormLabel)
                                                                              className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                                                                              classes={
                                                                                Object {
                                                                                  "asterisk": "MuiFormLabel-asterisk MuiInputLabel-asterisk",
                                                                                  "colorSecondary": "MuiFormLabel-colorSecondary",
                                                                                  "disabled": "Mui-disabled Mui-disabled",
                                                                                  "error": "Mui-error Mui-error",
                                                                                  "filled": "MuiFormLabel-filled",
                                                                                  "focused": "Mui-focused Mui-focused",
                                                                                  "required": "Mui-required Mui-required",
                                                                                  "root": "MuiFormLabel-root",
                                                                                }
                                                                              }
                                                                              data-shrink={false}
                                                                            >
                                                                              <label
                                                                                className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                                                                                data-shrink={false}
                                                                              >
                                                                                Some empty input
                                                                              </label>
                                                                            </ForwardRef(FormLabel)>
                                                                          </WithStyles(ForwardRef(FormLabel))>
                                                                        </ForwardRef(InputLabel)>
                                                                      </WithStyles(ForwardRef(InputLabel))>
                                                                      <WithStyles(ForwardRef(Input))
                                                                        autoFocus={false}
                                                                        fullWidth={true}
                                                                        multiline={false}
                                                                        onChange={[Function]}
                                                                        value=""
                                                                      >
                                                                        <ForwardRef(Input)
                                                                          autoFocus={false}
                                                                          classes={
                                                                            Object {
                                                                              "colorSecondary": "MuiInput-colorSecondary",
                                                                              "disabled": "Mui-disabled",
                                                                              "error": "Mui-error",
                                                                              "focused": "Mui-focused",
                                                                              "formControl": "MuiInput-formControl",
                                                                              "fullWidth": "MuiInput-fullWidth",
                                                                              "input": "MuiInput-input",
                                                                              "inputMarginDense": "MuiInput-inputMarginDense",
                                                                              "inputMultiline": "MuiInput-inputMultiline",
                                                                              "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                                              "marginDense": "MuiInput-marginDense",
                                                                              "multiline": "MuiInput-multiline",
                                                                              "root": "MuiInput-root",
                                                                              "underline": "MuiInput-underline",
                                                                            }
                                                                          }
                                                                          fullWidth={true}
                                                                          multiline={false}
                                                                          onChange={[Function]}
                                                                          value=""
                                                                        >
                                                                          <WithStyles(ForwardRef(InputBase))
                                                                            autoFocus={false}
                                                                            classes={
                                                                              Object {
                                                                                "colorSecondary": "MuiInput-colorSecondary",
                                                                                "disabled": "Mui-disabled",
                                                                                "error": "Mui-error",
                                                                                "focused": "Mui-focused",
                                                                                "formControl": "MuiInput-formControl",
                                                                                "fullWidth": "MuiInput-fullWidth",
                                                                                "input": "MuiInput-input",
                                                                                "inputMarginDense": "MuiInput-inputMarginDense",
                                                                                "inputMultiline": "MuiInput-inputMultiline",
                                                                                "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                                                "marginDense": "MuiInput-marginDense",
                                                                                "multiline": "MuiInput-multiline",
                                                                                "root": "MuiInput-root MuiInput-underline",
                                                                                "underline": null,
                                                                              }
                                                                            }
                                                                            fullWidth={true}
                                                                            inputComponent="input"
                                                                            multiline={false}
                                                                            onChange={[Function]}
                                                                            type="text"
                                                                            value=""
                                                                          >
                                                                            <ForwardRef(InputBase)
                                                                              autoFocus={false}
                                                                              classes={
                                                                                Object {
                                                                                  "adornedEnd": "MuiInputBase-adornedEnd",
                                                                                  "adornedStart": "MuiInputBase-adornedStart",
                                                                                  "colorSecondary": "MuiInputBase-colorSecondary MuiInput-colorSecondary",
                                                                                  "disabled": "Mui-disabled Mui-disabled",
                                                                                  "error": "Mui-error Mui-error",
                                                                                  "focused": "Mui-focused Mui-focused",
                                                                                  "formControl": "MuiInputBase-formControl MuiInput-formControl",
                                                                                  "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                                                                                  "input": "MuiInputBase-input MuiInput-input",
                                                                                  "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                                                                  "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                                                                  "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                                                                  "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                                                                                  "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                                                                                  "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                                                                                  "marginDense": "MuiInputBase-marginDense MuiInput-marginDense",
                                                                                  "multiline": "MuiInputBase-multiline MuiInput-multiline",
                                                                                  "root": "MuiInputBase-root MuiInput-root MuiInput-underline",
                                                                                }
                                                                              }
                                                                              fullWidth={true}
                                                                              inputComponent="input"
                                                                              multiline={false}
                                                                              onChange={[Function]}
                                                                              type="text"
                                                                              value=""
                                                                            >
                                                                              <div
                                                                                className="MuiInputBase-root MuiInput-root MuiInput-underline MuiInputBase-fullWidth MuiInput-fullWidth MuiInputBase-formControl MuiInput-formControl"
                                                                                onClick={[Function]}
                                                                              >
                                                                                <input
                                                                                  aria-invalid={false}
                                                                                  autoFocus={false}
                                                                                  className="MuiInputBase-input MuiInput-input"
                                                                                  disabled={false}
                                                                                  onAnimationStart={[Function]}
                                                                                  onBlur={[Function]}
                                                                                  onChange={[Function]}
                                                                                  onFocus={[Function]}
                                                                                  required={false}
                                                                                  type="text"
                                                                                  value=""
                                                                                />
                                                                              </div>
                                                                            </ForwardRef(InputBase)>
                                                                          </WithStyles(ForwardRef(InputBase))>
                                                                        </ForwardRef(Input)>
                                                                      </WithStyles(ForwardRef(Input))>
                                                                    </div>
                                                                  </ForwardRef(FormControl)>
                                                                </WithStyles(ForwardRef(FormControl))>
                                                              </ForwardRef(TextField)>
                                                            </WithStyles(ForwardRef(TextField))>
                                                            <WithStyles(ForwardRef(TextField))
                                                              fullWidth={true}
                                                              key="v3"
                                                              label="Empty password input"
                                                              margin="normal"
                                                              onChange={[Function]}
                                                              type="password"
                                                              value=""
                                                            >
                                                              <ForwardRef(TextField)
                                                                classes={
                                                                  Object {
                                                                    "root": "MuiTextField-root",
                                                                  }
                                                                }
                                                                fullWidth={true}
                                                                label="Empty password input"
                                                                margin="normal"
                                                                onChange={[Function]}
                                                                type="password"
                                                                value=""
                                                              >
                                                                <WithStyles(ForwardRef(FormControl))
                                                                  className="MuiTextField-root"
                                                                  color="primary"
                                                                  disabled={false}
                                                                  error={false}
                                                                  fullWidth={true}
                                                                  margin="normal"
                                                                  required={false}
                                                                  variant="standard"
                                                                >
                                                                  <ForwardRef(FormControl)
                                                                    className="MuiTextField-root"
                                                                    classes={
                                                                      Object {
                                                                        "fullWidth": "MuiFormControl-fullWidth",
                                                                        "marginDense": "MuiFormControl-marginDense",
                                                                        "marginNormal": "MuiFormControl-marginNormal",
                                                                        "root": "MuiFormControl-root",
                                                                      }
                                                                    }
                                                                    color="primary"
                                                                    disabled={false}
                                                                    error={false}
                                                                    fullWidth={true}
                                                                    margin="normal"
                                                                    required={false}
                                                                    variant="standard"
                                                                  >
                                                                    <div
                                                                      className="MuiFormControl-root MuiTextField-root MuiFormControl-marginNormal MuiFormControl-fullWidth"
                                                                    >
                                                                      <WithStyles(ForwardRef(InputLabel))>
                                                                        <ForwardRef(InputLabel)
                                                                          classes={
                                                                            Object {
                                                                              "animated": "MuiInputLabel-animated",
                                                                              "asterisk": "MuiInputLabel-asterisk",
                                                                              "disabled": "Mui-disabled",
                                                                              "error": "Mui-error",
                                                                              "filled": "MuiInputLabel-filled",
                                                                              "focused": "Mui-focused",
                                                                              "formControl": "MuiInputLabel-formControl",
                                                                              "marginDense": "MuiInputLabel-marginDense",
                                                                              "outlined": "MuiInputLabel-outlined",
                                                                              "required": "Mui-required",
                                                                              "root": "MuiInputLabel-root",
                                                                              "shrink": "MuiInputLabel-shrink",
                                                                            }
                                                                          }
                                                                        >
                                                                          <WithStyles(ForwardRef(FormLabel))
                                                                            className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                                                                            classes={
                                                                              Object {
                                                                                "asterisk": "MuiInputLabel-asterisk",
                                                                                "disabled": "Mui-disabled",
                                                                                "error": "Mui-error",
                                                                                "focused": "Mui-focused",
                                                                                "required": "Mui-required",
                                                                              }
                                                                            }
                                                                            data-shrink={false}
                                                                          >
                                                                            <ForwardRef(FormLabel)
                                                                              className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                                                                              classes={
                                                                                Object {
                                                                                  "asterisk": "MuiFormLabel-asterisk MuiInputLabel-asterisk",
                                                                                  "colorSecondary": "MuiFormLabel-colorSecondary",
                                                                                  "disabled": "Mui-disabled Mui-disabled",
                                                                                  "error": "Mui-error Mui-error",
                                                                                  "filled": "MuiFormLabel-filled",
                                                                                  "focused": "Mui-focused Mui-focused",
                                                                                  "required": "Mui-required Mui-required",
                                                                                  "root": "MuiFormLabel-root",
                                                                                }
                                                                              }
                                                                              data-shrink={false}
                                                                            >
                                                                              <label
                                                                                className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                                                                                data-shrink={false}
                                                                              >
                                                                                Empty password input
                                                                              </label>
                                                                            </ForwardRef(FormLabel)>
                                                                          </WithStyles(ForwardRef(FormLabel))>
                                                                        </ForwardRef(InputLabel)>
                                                                      </WithStyles(ForwardRef(InputLabel))>
                                                                      <WithStyles(ForwardRef(Input))
                                                                        autoFocus={false}
                                                                        fullWidth={true}
                                                                        multiline={false}
                                                                        onChange={[Function]}
                                                                        type="password"
                                                                        value=""
                                                                      >
                                                                        <ForwardRef(Input)
                                                                          autoFocus={false}
                                                                          classes={
                                                                            Object {
                                                                              "colorSecondary": "MuiInput-colorSecondary",
                                                                              "disabled": "Mui-disabled",
                                                                              "error": "Mui-error",
                                                                              "focused": "Mui-focused",
                                                                              "formControl": "MuiInput-formControl",
                                                                              "fullWidth": "MuiInput-fullWidth",
                                                                              "input": "MuiInput-input",
                                                                              "inputMarginDense": "MuiInput-inputMarginDense",
                                                                              "inputMultiline": "MuiInput-inputMultiline",
                                                                              "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                                              "marginDense": "MuiInput-marginDense",
                                                                              "multiline": "MuiInput-multiline",
                                                                              "root": "MuiInput-root",
                                                                              "underline": "MuiInput-underline",
                                                                            }
                                                                          }
                                                                          fullWidth={true}
                                                                          multiline={false}
                                                                          onChange={[Function]}
                                                                          type="password"
                                                                          value=""
                                                                        >
                                                                          <WithStyles(ForwardRef(InputBase))
                                                                            autoFocus={false}
                                                                            classes={
                                                                              Object {
                                                                                "colorSecondary": "MuiInput-colorSecondary",
                                                                                "disabled": "Mui-disabled",
                                                                                "error": "Mui-error",
                                                                                "focused": "Mui-focused",
                                                                                "formControl": "MuiInput-formControl",
                                                                                "fullWidth": "MuiInput-fullWidth",
                                                                                "input": "MuiInput-input",
                                                                                "inputMarginDense": "MuiInput-inputMarginDense",
                                                                                "inputMultiline": "MuiInput-inputMultiline",
                                                                                "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                                                "marginDense": "MuiInput-marginDense",
                                                                                "multiline": "MuiInput-multiline",
                                                                                "root": "MuiInput-root MuiInput-underline",
                                                                                "underline": null,
                                                                              }
                                                                            }
                                                                            fullWidth={true}
                                                                            inputComponent="input"
                                                                            multiline={false}
                                                                            onChange={[Function]}
                                                                            type="password"
                                                                            value=""
                                                                          >
                                                                            <ForwardRef(InputBase)
                                                                              autoFocus={false}
                                                                              classes={
                                                                                Object {
                                                                                  "adornedEnd": "MuiInputBase-adornedEnd",
                                                                                  "adornedStart": "MuiInputBase-adornedStart",
                                                                                  "colorSecondary": "MuiInputBase-colorSecondary MuiInput-colorSecondary",
                                                                                  "disabled": "Mui-disabled Mui-disabled",
                                                                                  "error": "Mui-error Mui-error",
                                                                                  "focused": "Mui-focused Mui-focused",
                                                                                  "formControl": "MuiInputBase-formControl MuiInput-formControl",
                                                                                  "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                                                                                  "input": "MuiInputBase-input MuiInput-input",
                                                                                  "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                                                                  "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                                                                  "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                                                                  "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                                                                                  "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                                                                                  "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                                                                                  "marginDense": "MuiInputBase-marginDense MuiInput-marginDense",
                                                                                  "multiline": "MuiInputBase-multiline MuiInput-multiline",
                                                                                  "root": "MuiInputBase-root MuiInput-root MuiInput-underline",
                                                                                }
                                                                              }
                                                                              fullWidth={true}
                                                                              inputComponent="input"
                                                                              multiline={false}
                                                                              onChange={[Function]}
                                                                              type="password"
                                                                              value=""
                                                                            >
                                                                              <div
                                                                                className="MuiInputBase-root MuiInput-root MuiInput-underline MuiInputBase-fullWidth MuiInput-fullWidth MuiInputBase-formControl MuiInput-formControl"
                                                                                onClick={[Function]}
                                                                              >
                                                                                <input
                                                                                  aria-invalid={false}
                                                                                  autoFocus={false}
                                                                                  className="MuiInputBase-input MuiInput-input"
                                                                                  disabled={false}
                                                                                  onAnimationStart={[Function]}
                                                                                  onBlur={[Function]}
                                                                                  onChange={[Function]}
                                                                                  onFocus={[Function]}
                                                                                  required={false}
                                                                                  type="password"
                                                                                  value=""
                                                                                />
                                                                              </div>
                                                                            </ForwardRef(InputBase)>
                                                                          </WithStyles(ForwardRef(InputBase))>
                                                                        </ForwardRef(Input)>
                                                                      </WithStyles(ForwardRef(Input))>
                                                                    </div>
                                                                  </ForwardRef(FormControl)>
                                                                </WithStyles(ForwardRef(FormControl))>
                                                              </ForwardRef(TextField)>
                                                            </WithStyles(ForwardRef(TextField))>
                                                          </div>
                                                        </ForwardRef(DialogContent)>
                                                      </WithStyles(ForwardRef(DialogContent))>
                                                      <WithStyles(ForwardRef(DialogActions))>
                                                        <ForwardRef(DialogActions)
                                                          classes={
                                                            Object {
                                                              "root": "MuiDialogActions-root",
                                                              "spacing": "MuiDialogActions-spacing",
                                                            }
                                                          }
                                                        >
                                                          <div
                                                            className="MuiDialogActions-root MuiDialogActions-spacing"
                                                          >
                                                            <WithStyles(ForwardRef(Button))
                                                              autoFocus={true}
                                                              color="primary"
                                                              key="0"
                                                              onClick={[Function]}
                                                            >
                                                              <ForwardRef(Button)
                                                                autoFocus={true}
                                                                classes={
                                                                  Object {
                                                                    "colorInherit": "MuiButton-colorInherit",
                                                                    "contained": "MuiButton-contained",
                                                                    "containedPrimary": "MuiButton-containedPrimary",
                                                                    "containedSecondary": "MuiButton-containedSecondary",
                                                                    "containedSizeLarge": "MuiButton-containedSizeLarge",
                                                                    "containedSizeSmall": "MuiButton-containedSizeSmall",
                                                                    "disableElevation": "MuiButton-disableElevation",
                                                                    "disabled": "Mui-disabled",
                                                                    "endIcon": "MuiButton-endIcon",
                                                                    "focusVisible": "Mui-focusVisible",
                                                                    "fullWidth": "MuiButton-fullWidth",
                                                                    "iconSizeLarge": "MuiButton-iconSizeLarge",
                                                                    "iconSizeMedium": "MuiButton-iconSizeMedium",
                                                                    "iconSizeSmall": "MuiButton-iconSizeSmall",
                                                                    "label": "MuiButton-label",
                                                                    "outlined": "MuiButton-outlined",
                                                                    "outlinedPrimary": "MuiButton-outlinedPrimary",
                                                                    "outlinedSecondary": "MuiButton-outlinedSecondary",
                                                                    "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                                                                    "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                                                                    "root": "MuiButton-root",
                                                                    "sizeLarge": "MuiButton-sizeLarge",
                                                                    "sizeSmall": "MuiButton-sizeSmall",
                                                                    "startIcon": "MuiButton-startIcon",
                                                                    "text": "MuiButton-text",
                                                                    "textPrimary": "MuiButton-textPrimary",
                                                                    "textSecondary": "MuiButton-textSecondary",
                                                                    "textSizeLarge": "MuiButton-textSizeLarge",
                                                                    "textSizeSmall": "MuiButton-textSizeSmall",
                                                                  }
                                                                }
                                                                color="primary"
                                                                onClick={[Function]}
                                                              >
                                                                <WithStyles(ForwardRef(ButtonBase))
                                                                  autoFocus={true}
                                                                  className="MuiButton-root MuiButton-text MuiButton-textPrimary"
                                                                  component="button"
                                                                  disabled={false}
                                                                  focusRipple={true}
                                                                  focusVisibleClassName="Mui-focusVisible"
                                                                  onClick={[Function]}
                                                                  type="button"
                                                                >
                                                                  <ForwardRef(ButtonBase)
                                                                    autoFocus={true}
                                                                    className="MuiButton-root MuiButton-text MuiButton-textPrimary"
                                                                    classes={
                                                                      Object {
                                                                        "disabled": "Mui-disabled",
                                                                        "focusVisible": "Mui-focusVisible",
                                                                        "root": "MuiButtonBase-root",
                                                                      }
                                                                    }
                                                                    component="button"
                                                                    disabled={false}
                                                                    focusRipple={true}
                                                                    focusVisibleClassName="Mui-focusVisible"
                                                                    onClick={[Function]}
                                                                    type="button"
                                                                  >
                                                                    <button
                                                                      autoFocus={true}
                                                                      className="MuiButtonBase-root MuiButton-root MuiButton-text MuiButton-textPrimary Mui-focusVisible Mui-focusVisible"
                                                                      disabled={false}
                                                                      onBlur={[Function]}
                                                                      onClick={[Function]}
                                                                      onDragLeave={[Function]}
                                                                      onFocus={[Function]}
                                                                      onKeyDown={[Function]}
                                                                      onKeyUp={[Function]}
                                                                      onMouseDown={[Function]}
                                                                      onMouseLeave={[Function]}
                                                                      onMouseUp={[Function]}
                                                                      onTouchEnd={[Function]}
                                                                      onTouchMove={[Function]}
                                                                      onTouchStart={[Function]}
                                                                      tabIndex={0}
                                                                      type="button"
                                                                    >
                                                                      <span
                                                                        className="MuiButton-label"
                                                                      >
                                                                        Btn0
                                                                      </span>
                                                                      <WithStyles(memo)
                                                                        center={false}
                                                                      >
                                                                        <ForwardRef(TouchRipple)
                                                                          center={false}
                                                                          classes={
                                                                            Object {
                                                                              "child": "MuiTouchRipple-child",
                                                                              "childLeaving": "MuiTouchRipple-childLeaving",
                                                                              "childPulsate": "MuiTouchRipple-childPulsate",
                                                                              "ripple": "MuiTouchRipple-ripple",
                                                                              "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                              "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                              "root": "MuiTouchRipple-root",
                                                                            }
                                                                          }
                                                                        >
                                                                          <span
                                                                            className="MuiTouchRipple-root"
                                                                          >
                                                                            <TransitionGroup
                                                                              childFactory={[Function]}
                                                                              component={null}
                                                                              exit={true}
                                                                            >
                                                                              <Ripple
                                                                                classes={
                                                                                  Object {
                                                                                    "child": "MuiTouchRipple-child",
                                                                                    "childLeaving": "MuiTouchRipple-childLeaving",
                                                                                    "childPulsate": "MuiTouchRipple-childPulsate",
                                                                                    "ripple": "MuiTouchRipple-ripple",
                                                                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                                    "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                                    "root": "MuiTouchRipple-root",
                                                                                  }
                                                                                }
                                                                                exit={true}
                                                                                in={true}
                                                                                key=".$0"
                                                                                onExited={[Function]}
                                                                                pulsate={true}
                                                                                rippleSize={1}
                                                                                rippleX={0}
                                                                                rippleY={0}
                                                                                timeout={550}
                                                                              >
                                                                                <span
                                                                                  className="MuiTouchRipple-ripple MuiTouchRipple-rippleVisible MuiTouchRipple-ripplePulsate"
                                                                                  style={
                                                                                    Object {
                                                                                      "height": 1,
                                                                                      "left": -0.5,
                                                                                      "top": -0.5,
                                                                                      "width": 1,
                                                                                    }
                                                                                  }
                                                                                >
                                                                                  <span
                                                                                    className="MuiTouchRipple-child MuiTouchRipple-childPulsate"
                                                                                  />
                                                                                </span>
                                                                              </Ripple>
                                                                            </TransitionGroup>
                                                                          </span>
                                                                        </ForwardRef(TouchRipple)>
                                                                      </WithStyles(memo)>
                                                                    </button>
                                                                  </ForwardRef(ButtonBase)>
                                                                </WithStyles(ForwardRef(ButtonBase))>
                                                              </ForwardRef(Button)>
                                                            </WithStyles(ForwardRef(Button))>
                                                          </div>
                                                        </ForwardRef(DialogActions)>
                                                      </WithStyles(ForwardRef(DialogActions))>
                                                    </div>
                                                  </ForwardRef(Paper)>
                                                </WithStyles(ForwardRef(Paper))>
                                              </div>
                                            </Transition>
                                          </ForwardRef(Fade)>
                                          <div
                                            data-test="sentinelEnd"
                                            tabIndex={0}
                                          />
                                        </Unstable_TrapFocus>
                                      </div>
                                    </Portal>
                                  </ForwardRef(Portal)>
                                </ForwardRef(Modal)>
                              </ForwardRef(Dialog)>
                            </WithStyles(ForwardRef(Dialog))>
                          </Memo(FormDialogRaw)>
                        </MyCustomDialog>
                      </Memo(DialogContextProvider)>
                    </Router>
                  </Memo(PermissionContextProvider)>
                </QueryClientProvider>
              </ThemeProvider>
            </Memo(ThemeProvider)>
          </MuiPickersUtilsProvider>
        </Memo(MuiPickerUtils)>
      </I18nextProvider>
    </Memo(CCI18nProvider)>
  </Suspense>
</Memo(ComponentsCareFramework)>
`;

exports[`Storyshots Non-Standalone/Dialog Info 1`] = `
<Memo(ComponentsCareFramework)
  defaultTheme={[Function]}
>
  <Suspense
    fallback={<Memo(Loader) />}
  >
    <Memo(CCI18nProvider)>
      <I18nextProvider
        defaultNS="translation"
        i18n={
          I18n {
            "addResource": [Function],
            "addResourceBundle": [Function],
            "addResources": [Function],
            "format": undefined,
            "getDataByLanguage": [Function],
            "getResource": [Function],
            "getResourceBundle": [Function],
            "hasResourceBundle": [Function],
            "isInitialized": true,
            "isLanguageChangingTo": undefined,
            "language": "en",
            "languages": Array [
              "en",
            ],
            "logger": Logger {
              "debug": true,
              "logger": Object {
                "error": [Function],
                "log": [Function],
                "output": [Function],
                "type": "logger",
                "warn": [Function],
              },
              "options": Object {
                "appendNamespaceToCIMode": false,
                "appendNamespaceToMissingKey": false,
                "contextSeparator": "_",
                "debug": true,
                "defaultNS": "translation",
                "fallbackLng": Array [
                  "en",
                ],
                "fallbackNS": false,
                "initImmediate": false,
                "interpolation": Object {
                  "escapeValue": false,
                },
                "joinArrays": false,
                "keySeparator": ".",
                "load": "all",
                "missingInterpolationHandler": false,
                "missingKeyHandler": false,
                "nonExplicitSupportedLngs": true,
                "nonExplicitWhitelist": false,
                "ns": Array [],
                "nsSeparator": ":",
                "overloadTranslationOptionHandler": [Function],
                "parseMissingKeyHandler": false,
                "partialBundledLanguages": false,
                "pluralSeparator": "_",
                "postProcess": false,
                "postProcessPassResolved": false,
                "preload": false,
                "resources": Object {
                  "de": Object {},
                  "en": Object {},
                  "fr": Object {},
                  "ru": Object {},
                  "uz": Object {},
                },
                "returnEmptyString": true,
                "returnNull": true,
                "returnObjects": false,
                "returnedObjectHandler": false,
                "saveMissing": false,
                "saveMissingPlurals": true,
                "saveMissingTo": "fallback",
                "simplifyPluralSuffix": true,
                "supportedLngs": Array [
                  "de",
                  "en",
                  "fr",
                  "ru",
                  "uz",
                  "cimode",
                ],
                "updateMissing": false,
                "whitelist": false,
              },
              "prefix": "i18next:",
            },
            "modules": Object {
              "external": Array [],
              "languageDetector": [Function],
            },
            "observers": Object {
              "languageChanged": Array [
                [Function],
                [Function],
              ],
            },
            "options": Object {
              "appendNamespaceToCIMode": false,
              "appendNamespaceToMissingKey": false,
              "contextSeparator": "_",
              "debug": true,
              "defaultNS": "translation",
              "fallbackLng": Array [
                "en",
              ],
              "fallbackNS": false,
              "initImmediate": false,
              "interpolation": Object {
                "escapeValue": false,
              },
              "joinArrays": false,
              "keySeparator": ".",
              "load": "all",
              "missingInterpolationHandler": false,
              "missingKeyHandler": false,
              "nonExplicitSupportedLngs": true,
              "nonExplicitWhitelist": false,
              "ns": Array [],
              "nsSeparator": ":",
              "overloadTranslationOptionHandler": [Function],
              "parseMissingKeyHandler": false,
              "partialBundledLanguages": false,
              "pluralSeparator": "_",
              "postProcess": false,
              "postProcessPassResolved": false,
              "preload": false,
              "resources": Object {
                "de": Object {},
                "en": Object {},
                "fr": Object {},
                "ru": Object {},
                "uz": Object {},
              },
              "returnEmptyString": true,
              "returnNull": true,
              "returnObjects": false,
              "returnedObjectHandler": false,
              "saveMissing": false,
              "saveMissingPlurals": true,
              "saveMissingTo": "fallback",
              "simplifyPluralSuffix": true,
              "supportedLngs": Array [
                "de",
                "en",
                "fr",
                "ru",
                "uz",
                "cimode",
              ],
              "updateMissing": false,
              "whitelist": false,
            },
            "removeResourceBundle": [Function],
            "reportNamespaces": ReportNamespaces {
              "usedNamespaces": Object {
                "translation": true,
              },
            },
            "services": Object {
              "backendConnector": Connector {
                "backend": null,
                "languageUtils": LanguageUtil {
                  "logger": Logger {
                    "debug": true,
                    "logger": Object {
                      "error": [Function],
                      "log": [Function],
                      "output": [Function],
                      "type": "logger",
                      "warn": [Function],
                    },
                    "options": Object {
                      "appendNamespaceToCIMode": false,
                      "appendNamespaceToMissingKey": false,
                      "contextSeparator": "_",
                      "debug": true,
                      "defaultNS": "translation",
                      "fallbackLng": Array [
                        "en",
                      ],
                      "fallbackNS": false,
                      "initImmediate": false,
                      "interpolation": Object {
                        "escapeValue": false,
                      },
                      "joinArrays": false,
                      "keySeparator": ".",
                      "load": "all",
                      "missingInterpolationHandler": false,
                      "missingKeyHandler": false,
                      "nonExplicitSupportedLngs": true,
                      "nonExplicitWhitelist": false,
                      "ns": Array [],
                      "nsSeparator": ":",
                      "overloadTranslationOptionHandler": [Function],
                      "parseMissingKeyHandler": false,
                      "partialBundledLanguages": false,
                      "pluralSeparator": "_",
                      "postProcess": false,
                      "postProcessPassResolved": false,
                      "prefix": "i18next::languageUtils:",
                      "preload": false,
                      "resources": Object {
                        "de": Object {},
                        "en": Object {},
                        "fr": Object {},
                        "ru": Object {},
                        "uz": Object {},
                      },
                      "returnEmptyString": true,
                      "returnNull": true,
                      "returnObjects": false,
                      "returnedObjectHandler": false,
                      "saveMissing": false,
                      "saveMissingPlurals": true,
                      "saveMissingTo": "fallback",
                      "simplifyPluralSuffix": true,
                      "supportedLngs": Array [
                        "de",
                        "en",
                        "fr",
                        "ru",
                        "uz",
                        "cimode",
                      ],
                      "updateMissing": false,
                      "whitelist": false,
                    },
                    "prefix": "i18next::languageUtils:",
                  },
                  "options": Object {
                    "appendNamespaceToCIMode": false,
                    "appendNamespaceToMissingKey": false,
                    "contextSeparator": "_",
                    "debug": true,
                    "defaultNS": "translation",
                    "fallbackLng": Array [
                      "en",
                    ],
                    "fallbackNS": false,
                    "initImmediate": false,
                    "interpolation": Object {
                      "escapeValue": false,
                    },
                    "joinArrays": false,
                    "keySeparator": ".",
                    "load": "all",
                    "missingInterpolationHandler": false,
                    "missingKeyHandler": false,
                    "nonExplicitSupportedLngs": true,
                    "nonExplicitWhitelist": false,
                    "ns": Array [],
                    "nsSeparator": ":",
                    "overloadTranslationOptionHandler": [Function],
                    "parseMissingKeyHandler": false,
                    "partialBundledLanguages": false,
                    "pluralSeparator": "_",
                    "postProcess": false,
                    "postProcessPassResolved": false,
                    "preload": false,
                    "resources": Object {
                      "de": Object {},
                      "en": Object {},
                      "fr": Object {},
                      "ru": Object {},
                      "uz": Object {},
                    },
                    "returnEmptyString": true,
                    "returnNull": true,
                    "returnObjects": false,
                    "returnedObjectHandler": false,
                    "saveMissing": false,
                    "saveMissingPlurals": true,
                    "saveMissingTo": "fallback",
                    "simplifyPluralSuffix": true,
                    "supportedLngs": Array [
                      "de",
                      "en",
                      "fr",
                      "ru",
                      "uz",
                      "cimode",
                    ],
                    "updateMissing": false,
                    "whitelist": false,
                  },
                  "supportedLngs": Array [
                    "de",
                    "en",
                    "fr",
                    "ru",
                    "uz",
                    "cimode",
                  ],
                  "whitelist": Array [
                    "de",
                    "en",
                    "fr",
                    "ru",
                    "uz",
                    "cimode",
                  ],
                },
                "logger": Logger {
                  "debug": true,
                  "logger": Object {
                    "error": [Function],
                    "log": [Function],
                    "output": [Function],
                    "type": "logger",
                    "warn": [Function],
                  },
                  "options": Object {
                    "appendNamespaceToCIMode": false,
                    "appendNamespaceToMissingKey": false,
                    "contextSeparator": "_",
                    "debug": true,
                    "defaultNS": "translation",
                    "fallbackLng": Array [
                      "en",
                    ],
                    "fallbackNS": false,
                    "initImmediate": false,
                    "interpolation": Object {
                      "escapeValue": false,
                    },
                    "joinArrays": false,
                    "keySeparator": ".",
                    "load": "all",
                    "missingInterpolationHandler": false,
                    "missingKeyHandler": false,
                    "nonExplicitSupportedLngs": true,
                    "nonExplicitWhitelist": false,
                    "ns": Array [],
                    "nsSeparator": ":",
                    "overloadTranslationOptionHandler": [Function],
                    "parseMissingKeyHandler": false,
                    "partialBundledLanguages": false,
                    "pluralSeparator": "_",
                    "postProcess": false,
                    "postProcessPassResolved": false,
                    "prefix": "i18next::backendConnector:",
                    "preload": false,
                    "resources": Object {
                      "de": Object {},
                      "en": Object {},
                      "fr": Object {},
                      "ru": Object {},
                      "uz": Object {},
                    },
                    "returnEmptyString": true,
                    "returnNull": true,
                    "returnObjects": false,
                    "returnedObjectHandler": false,
                    "saveMissing": false,
                    "saveMissingPlurals": true,
                    "saveMissingTo": "fallback",
                    "simplifyPluralSuffix": true,
                    "supportedLngs": Array [
                      "de",
                      "en",
                      "fr",
                      "ru",
                      "uz",
                      "cimode",
                    ],
                    "updateMissing": false,
                    "whitelist": false,
                  },
                  "prefix": "i18next::backendConnector:",
                },
                "observers": Object {
                  "*": Array [
                    [Function],
                  ],
                },
                "options": Object {
                  "appendNamespaceToCIMode": false,
                  "appendNamespaceToMissingKey": false,
                  "contextSeparator": "_",
                  "debug": true,
                  "defaultNS": "translation",
                  "fallbackLng": Array [
                    "en",
                  ],
                  "fallbackNS": false,
                  "initImmediate": false,
                  "interpolation": Object {
                    "escapeValue": false,
                  },
                  "joinArrays": false,
                  "keySeparator": ".",
                  "load": "all",
                  "missingInterpolationHandler": false,
                  "missingKeyHandler": false,
                  "nonExplicitSupportedLngs": true,
                  "nonExplicitWhitelist": false,
                  "ns": Array [],
                  "nsSeparator": ":",
                  "overloadTranslationOptionHandler": [Function],
                  "parseMissingKeyHandler": false,
                  "partialBundledLanguages": false,
                  "pluralSeparator": "_",
                  "postProcess": false,
                  "postProcessPassResolved": false,
                  "preload": false,
                  "resources": Object {
                    "de": Object {},
                    "en": Object {},
                    "fr": Object {},
                    "ru": Object {},
                    "uz": Object {},
                  },
                  "returnEmptyString": true,
                  "returnNull": true,
                  "returnObjects": false,
                  "returnedObjectHandler": false,
                  "saveMissing": false,
                  "saveMissingPlurals": true,
                  "saveMissingTo": "fallback",
                  "simplifyPluralSuffix": true,
                  "supportedLngs": Array [
                    "de",
                    "en",
                    "fr",
                    "ru",
                    "uz",
                    "cimode",
                  ],
                  "updateMissing": false,
                  "whitelist": false,
                },
                "queue": Array [],
                "services": [Circular],
                "state": Object {},
                "store": Object {
                  "de": Object {},
                  "en": Object {},
                  "fr": Object {},
                  "ru": Object {},
                  "uz": Object {},
                },
              },
              "interpolator": Interpolator {
                "alwaysFormat": false,
                "escape": [Function],
                "escapeValue": false,
                "format": [Function],
                "formatSeparator": ",",
                "logger": Logger {
                  "debug": true,
                  "logger": Object {
                    "error": [Function],
                    "log": [Function],
                    "output": [Function],
                    "type": "logger",
                    "warn": [Function],
                  },
                  "options": Object {
                    "appendNamespaceToCIMode": false,
                    "appendNamespaceToMissingKey": false,
                    "contextSeparator": "_",
                    "debug": true,
                    "defaultNS": "translation",
                    "fallbackLng": Array [
                      "en",
                    ],
                    "fallbackNS": false,
                    "initImmediate": false,
                    "interpolation": Object {
                      "escapeValue": false,
                    },
                    "joinArrays": false,
                    "keySeparator": ".",
                    "load": "all",
                    "missingInterpolationHandler": false,
                    "missingKeyHandler": false,
                    "nonExplicitSupportedLngs": true,
                    "nonExplicitWhitelist": false,
                    "ns": Array [],
                    "nsSeparator": ":",
                    "overloadTranslationOptionHandler": [Function],
                    "parseMissingKeyHandler": false,
                    "partialBundledLanguages": false,
                    "pluralSeparator": "_",
                    "postProcess": false,
                    "postProcessPassResolved": false,
                    "prefix": "i18next::interpolator:",
                    "preload": false,
                    "resources": Object {
                      "de": Object {},
                      "en": Object {},
                      "fr": Object {},
                      "ru": Object {},
                      "uz": Object {},
                    },
                    "returnEmptyString": true,
                    "returnNull": true,
                    "returnObjects": false,
                    "returnedObjectHandler": false,
                    "saveMissing": false,
                    "saveMissingPlurals": true,
                    "saveMissingTo": "fallback",
                    "simplifyPluralSuffix": true,
                    "supportedLngs": Array [
                      "de",
                      "en",
                      "fr",
                      "ru",
                      "uz",
                      "cimode",
                    ],
                    "updateMissing": false,
                    "whitelist": false,
                  },
                  "prefix": "i18next::interpolator:",
                },
                "maxReplaces": 1000,
                "nestingOptionsSeparator": ",",
                "nestingPrefix": "\\\\$t\\\\(",
                "nestingRegexp": /\\\\\\$t\\\\\\(\\(\\.\\+\\?\\)\\\\\\)/g,
                "nestingSuffix": "\\\\)",
                "options": Object {
                  "appendNamespaceToCIMode": false,
                  "appendNamespaceToMissingKey": false,
                  "contextSeparator": "_",
                  "debug": true,
                  "defaultNS": "translation",
                  "fallbackLng": Array [
                    "en",
                  ],
                  "fallbackNS": false,
                  "initImmediate": false,
                  "interpolation": Object {
                    "escapeValue": false,
                  },
                  "joinArrays": false,
                  "keySeparator": ".",
                  "load": "all",
                  "missingInterpolationHandler": false,
                  "missingKeyHandler": false,
                  "nonExplicitSupportedLngs": true,
                  "nonExplicitWhitelist": false,
                  "ns": Array [],
                  "nsSeparator": ":",
                  "overloadTranslationOptionHandler": [Function],
                  "parseMissingKeyHandler": false,
                  "partialBundledLanguages": false,
                  "pluralSeparator": "_",
                  "postProcess": false,
                  "postProcessPassResolved": false,
                  "preload": false,
                  "resources": Object {
                    "de": Object {},
                    "en": Object {},
                    "fr": Object {},
                    "ru": Object {},
                    "uz": Object {},
                  },
                  "returnEmptyString": true,
                  "returnNull": true,
                  "returnObjects": false,
                  "returnedObjectHandler": false,
                  "saveMissing": false,
                  "saveMissingPlurals": true,
                  "saveMissingTo": "fallback",
                  "simplifyPluralSuffix": true,
                  "supportedLngs": Array [
                    "de",
                    "en",
                    "fr",
                    "ru",
                    "uz",
                    "cimode",
                  ],
                  "updateMissing": false,
                  "whitelist": false,
                },
                "prefix": "{{",
                "regexp": /\\{\\{\\(\\.\\+\\?\\)\\}\\}/g,
                "regexpUnescape": /\\{\\{-\\(\\.\\+\\?\\)\\}\\}/g,
                "suffix": "}}",
                "unescapePrefix": "-",
                "unescapeSuffix": "",
                "useRawValueToEscape": false,
              },
              "languageDetector": Browser {
                "detectors": Object {
                  "cookie": Object {
                    "cacheUserLanguage": [Function],
                    "lookup": [Function],
                    "name": "cookie",
                  },
                  "htmlTag": Object {
                    "lookup": [Function],
                    "name": "htmlTag",
                  },
                  "localStorage": Object {
                    "cacheUserLanguage": [Function],
                    "lookup": [Function],
                    "name": "localStorage",
                  },
                  "navigator": Object {
                    "lookup": [Function],
                    "name": "navigator",
                  },
                  "path": Object {
                    "lookup": [Function],
                    "name": "path",
                  },
                  "querystring": Object {
                    "lookup": [Function],
                    "name": "querystring",
                  },
                  "sessionStorage": Object {
                    "cacheUserLanguage": [Function],
                    "lookup": [Function],
                    "name": "sessionStorage",
                  },
                  "subdomain": Object {
                    "lookup": [Function],
                    "name": "subdomain",
                  },
                },
                "i18nOptions": Object {
                  "appendNamespaceToCIMode": false,
                  "appendNamespaceToMissingKey": false,
                  "contextSeparator": "_",
                  "debug": true,
                  "defaultNS": "translation",
                  "fallbackLng": Array [
                    "en",
                  ],
                  "fallbackNS": false,
                  "initImmediate": false,
                  "interpolation": Object {
                    "escapeValue": false,
                  },
                  "joinArrays": false,
                  "keySeparator": ".",
                  "load": "all",
                  "missingInterpolationHandler": false,
                  "missingKeyHandler": false,
                  "nonExplicitSupportedLngs": true,
                  "nonExplicitWhitelist": false,
                  "ns": Array [],
                  "nsSeparator": ":",
                  "overloadTranslationOptionHandler": [Function],
                  "parseMissingKeyHandler": false,
                  "partialBundledLanguages": false,
                  "pluralSeparator": "_",
                  "postProcess": false,
                  "postProcessPassResolved": false,
                  "preload": false,
                  "resources": Object {
                    "de": Object {},
                    "en": Object {},
                    "fr": Object {},
                    "ru": Object {},
                    "uz": Object {},
                  },
                  "returnEmptyString": true,
                  "returnNull": true,
                  "returnObjects": false,
                  "returnedObjectHandler": false,
                  "saveMissing": false,
                  "saveMissingPlurals": true,
                  "saveMissingTo": "fallback",
                  "simplifyPluralSuffix": true,
                  "supportedLngs": Array [
                    "de",
                    "en",
                    "fr",
                    "ru",
                    "uz",
                    "cimode",
                  ],
                  "updateMissing": false,
                  "whitelist": false,
                },
                "options": Object {
                  "caches": Array [
                    "localStorage",
                  ],
                  "excludeCacheFor": Array [
                    "cimode",
                  ],
                  "lookupCookie": "i18next",
                  "lookupLocalStorage": "i18nextLng",
                  "lookupQuerystring": "lng",
                  "lookupSessionStorage": "i18nextLng",
                  "order": Array [
                    "querystring",
                    "cookie",
                    "localStorage",
                    "sessionStorage",
                    "navigator",
                    "htmlTag",
                  ],
                },
                "services": [Circular],
                "type": "languageDetector",
              },
              "languageUtils": LanguageUtil {
                "logger": Logger {
                  "debug": true,
                  "logger": Object {
                    "error": [Function],
                    "log": [Function],
                    "output": [Function],
                    "type": "logger",
                    "warn": [Function],
                  },
                  "options": Object {
                    "appendNamespaceToCIMode": false,
                    "appendNamespaceToMissingKey": false,
                    "contextSeparator": "_",
                    "debug": true,
                    "defaultNS": "translation",
                    "fallbackLng": Array [
                      "en",
                    ],
                    "fallbackNS": false,
                    "initImmediate": false,
                    "interpolation": Object {
                      "escapeValue": false,
                    },
                    "joinArrays": false,
                    "keySeparator": ".",
                    "load": "all",
                    "missingInterpolationHandler": false,
                    "missingKeyHandler": false,
                    "nonExplicitSupportedLngs": true,
                    "nonExplicitWhitelist": false,
                    "ns": Array [],
                    "nsSeparator": ":",
                    "overloadTranslationOptionHandler": [Function],
                    "parseMissingKeyHandler": false,
                    "partialBundledLanguages": false,
                    "pluralSeparator": "_",
                    "postProcess": false,
                    "postProcessPassResolved": false,
                    "prefix": "i18next::languageUtils:",
                    "preload": false,
                    "resources": Object {
                      "de": Object {},
                      "en": Object {},
                      "fr": Object {},
                      "ru": Object {},
                      "uz": Object {},
                    },
                    "returnEmptyString": true,
                    "returnNull": true,
                    "returnObjects": false,
                    "returnedObjectHandler": false,
                    "saveMissing": false,
                    "saveMissingPlurals": true,
                    "saveMissingTo": "fallback",
                    "simplifyPluralSuffix": true,
                    "supportedLngs": Array [
                      "de",
                      "en",
                      "fr",
                      "ru",
                      "uz",
                      "cimode",
                    ],
                    "updateMissing": false,
                    "whitelist": false,
                  },
                  "prefix": "i18next::languageUtils:",
                },
                "options": Object {
                  "appendNamespaceToCIMode": false,
                  "appendNamespaceToMissingKey": false,
                  "contextSeparator": "_",
                  "debug": true,
                  "defaultNS": "translation",
                  "fallbackLng": Array [
                    "en",
                  ],
                  "fallbackNS": false,
                  "initImmediate": false,
                  "interpolation": Object {
                    "escapeValue": false,
                  },
                  "joinArrays": false,
                  "keySeparator": ".",
                  "load": "all",
                  "missingInterpolationHandler": false,
                  "missingKeyHandler": false,
                  "nonExplicitSupportedLngs": true,
                  "nonExplicitWhitelist": false,
                  "ns": Array [],
                  "nsSeparator": ":",
                  "overloadTranslationOptionHandler": [Function],
                  "parseMissingKeyHandler": false,
                  "partialBundledLanguages": false,
                  "pluralSeparator": "_",
                  "postProcess": false,
                  "postProcessPassResolved": false,
                  "preload": false,
                  "resources": Object {
                    "de": Object {},
                    "en": Object {},
                    "fr": Object {},
                    "ru": Object {},
                    "uz": Object {},
                  },
                  "returnEmptyString": true,
                  "returnNull": true,
                  "returnObjects": false,
                  "returnedObjectHandler": false,
                  "saveMissing": false,
                  "saveMissingPlurals": true,
                  "saveMissingTo": "fallback",
                  "simplifyPluralSuffix": true,
                  "supportedLngs": Array [
                    "de",
                    "en",
                    "fr",
                    "ru",
                    "uz",
                    "cimode",
                  ],
                  "updateMissing": false,
                  "whitelist": false,
                },
                "supportedLngs": Array [
                  "de",
                  "en",
                  "fr",
                  "ru",
                  "uz",
                  "cimode",
                ],
                "whitelist": Array [
                  "de",
                  "en",
                  "fr",
                  "ru",
                  "uz",
                  "cimode",
                ],
              },
              "logger": Logger {
                "debug": true,
                "logger": Object {
                  "error": [Function],
                  "log": [Function],
                  "output": [Function],
                  "type": "logger",
                  "warn": [Function],
                },
                "options": Object {
                  "appendNamespaceToCIMode": false,
                  "appendNamespaceToMissingKey": false,
                  "contextSeparator": "_",
                  "debug": true,
                  "defaultNS": "translation",
                  "fallbackLng": Array [
                    "en",
                  ],
                  "fallbackNS": false,
                  "initImmediate": false,
                  "interpolation": Object {
                    "escapeValue": false,
                  },
                  "joinArrays": false,
                  "keySeparator": ".",
                  "load": "all",
                  "missingInterpolationHandler": false,
                  "missingKeyHandler": false,
                  "nonExplicitSupportedLngs": true,
                  "nonExplicitWhitelist": false,
                  "ns": Array [],
                  "nsSeparator": ":",
                  "overloadTranslationOptionHandler": [Function],
                  "parseMissingKeyHandler": false,
                  "partialBundledLanguages": false,
                  "pluralSeparator": "_",
                  "postProcess": false,
                  "postProcessPassResolved": false,
                  "preload": false,
                  "resources": Object {
                    "de": Object {},
                    "en": Object {},
                    "fr": Object {},
                    "ru": Object {},
                    "uz": Object {},
                  },
                  "returnEmptyString": true,
                  "returnNull": true,
                  "returnObjects": false,
                  "returnedObjectHandler": false,
                  "saveMissing": false,
                  "saveMissingPlurals": true,
                  "saveMissingTo": "fallback",
                  "simplifyPluralSuffix": true,
                  "supportedLngs": Array [
                    "de",
                    "en",
                    "fr",
                    "ru",
                    "uz",
                    "cimode",
                  ],
                  "updateMissing": false,
                  "whitelist": false,
                },
                "prefix": "i18next:",
              },
              "pluralResolver": PluralResolver {
                "languageUtils": LanguageUtil {
                  "logger": Logger {
                    "debug": true,
                    "logger": Object {
                      "error": [Function],
                      "log": [Function],
                      "output": [Function],
                      "type": "logger",
                      "warn": [Function],
                    },
                    "options": Object {
                      "appendNamespaceToCIMode": false,
                      "appendNamespaceToMissingKey": false,
                      "contextSeparator": "_",
                      "debug": true,
                      "defaultNS": "translation",
                      "fallbackLng": Array [
                        "en",
                      ],
                      "fallbackNS": false,
                      "initImmediate": false,
                      "interpolation": Object {
                        "escapeValue": false,
                      },
                      "joinArrays": false,
                      "keySeparator": ".",
                      "load": "all",
                      "missingInterpolationHandler": false,
                      "missingKeyHandler": false,
                      "nonExplicitSupportedLngs": true,
                      "nonExplicitWhitelist": false,
                      "ns": Array [],
                      "nsSeparator": ":",
                      "overloadTranslationOptionHandler": [Function],
                      "parseMissingKeyHandler": false,
                      "partialBundledLanguages": false,
                      "pluralSeparator": "_",
                      "postProcess": false,
                      "postProcessPassResolved": false,
                      "prefix": "i18next::languageUtils:",
                      "preload": false,
                      "resources": Object {
                        "de": Object {},
                        "en": Object {},
                        "fr": Object {},
                        "ru": Object {},
                        "uz": Object {},
                      },
                      "returnEmptyString": true,
                      "returnNull": true,
                      "returnObjects": false,
                      "returnedObjectHandler": false,
                      "saveMissing": false,
                      "saveMissingPlurals": true,
                      "saveMissingTo": "fallback",
                      "simplifyPluralSuffix": true,
                      "supportedLngs": Array [
                        "de",
                        "en",
                        "fr",
                        "ru",
                        "uz",
                        "cimode",
                      ],
                      "updateMissing": false,
                      "whitelist": false,
                    },
                    "prefix": "i18next::languageUtils:",
                  },
                  "options": Object {
                    "appendNamespaceToCIMode": false,
                    "appendNamespaceToMissingKey": false,
                    "contextSeparator": "_",
                    "debug": true,
                    "defaultNS": "translation",
                    "fallbackLng": Array [
                      "en",
                    ],
                    "fallbackNS": false,
                    "initImmediate": false,
                    "interpolation": Object {
                      "escapeValue": false,
                    },
                    "joinArrays": false,
                    "keySeparator": ".",
                    "load": "all",
                    "missingInterpolationHandler": false,
                    "missingKeyHandler": false,
                    "nonExplicitSupportedLngs": true,
                    "nonExplicitWhitelist": false,
                    "ns": Array [],
                    "nsSeparator": ":",
                    "overloadTranslationOptionHandler": [Function],
                    "parseMissingKeyHandler": false,
                    "partialBundledLanguages": false,
                    "pluralSeparator": "_",
                    "postProcess": false,
                    "postProcessPassResolved": false,
                    "preload": false,
                    "resources": Object {
                      "de": Object {},
                      "en": Object {},
                      "fr": Object {},
                      "ru": Object {},
                      "uz": Object {},
                    },
                    "returnEmptyString": true,
                    "returnNull": true,
                    "returnObjects": false,
                    "returnedObjectHandler": false,
                    "saveMissing": false,
                    "saveMissingPlurals": true,
                    "saveMissingTo": "fallback",
                    "simplifyPluralSuffix": true,
                    "supportedLngs": Array [
                      "de",
                      "en",
                      "fr",
                      "ru",
                      "uz",
                      "cimode",
                    ],
                    "updateMissing": false,
                    "whitelist": false,
                  },
                  "supportedLngs": Array [
                    "de",
                    "en",
                    "fr",
                    "ru",
                    "uz",
                    "cimode",
                  ],
                  "whitelist": Array [
                    "de",
                    "en",
                    "fr",
                    "ru",
                    "uz",
                    "cimode",
                  ],
                },
                "logger": Logger {
                  "debug": true,
                  "logger": Object {
                    "error": [Function],
                    "log": [Function],
                    "output": [Function],
                    "type": "logger",
                    "warn": [Function],
                  },
                  "options": Object {
                    "appendNamespaceToCIMode": false,
                    "appendNamespaceToMissingKey": false,
                    "contextSeparator": "_",
                    "debug": true,
                    "defaultNS": "translation",
                    "fallbackLng": Array [
                      "en",
                    ],
                    "fallbackNS": false,
                    "initImmediate": false,
                    "interpolation": Object {
                      "escapeValue": false,
                    },
                    "joinArrays": false,
                    "keySeparator": ".",
                    "load": "all",
                    "missingInterpolationHandler": false,
                    "missingKeyHandler": false,
                    "nonExplicitSupportedLngs": true,
                    "nonExplicitWhitelist": false,
                    "ns": Array [],
                    "nsSeparator": ":",
                    "overloadTranslationOptionHandler": [Function],
                    "parseMissingKeyHandler": false,
                    "partialBundledLanguages": false,
                    "pluralSeparator": "_",
                    "postProcess": false,
                    "postProcessPassResolved": false,
                    "prefix": "i18next::pluralResolver:",
                    "preload": false,
                    "resources": Object {
                      "de": Object {},
                      "en": Object {},
                      "fr": Object {},
                      "ru": Object {},
                      "uz": Object {},
                    },
                    "returnEmptyString": true,
                    "returnNull": true,
                    "returnObjects": false,
                    "returnedObjectHandler": false,
                    "saveMissing": false,
                    "saveMissingPlurals": true,
                    "saveMissingTo": "fallback",
                    "simplifyPluralSuffix": true,
                    "supportedLngs": Array [
                      "de",
                      "en",
                      "fr",
                      "ru",
                      "uz",
                      "cimode",
                    ],
                    "updateMissing": false,
                    "whitelist": false,
                  },
                  "prefix": "i18next::pluralResolver:",
                },
                "options": Object {
                  "compatibilityJSON": undefined,
                  "prepend": "_",
                  "simplifyPluralSuffix": true,
                },
                "rules": Object {
                  "ach": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "af": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "ak": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "am": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "an": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "ar": Object {
                    "numbers": Array [
                      0,
                      1,
                      2,
                      3,
                      11,
                      100,
                    ],
                    "plurals": [Function],
                  },
                  "arn": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "ast": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "ay": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "az": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "be": Object {
                    "numbers": Array [
                      1,
                      2,
                      5,
                    ],
                    "plurals": [Function],
                  },
                  "bg": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "bn": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "bo": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "br": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "bs": Object {
                    "numbers": Array [
                      1,
                      2,
                      5,
                    ],
                    "plurals": [Function],
                  },
                  "ca": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "cgg": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "cnr": Object {
                    "numbers": Array [
                      1,
                      2,
                      5,
                    ],
                    "plurals": [Function],
                  },
                  "cs": Object {
                    "numbers": Array [
                      1,
                      2,
                      5,
                    ],
                    "plurals": [Function],
                  },
                  "csb": Object {
                    "numbers": Array [
                      1,
                      2,
                      5,
                    ],
                    "plurals": [Function],
                  },
                  "cy": Object {
                    "numbers": Array [
                      1,
                      2,
                      3,
                      8,
                    ],
                    "plurals": [Function],
                  },
                  "da": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "de": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "dev": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "dz": Object {
                    "numbers": Array [
                      1,
                      2,
                      5,
                    ],
                    "plurals": [Function],
                  },
                  "el": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "en": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "eo": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "es": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "et": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "eu": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "fa": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "fi": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "fil": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "fo": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "fr": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "fur": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "fy": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "ga": Object {
                    "numbers": Array [
                      1,
                      2,
                      3,
                      7,
                      11,
                    ],
                    "plurals": [Function],
                  },
                  "gd": Object {
                    "numbers": Array [
                      1,
                      2,
                      3,
                      20,
                    ],
                    "plurals": [Function],
                  },
                  "gl": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "gu": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "gun": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "ha": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "he": Object {
                    "numbers": Array [
                      1,
                      2,
                      20,
                      21,
                    ],
                    "plurals": [Function],
                  },
                  "hi": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "hr": Object {
                    "numbers": Array [
                      1,
                      2,
                      5,
                    ],
                    "plurals": [Function],
                  },
                  "ht": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "hu": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "hy": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "ia": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "id": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "is": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "it": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "iw": Object {
                    "numbers": Array [
                      1,
                      2,
                      20,
                      21,
                    ],
                    "plurals": [Function],
                  },
                  "ja": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "jbo": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "jv": Object {
                    "numbers": Array [
                      0,
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "ka": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "kk": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "km": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "kn": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "ko": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "ku": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "kw": Object {
                    "numbers": Array [
                      1,
                      2,
                      3,
                      4,
                    ],
                    "plurals": [Function],
                  },
                  "ky": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "lb": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "ln": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "lo": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "lt": Object {
                    "numbers": Array [
                      1,
                      2,
                      10,
                    ],
                    "plurals": [Function],
                  },
                  "lv": Object {
                    "numbers": Array [
                      1,
                      2,
                      0,
                    ],
                    "plurals": [Function],
                  },
                  "mai": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "mfe": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "mg": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "mi": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "mk": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "ml": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "mn": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "mnk": Object {
                    "numbers": Array [
                      0,
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "mr": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "ms": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "mt": Object {
                    "numbers": Array [
                      1,
                      2,
                      11,
                      20,
                    ],
                    "plurals": [Function],
                  },
                  "nah": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "nap": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "nb": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "ne": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "nl": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "nn": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "no": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "nso": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "oc": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "or": Object {
                    "numbers": Array [
                      2,
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "pa": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "pap": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "pl": Object {
                    "numbers": Array [
                      1,
                      2,
                      5,
                    ],
                    "plurals": [Function],
                  },
                  "pms": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "ps": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "pt": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "pt-BR": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "pt-PT": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "rm": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "ro": Object {
                    "numbers": Array [
                      1,
                      2,
                      20,
                    ],
                    "plurals": [Function],
                  },
                  "ru": Object {
                    "numbers": Array [
                      1,
                      2,
                      5,
                    ],
                    "plurals": [Function],
                  },
                  "sah": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "sco": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "se": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "si": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "sk": Object {
                    "numbers": Array [
                      1,
                      2,
                      5,
                    ],
                    "plurals": [Function],
                  },
                  "sl": Object {
                    "numbers": Array [
                      5,
                      1,
                      2,
                      3,
                    ],
                    "plurals": [Function],
                  },
                  "so": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "son": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "sq": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "sr": Object {
                    "numbers": Array [
                      1,
                      2,
                      5,
                    ],
                    "plurals": [Function],
                  },
                  "su": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "sv": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "sw": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "ta": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "te": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "tg": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "th": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "ti": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "tk": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "tr": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "tt": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "ug": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "uk": Object {
                    "numbers": Array [
                      1,
                      2,
                      5,
                    ],
                    "plurals": [Function],
                  },
                  "ur": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "uz": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "vi": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "wa": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "wo": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "yo": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "zh": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                },
              },
              "resourceStore": Object {
                "de": Object {},
                "en": Object {},
                "fr": Object {},
                "ru": Object {},
                "uz": Object {},
              },
              "utils": Object {
                "hasLoadedNamespace": [Function],
              },
            },
            "store": Object {
              "de": Object {},
              "en": Object {},
              "fr": Object {},
              "ru": Object {},
              "uz": Object {},
            },
            "translator": Translator {
              "backendConnector": Connector {
                "backend": null,
                "languageUtils": LanguageUtil {
                  "logger": Logger {
                    "debug": true,
                    "logger": Object {
                      "error": [Function],
                      "log": [Function],
                      "output": [Function],
                      "type": "logger",
                      "warn": [Function],
                    },
                    "options": Object {
                      "appendNamespaceToCIMode": false,
                      "appendNamespaceToMissingKey": false,
                      "contextSeparator": "_",
                      "debug": true,
                      "defaultNS": "translation",
                      "fallbackLng": Array [
                        "en",
                      ],
                      "fallbackNS": false,
                      "initImmediate": false,
                      "interpolation": Object {
                        "escapeValue": false,
                      },
                      "joinArrays": false,
                      "keySeparator": ".",
                      "load": "all",
                      "missingInterpolationHandler": false,
                      "missingKeyHandler": false,
                      "nonExplicitSupportedLngs": true,
                      "nonExplicitWhitelist": false,
                      "ns": Array [],
                      "nsSeparator": ":",
                      "overloadTranslationOptionHandler": [Function],
                      "parseMissingKeyHandler": false,
                      "partialBundledLanguages": false,
                      "pluralSeparator": "_",
                      "postProcess": false,
                      "postProcessPassResolved": false,
                      "prefix": "i18next::languageUtils:",
                      "preload": false,
                      "resources": Object {
                        "de": Object {},
                        "en": Object {},
                        "fr": Object {},
                        "ru": Object {},
                        "uz": Object {},
                      },
                      "returnEmptyString": true,
                      "returnNull": true,
                      "returnObjects": false,
                      "returnedObjectHandler": false,
                      "saveMissing": false,
                      "saveMissingPlurals": true,
                      "saveMissingTo": "fallback",
                      "simplifyPluralSuffix": true,
                      "supportedLngs": Array [
                        "de",
                        "en",
                        "fr",
                        "ru",
                        "uz",
                        "cimode",
                      ],
                      "updateMissing": false,
                      "whitelist": false,
                    },
                    "prefix": "i18next::languageUtils:",
                  },
                  "options": Object {
                    "appendNamespaceToCIMode": false,
                    "appendNamespaceToMissingKey": false,
                    "contextSeparator": "_",
                    "debug": true,
                    "defaultNS": "translation",
                    "fallbackLng": Array [
                      "en",
                    ],
                    "fallbackNS": false,
                    "initImmediate": false,
                    "interpolation": Object {
                      "escapeValue": false,
                    },
                    "joinArrays": false,
                    "keySeparator": ".",
                    "load": "all",
                    "missingInterpolationHandler": false,
                    "missingKeyHandler": false,
                    "nonExplicitSupportedLngs": true,
                    "nonExplicitWhitelist": false,
                    "ns": Array [],
                    "nsSeparator": ":",
                    "overloadTranslationOptionHandler": [Function],
                    "parseMissingKeyHandler": false,
                    "partialBundledLanguages": false,
                    "pluralSeparator": "_",
                    "postProcess": false,
                    "postProcessPassResolved": false,
                    "preload": false,
                    "resources": Object {
                      "de": Object {},
                      "en": Object {},
                      "fr": Object {},
                      "ru": Object {},
                      "uz": Object {},
                    },
                    "returnEmptyString": true,
                    "returnNull": true,
                    "returnObjects": false,
                    "returnedObjectHandler": false,
                    "saveMissing": false,
                    "saveMissingPlurals": true,
                    "saveMissingTo": "fallback",
                    "simplifyPluralSuffix": true,
                    "supportedLngs": Array [
                      "de",
                      "en",
                      "fr",
                      "ru",
                      "uz",
                      "cimode",
                    ],
                    "updateMissing": false,
                    "whitelist": false,
                  },
                  "supportedLngs": Array [
                    "de",
                    "en",
                    "fr",
                    "ru",
                    "uz",
                    "cimode",
                  ],
                  "whitelist": Array [
                    "de",
                    "en",
                    "fr",
                    "ru",
                    "uz",
                    "cimode",
                  ],
                },
                "logger": Logger {
                  "debug": true,
                  "logger": Object {
                    "error": [Function],
                    "log": [Function],
                    "output": [Function],
                    "type": "logger",
                    "warn": [Function],
                  },
                  "options": Object {
                    "appendNamespaceToCIMode": false,
                    "appendNamespaceToMissingKey": false,
                    "contextSeparator": "_",
                    "debug": true,
                    "defaultNS": "translation",
                    "fallbackLng": Array [
                      "en",
                    ],
                    "fallbackNS": false,
                    "initImmediate": false,
                    "interpolation": Object {
                      "escapeValue": false,
                    },
                    "joinArrays": false,
                    "keySeparator": ".",
                    "load": "all",
                    "missingInterpolationHandler": false,
                    "missingKeyHandler": false,
                    "nonExplicitSupportedLngs": true,
                    "nonExplicitWhitelist": false,
                    "ns": Array [],
                    "nsSeparator": ":",
                    "overloadTranslationOptionHandler": [Function],
                    "parseMissingKeyHandler": false,
                    "partialBundledLanguages": false,
                    "pluralSeparator": "_",
                    "postProcess": false,
                    "postProcessPassResolved": false,
                    "prefix": "i18next::backendConnector:",
                    "preload": false,
                    "resources": Object {
                      "de": Object {},
                      "en": Object {},
                      "fr": Object {},
                      "ru": Object {},
                      "uz": Object {},
                    },
                    "returnEmptyString": true,
                    "returnNull": true,
                    "returnObjects": false,
                    "returnedObjectHandler": false,
                    "saveMissing": false,
                    "saveMissingPlurals": true,
                    "saveMissingTo": "fallback",
                    "simplifyPluralSuffix": true,
                    "supportedLngs": Array [
                      "de",
                      "en",
                      "fr",
                      "ru",
                      "uz",
                      "cimode",
                    ],
                    "updateMissing": false,
                    "whitelist": false,
                  },
                  "prefix": "i18next::backendConnector:",
                },
                "observers": Object {
                  "*": Array [
                    [Function],
                  ],
                },
                "options": Object {
                  "appendNamespaceToCIMode": false,
                  "appendNamespaceToMissingKey": false,
                  "contextSeparator": "_",
                  "debug": true,
                  "defaultNS": "translation",
                  "fallbackLng": Array [
                    "en",
                  ],
                  "fallbackNS": false,
                  "initImmediate": false,
                  "interpolation": Object {
                    "escapeValue": false,
                  },
                  "joinArrays": false,
                  "keySeparator": ".",
                  "load": "all",
                  "missingInterpolationHandler": false,
                  "missingKeyHandler": false,
                  "nonExplicitSupportedLngs": true,
                  "nonExplicitWhitelist": false,
                  "ns": Array [],
                  "nsSeparator": ":",
                  "overloadTranslationOptionHandler": [Function],
                  "parseMissingKeyHandler": false,
                  "partialBundledLanguages": false,
                  "pluralSeparator": "_",
                  "postProcess": false,
                  "postProcessPassResolved": false,
                  "preload": false,
                  "resources": Object {
                    "de": Object {},
                    "en": Object {},
                    "fr": Object {},
                    "ru": Object {},
                    "uz": Object {},
                  },
                  "returnEmptyString": true,
                  "returnNull": true,
                  "returnObjects": false,
                  "returnedObjectHandler": false,
                  "saveMissing": false,
                  "saveMissingPlurals": true,
                  "saveMissingTo": "fallback",
                  "simplifyPluralSuffix": true,
                  "supportedLngs": Array [
                    "de",
                    "en",
                    "fr",
                    "ru",
                    "uz",
                    "cimode",
                  ],
                  "updateMissing": false,
                  "whitelist": false,
                },
                "queue": Array [],
                "services": Object {
                  "backendConnector": [Circular],
                  "interpolator": Interpolator {
                    "alwaysFormat": false,
                    "escape": [Function],
                    "escapeValue": false,
                    "format": [Function],
                    "formatSeparator": ",",
                    "logger": Logger {
                      "debug": true,
                      "logger": Object {
                        "error": [Function],
                        "log": [Function],
                        "output": [Function],
                        "type": "logger",
                        "warn": [Function],
                      },
                      "options": Object {
                        "appendNamespaceToCIMode": false,
                        "appendNamespaceToMissingKey": false,
                        "contextSeparator": "_",
                        "debug": true,
                        "defaultNS": "translation",
                        "fallbackLng": Array [
                          "en",
                        ],
                        "fallbackNS": false,
                        "initImmediate": false,
                        "interpolation": Object {
                          "escapeValue": false,
                        },
                        "joinArrays": false,
                        "keySeparator": ".",
                        "load": "all",
                        "missingInterpolationHandler": false,
                        "missingKeyHandler": false,
                        "nonExplicitSupportedLngs": true,
                        "nonExplicitWhitelist": false,
                        "ns": Array [],
                        "nsSeparator": ":",
                        "overloadTranslationOptionHandler": [Function],
                        "parseMissingKeyHandler": false,
                        "partialBundledLanguages": false,
                        "pluralSeparator": "_",
                        "postProcess": false,
                        "postProcessPassResolved": false,
                        "prefix": "i18next::interpolator:",
                        "preload": false,
                        "resources": Object {
                          "de": Object {},
                          "en": Object {},
                          "fr": Object {},
                          "ru": Object {},
                          "uz": Object {},
                        },
                        "returnEmptyString": true,
                        "returnNull": true,
                        "returnObjects": false,
                        "returnedObjectHandler": false,
                        "saveMissing": false,
                        "saveMissingPlurals": true,
                        "saveMissingTo": "fallback",
                        "simplifyPluralSuffix": true,
                        "supportedLngs": Array [
                          "de",
                          "en",
                          "fr",
                          "ru",
                          "uz",
                          "cimode",
                        ],
                        "updateMissing": false,
                        "whitelist": false,
                      },
                      "prefix": "i18next::interpolator:",
                    },
                    "maxReplaces": 1000,
                    "nestingOptionsSeparator": ",",
                    "nestingPrefix": "\\\\$t\\\\(",
                    "nestingRegexp": /\\\\\\$t\\\\\\(\\(\\.\\+\\?\\)\\\\\\)/g,
                    "nestingSuffix": "\\\\)",
                    "options": Object {
                      "appendNamespaceToCIMode": false,
                      "appendNamespaceToMissingKey": false,
                      "contextSeparator": "_",
                      "debug": true,
                      "defaultNS": "translation",
                      "fallbackLng": Array [
                        "en",
                      ],
                      "fallbackNS": false,
                      "initImmediate": false,
                      "interpolation": Object {
                        "escapeValue": false,
                      },
                      "joinArrays": false,
                      "keySeparator": ".",
                      "load": "all",
                      "missingInterpolationHandler": false,
                      "missingKeyHandler": false,
                      "nonExplicitSupportedLngs": true,
                      "nonExplicitWhitelist": false,
                      "ns": Array [],
                      "nsSeparator": ":",
                      "overloadTranslationOptionHandler": [Function],
                      "parseMissingKeyHandler": false,
                      "partialBundledLanguages": false,
                      "pluralSeparator": "_",
                      "postProcess": false,
                      "postProcessPassResolved": false,
                      "preload": false,
                      "resources": Object {
                        "de": Object {},
                        "en": Object {},
                        "fr": Object {},
                        "ru": Object {},
                        "uz": Object {},
                      },
                      "returnEmptyString": true,
                      "returnNull": true,
                      "returnObjects": false,
                      "returnedObjectHandler": false,
                      "saveMissing": false,
                      "saveMissingPlurals": true,
                      "saveMissingTo": "fallback",
                      "simplifyPluralSuffix": true,
                      "supportedLngs": Array [
                        "de",
                        "en",
                        "fr",
                        "ru",
                        "uz",
                        "cimode",
                      ],
                      "updateMissing": false,
                      "whitelist": false,
                    },
                    "prefix": "{{",
                    "regexp": /\\{\\{\\(\\.\\+\\?\\)\\}\\}/g,
                    "regexpUnescape": /\\{\\{-\\(\\.\\+\\?\\)\\}\\}/g,
                    "suffix": "}}",
                    "unescapePrefix": "-",
                    "unescapeSuffix": "",
                    "useRawValueToEscape": false,
                  },
                  "languageDetector": Browser {
                    "detectors": Object {
                      "cookie": Object {
                        "cacheUserLanguage": [Function],
                        "lookup": [Function],
                        "name": "cookie",
                      },
                      "htmlTag": Object {
                        "lookup": [Function],
                        "name": "htmlTag",
                      },
                      "localStorage": Object {
                        "cacheUserLanguage": [Function],
                        "lookup": [Function],
                        "name": "localStorage",
                      },
                      "navigator": Object {
                        "lookup": [Function],
                        "name": "navigator",
                      },
                      "path": Object {
                        "lookup": [Function],
                        "name": "path",
                      },
                      "querystring": Object {
                        "lookup": [Function],
                        "name": "querystring",
                      },
                      "sessionStorage": Object {
                        "cacheUserLanguage": [Function],
                        "lookup": [Function],
                        "name": "sessionStorage",
                      },
                      "subdomain": Object {
                        "lookup": [Function],
                        "name": "subdomain",
                      },
                    },
                    "i18nOptions": Object {
                      "appendNamespaceToCIMode": false,
                      "appendNamespaceToMissingKey": false,
                      "contextSeparator": "_",
                      "debug": true,
                      "defaultNS": "translation",
                      "fallbackLng": Array [
                        "en",
                      ],
                      "fallbackNS": false,
                      "initImmediate": false,
                      "interpolation": Object {
                        "escapeValue": false,
                      },
                      "joinArrays": false,
                      "keySeparator": ".",
                      "load": "all",
                      "missingInterpolationHandler": false,
                      "missingKeyHandler": false,
                      "nonExplicitSupportedLngs": true,
                      "nonExplicitWhitelist": false,
                      "ns": Array [],
                      "nsSeparator": ":",
                      "overloadTranslationOptionHandler": [Function],
                      "parseMissingKeyHandler": false,
                      "partialBundledLanguages": false,
                      "pluralSeparator": "_",
                      "postProcess": false,
                      "postProcessPassResolved": false,
                      "preload": false,
                      "resources": Object {
                        "de": Object {},
                        "en": Object {},
                        "fr": Object {},
                        "ru": Object {},
                        "uz": Object {},
                      },
                      "returnEmptyString": true,
                      "returnNull": true,
                      "returnObjects": false,
                      "returnedObjectHandler": false,
                      "saveMissing": false,
                      "saveMissingPlurals": true,
                      "saveMissingTo": "fallback",
                      "simplifyPluralSuffix": true,
                      "supportedLngs": Array [
                        "de",
                        "en",
                        "fr",
                        "ru",
                        "uz",
                        "cimode",
                      ],
                      "updateMissing": false,
                      "whitelist": false,
                    },
                    "options": Object {
                      "caches": Array [
                        "localStorage",
                      ],
                      "excludeCacheFor": Array [
                        "cimode",
                      ],
                      "lookupCookie": "i18next",
                      "lookupLocalStorage": "i18nextLng",
                      "lookupQuerystring": "lng",
                      "lookupSessionStorage": "i18nextLng",
                      "order": Array [
                        "querystring",
                        "cookie",
                        "localStorage",
                        "sessionStorage",
                        "navigator",
                        "htmlTag",
                      ],
                    },
                    "services": [Circular],
                    "type": "languageDetector",
                  },
                  "languageUtils": LanguageUtil {
                    "logger": Logger {
                      "debug": true,
                      "logger": Object {
                        "error": [Function],
                        "log": [Function],
                        "output": [Function],
                        "type": "logger",
                        "warn": [Function],
                      },
                      "options": Object {
                        "appendNamespaceToCIMode": false,
                        "appendNamespaceToMissingKey": false,
                        "contextSeparator": "_",
                        "debug": true,
                        "defaultNS": "translation",
                        "fallbackLng": Array [
                          "en",
                        ],
                        "fallbackNS": false,
                        "initImmediate": false,
                        "interpolation": Object {
                          "escapeValue": false,
                        },
                        "joinArrays": false,
                        "keySeparator": ".",
                        "load": "all",
                        "missingInterpolationHandler": false,
                        "missingKeyHandler": false,
                        "nonExplicitSupportedLngs": true,
                        "nonExplicitWhitelist": false,
                        "ns": Array [],
                        "nsSeparator": ":",
                        "overloadTranslationOptionHandler": [Function],
                        "parseMissingKeyHandler": false,
                        "partialBundledLanguages": false,
                        "pluralSeparator": "_",
                        "postProcess": false,
                        "postProcessPassResolved": false,
                        "prefix": "i18next::languageUtils:",
                        "preload": false,
                        "resources": Object {
                          "de": Object {},
                          "en": Object {},
                          "fr": Object {},
                          "ru": Object {},
                          "uz": Object {},
                        },
                        "returnEmptyString": true,
                        "returnNull": true,
                        "returnObjects": false,
                        "returnedObjectHandler": false,
                        "saveMissing": false,
                        "saveMissingPlurals": true,
                        "saveMissingTo": "fallback",
                        "simplifyPluralSuffix": true,
                        "supportedLngs": Array [
                          "de",
                          "en",
                          "fr",
                          "ru",
                          "uz",
                          "cimode",
                        ],
                        "updateMissing": false,
                        "whitelist": false,
                      },
                      "prefix": "i18next::languageUtils:",
                    },
                    "options": Object {
                      "appendNamespaceToCIMode": false,
                      "appendNamespaceToMissingKey": false,
                      "contextSeparator": "_",
                      "debug": true,
                      "defaultNS": "translation",
                      "fallbackLng": Array [
                        "en",
                      ],
                      "fallbackNS": false,
                      "initImmediate": false,
                      "interpolation": Object {
                        "escapeValue": false,
                      },
                      "joinArrays": false,
                      "keySeparator": ".",
                      "load": "all",
                      "missingInterpolationHandler": false,
                      "missingKeyHandler": false,
                      "nonExplicitSupportedLngs": true,
                      "nonExplicitWhitelist": false,
                      "ns": Array [],
                      "nsSeparator": ":",
                      "overloadTranslationOptionHandler": [Function],
                      "parseMissingKeyHandler": false,
                      "partialBundledLanguages": false,
                      "pluralSeparator": "_",
                      "postProcess": false,
                      "postProcessPassResolved": false,
                      "preload": false,
                      "resources": Object {
                        "de": Object {},
                        "en": Object {},
                        "fr": Object {},
                        "ru": Object {},
                        "uz": Object {},
                      },
                      "returnEmptyString": true,
                      "returnNull": true,
                      "returnObjects": false,
                      "returnedObjectHandler": false,
                      "saveMissing": false,
                      "saveMissingPlurals": true,
                      "saveMissingTo": "fallback",
                      "simplifyPluralSuffix": true,
                      "supportedLngs": Array [
                        "de",
                        "en",
                        "fr",
                        "ru",
                        "uz",
                        "cimode",
                      ],
                      "updateMissing": false,
                      "whitelist": false,
                    },
                    "supportedLngs": Array [
                      "de",
                      "en",
                      "fr",
                      "ru",
                      "uz",
                      "cimode",
                    ],
                    "whitelist": Array [
                      "de",
                      "en",
                      "fr",
                      "ru",
                      "uz",
                      "cimode",
                    ],
                  },
                  "logger": Logger {
                    "debug": true,
                    "logger": Object {
                      "error": [Function],
                      "log": [Function],
                      "output": [Function],
                      "type": "logger",
                      "warn": [Function],
                    },
                    "options": Object {
                      "appendNamespaceToCIMode": false,
                      "appendNamespaceToMissingKey": false,
                      "contextSeparator": "_",
                      "debug": true,
                      "defaultNS": "translation",
                      "fallbackLng": Array [
                        "en",
                      ],
                      "fallbackNS": false,
                      "initImmediate": false,
                      "interpolation": Object {
                        "escapeValue": false,
                      },
                      "joinArrays": false,
                      "keySeparator": ".",
                      "load": "all",
                      "missingInterpolationHandler": false,
                      "missingKeyHandler": false,
                      "nonExplicitSupportedLngs": true,
                      "nonExplicitWhitelist": false,
                      "ns": Array [],
                      "nsSeparator": ":",
                      "overloadTranslationOptionHandler": [Function],
                      "parseMissingKeyHandler": false,
                      "partialBundledLanguages": false,
                      "pluralSeparator": "_",
                      "postProcess": false,
                      "postProcessPassResolved": false,
                      "preload": false,
                      "resources": Object {
                        "de": Object {},
                        "en": Object {},
                        "fr": Object {},
                        "ru": Object {},
                        "uz": Object {},
                      },
                      "returnEmptyString": true,
                      "returnNull": true,
                      "returnObjects": false,
                      "returnedObjectHandler": false,
                      "saveMissing": false,
                      "saveMissingPlurals": true,
                      "saveMissingTo": "fallback",
                      "simplifyPluralSuffix": true,
                      "supportedLngs": Array [
                        "de",
                        "en",
                        "fr",
                        "ru",
                        "uz",
                        "cimode",
                      ],
                      "updateMissing": false,
                      "whitelist": false,
                    },
                    "prefix": "i18next:",
                  },
                  "pluralResolver": PluralResolver {
                    "languageUtils": LanguageUtil {
                      "logger": Logger {
                        "debug": true,
                        "logger": Object {
                          "error": [Function],
                          "log": [Function],
                          "output": [Function],
                          "type": "logger",
                          "warn": [Function],
                        },
                        "options": Object {
                          "appendNamespaceToCIMode": false,
                          "appendNamespaceToMissingKey": false,
                          "contextSeparator": "_",
                          "debug": true,
                          "defaultNS": "translation",
                          "fallbackLng": Array [
                            "en",
                          ],
                          "fallbackNS": false,
                          "initImmediate": false,
                          "interpolation": Object {
                            "escapeValue": false,
                          },
                          "joinArrays": false,
                          "keySeparator": ".",
                          "load": "all",
                          "missingInterpolationHandler": false,
                          "missingKeyHandler": false,
                          "nonExplicitSupportedLngs": true,
                          "nonExplicitWhitelist": false,
                          "ns": Array [],
                          "nsSeparator": ":",
                          "overloadTranslationOptionHandler": [Function],
                          "parseMissingKeyHandler": false,
                          "partialBundledLanguages": false,
                          "pluralSeparator": "_",
                          "postProcess": false,
                          "postProcessPassResolved": false,
                          "prefix": "i18next::languageUtils:",
                          "preload": false,
                          "resources": Object {
                            "de": Object {},
                            "en": Object {},
                            "fr": Object {},
                            "ru": Object {},
                            "uz": Object {},
                          },
                          "returnEmptyString": true,
                          "returnNull": true,
                          "returnObjects": false,
                          "returnedObjectHandler": false,
                          "saveMissing": false,
                          "saveMissingPlurals": true,
                          "saveMissingTo": "fallback",
                          "simplifyPluralSuffix": true,
                          "supportedLngs": Array [
                            "de",
                            "en",
                            "fr",
                            "ru",
                            "uz",
                            "cimode",
                          ],
                          "updateMissing": false,
                          "whitelist": false,
                        },
                        "prefix": "i18next::languageUtils:",
                      },
                      "options": Object {
                        "appendNamespaceToCIMode": false,
                        "appendNamespaceToMissingKey": false,
                        "contextSeparator": "_",
                        "debug": true,
                        "defaultNS": "translation",
                        "fallbackLng": Array [
                          "en",
                        ],
                        "fallbackNS": false,
                        "initImmediate": false,
                        "interpolation": Object {
                          "escapeValue": false,
                        },
                        "joinArrays": false,
                        "keySeparator": ".",
                        "load": "all",
                        "missingInterpolationHandler": false,
                        "missingKeyHandler": false,
                        "nonExplicitSupportedLngs": true,
                        "nonExplicitWhitelist": false,
                        "ns": Array [],
                        "nsSeparator": ":",
                        "overloadTranslationOptionHandler": [Function],
                        "parseMissingKeyHandler": false,
                        "partialBundledLanguages": false,
                        "pluralSeparator": "_",
                        "postProcess": false,
                        "postProcessPassResolved": false,
                        "preload": false,
                        "resources": Object {
                          "de": Object {},
                          "en": Object {},
                          "fr": Object {},
                          "ru": Object {},
                          "uz": Object {},
                        },
                        "returnEmptyString": true,
                        "returnNull": true,
                        "returnObjects": false,
                        "returnedObjectHandler": false,
                        "saveMissing": false,
                        "saveMissingPlurals": true,
                        "saveMissingTo": "fallback",
                        "simplifyPluralSuffix": true,
                        "supportedLngs": Array [
                          "de",
                          "en",
                          "fr",
                          "ru",
                          "uz",
                          "cimode",
                        ],
                        "updateMissing": false,
                        "whitelist": false,
                      },
                      "supportedLngs": Array [
                        "de",
                        "en",
                        "fr",
                        "ru",
                        "uz",
                        "cimode",
                      ],
                      "whitelist": Array [
                        "de",
                        "en",
                        "fr",
                        "ru",
                        "uz",
                        "cimode",
                      ],
                    },
                    "logger": Logger {
                      "debug": true,
                      "logger": Object {
                        "error": [Function],
                        "log": [Function],
                        "output": [Function],
                        "type": "logger",
                        "warn": [Function],
                      },
                      "options": Object {
                        "appendNamespaceToCIMode": false,
                        "appendNamespaceToMissingKey": false,
                        "contextSeparator": "_",
                        "debug": true,
                        "defaultNS": "translation",
                        "fallbackLng": Array [
                          "en",
                        ],
                        "fallbackNS": false,
                        "initImmediate": false,
                        "interpolation": Object {
                          "escapeValue": false,
                        },
                        "joinArrays": false,
                        "keySeparator": ".",
                        "load": "all",
                        "missingInterpolationHandler": false,
                        "missingKeyHandler": false,
                        "nonExplicitSupportedLngs": true,
                        "nonExplicitWhitelist": false,
                        "ns": Array [],
                        "nsSeparator": ":",
                        "overloadTranslationOptionHandler": [Function],
                        "parseMissingKeyHandler": false,
                        "partialBundledLanguages": false,
                        "pluralSeparator": "_",
                        "postProcess": false,
                        "postProcessPassResolved": false,
                        "prefix": "i18next::pluralResolver:",
                        "preload": false,
                        "resources": Object {
                          "de": Object {},
                          "en": Object {},
                          "fr": Object {},
                          "ru": Object {},
                          "uz": Object {},
                        },
                        "returnEmptyString": true,
                        "returnNull": true,
                        "returnObjects": false,
                        "returnedObjectHandler": false,
                        "saveMissing": false,
                        "saveMissingPlurals": true,
                        "saveMissingTo": "fallback",
                        "simplifyPluralSuffix": true,
                        "supportedLngs": Array [
                          "de",
                          "en",
                          "fr",
                          "ru",
                          "uz",
                          "cimode",
                        ],
                        "updateMissing": false,
                        "whitelist": false,
                      },
                      "prefix": "i18next::pluralResolver:",
                    },
                    "options": Object {
                      "compatibilityJSON": undefined,
                      "prepend": "_",
                      "simplifyPluralSuffix": true,
                    },
                    "rules": Object {
                      "ach": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "af": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "ak": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "am": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "an": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "ar": Object {
                        "numbers": Array [
                          0,
                          1,
                          2,
                          3,
                          11,
                          100,
                        ],
                        "plurals": [Function],
                      },
                      "arn": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "ast": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "ay": Object {
                        "numbers": Array [
                          1,
                        ],
                        "plurals": [Function],
                      },
                      "az": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "be": Object {
                        "numbers": Array [
                          1,
                          2,
                          5,
                        ],
                        "plurals": [Function],
                      },
                      "bg": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "bn": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "bo": Object {
                        "numbers": Array [
                          1,
                        ],
                        "plurals": [Function],
                      },
                      "br": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "bs": Object {
                        "numbers": Array [
                          1,
                          2,
                          5,
                        ],
                        "plurals": [Function],
                      },
                      "ca": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "cgg": Object {
                        "numbers": Array [
                          1,
                        ],
                        "plurals": [Function],
                      },
                      "cnr": Object {
                        "numbers": Array [
                          1,
                          2,
                          5,
                        ],
                        "plurals": [Function],
                      },
                      "cs": Object {
                        "numbers": Array [
                          1,
                          2,
                          5,
                        ],
                        "plurals": [Function],
                      },
                      "csb": Object {
                        "numbers": Array [
                          1,
                          2,
                          5,
                        ],
                        "plurals": [Function],
                      },
                      "cy": Object {
                        "numbers": Array [
                          1,
                          2,
                          3,
                          8,
                        ],
                        "plurals": [Function],
                      },
                      "da": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "de": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "dev": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "dz": Object {
                        "numbers": Array [
                          1,
                          2,
                          5,
                        ],
                        "plurals": [Function],
                      },
                      "el": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "en": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "eo": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "es": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "et": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "eu": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "fa": Object {
                        "numbers": Array [
                          1,
                        ],
                        "plurals": [Function],
                      },
                      "fi": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "fil": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "fo": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "fr": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "fur": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "fy": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "ga": Object {
                        "numbers": Array [
                          1,
                          2,
                          3,
                          7,
                          11,
                        ],
                        "plurals": [Function],
                      },
                      "gd": Object {
                        "numbers": Array [
                          1,
                          2,
                          3,
                          20,
                        ],
                        "plurals": [Function],
                      },
                      "gl": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "gu": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "gun": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "ha": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "he": Object {
                        "numbers": Array [
                          1,
                          2,
                          20,
                          21,
                        ],
                        "plurals": [Function],
                      },
                      "hi": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "hr": Object {
                        "numbers": Array [
                          1,
                          2,
                          5,
                        ],
                        "plurals": [Function],
                      },
                      "ht": Object {
                        "numbers": Array [
                          1,
                        ],
                        "plurals": [Function],
                      },
                      "hu": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "hy": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "ia": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "id": Object {
                        "numbers": Array [
                          1,
                        ],
                        "plurals": [Function],
                      },
                      "is": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "it": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "iw": Object {
                        "numbers": Array [
                          1,
                          2,
                          20,
                          21,
                        ],
                        "plurals": [Function],
                      },
                      "ja": Object {
                        "numbers": Array [
                          1,
                        ],
                        "plurals": [Function],
                      },
                      "jbo": Object {
                        "numbers": Array [
                          1,
                        ],
                        "plurals": [Function],
                      },
                      "jv": Object {
                        "numbers": Array [
                          0,
                          1,
                        ],
                        "plurals": [Function],
                      },
                      "ka": Object {
                        "numbers": Array [
                          1,
                        ],
                        "plurals": [Function],
                      },
                      "kk": Object {
                        "numbers": Array [
                          1,
                        ],
                        "plurals": [Function],
                      },
                      "km": Object {
                        "numbers": Array [
                          1,
                        ],
                        "plurals": [Function],
                      },
                      "kn": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "ko": Object {
                        "numbers": Array [
                          1,
                        ],
                        "plurals": [Function],
                      },
                      "ku": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "kw": Object {
                        "numbers": Array [
                          1,
                          2,
                          3,
                          4,
                        ],
                        "plurals": [Function],
                      },
                      "ky": Object {
                        "numbers": Array [
                          1,
                        ],
                        "plurals": [Function],
                      },
                      "lb": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "ln": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "lo": Object {
                        "numbers": Array [
                          1,
                        ],
                        "plurals": [Function],
                      },
                      "lt": Object {
                        "numbers": Array [
                          1,
                          2,
                          10,
                        ],
                        "plurals": [Function],
                      },
                      "lv": Object {
                        "numbers": Array [
                          1,
                          2,
                          0,
                        ],
                        "plurals": [Function],
                      },
                      "mai": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "mfe": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "mg": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "mi": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "mk": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "ml": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "mn": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "mnk": Object {
                        "numbers": Array [
                          0,
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "mr": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "ms": Object {
                        "numbers": Array [
                          1,
                        ],
                        "plurals": [Function],
                      },
                      "mt": Object {
                        "numbers": Array [
                          1,
                          2,
                          11,
                          20,
                        ],
                        "plurals": [Function],
                      },
                      "nah": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "nap": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "nb": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "ne": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "nl": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "nn": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "no": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "nso": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "oc": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "or": Object {
                        "numbers": Array [
                          2,
                          1,
                        ],
                        "plurals": [Function],
                      },
                      "pa": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "pap": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "pl": Object {
                        "numbers": Array [
                          1,
                          2,
                          5,
                        ],
                        "plurals": [Function],
                      },
                      "pms": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "ps": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "pt": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "pt-BR": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "pt-PT": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "rm": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "ro": Object {
                        "numbers": Array [
                          1,
                          2,
                          20,
                        ],
                        "plurals": [Function],
                      },
                      "ru": Object {
                        "numbers": Array [
                          1,
                          2,
                          5,
                        ],
                        "plurals": [Function],
                      },
                      "sah": Object {
                        "numbers": Array [
                          1,
                        ],
                        "plurals": [Function],
                      },
                      "sco": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "se": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "si": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "sk": Object {
                        "numbers": Array [
                          1,
                          2,
                          5,
                        ],
                        "plurals": [Function],
                      },
                      "sl": Object {
                        "numbers": Array [
                          5,
                          1,
                          2,
                          3,
                        ],
                        "plurals": [Function],
                      },
                      "so": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "son": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "sq": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "sr": Object {
                        "numbers": Array [
                          1,
                          2,
                          5,
                        ],
                        "plurals": [Function],
                      },
                      "su": Object {
                        "numbers": Array [
                          1,
                        ],
                        "plurals": [Function],
                      },
                      "sv": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "sw": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "ta": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "te": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "tg": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "th": Object {
                        "numbers": Array [
                          1,
                        ],
                        "plurals": [Function],
                      },
                      "ti": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "tk": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "tr": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "tt": Object {
                        "numbers": Array [
                          1,
                        ],
                        "plurals": [Function],
                      },
                      "ug": Object {
                        "numbers": Array [
                          1,
                        ],
                        "plurals": [Function],
                      },
                      "uk": Object {
                        "numbers": Array [
                          1,
                          2,
                          5,
                        ],
                        "plurals": [Function],
                      },
                      "ur": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "uz": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "vi": Object {
                        "numbers": Array [
                          1,
                        ],
                        "plurals": [Function],
                      },
                      "wa": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "wo": Object {
                        "numbers": Array [
                          1,
                        ],
                        "plurals": [Function],
                      },
                      "yo": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "zh": Object {
                        "numbers": Array [
                          1,
                        ],
                        "plurals": [Function],
                      },
                    },
                  },
                  "resourceStore": Object {
                    "de": Object {},
                    "en": Object {},
                    "fr": Object {},
                    "ru": Object {},
                    "uz": Object {},
                  },
                  "utils": Object {
                    "hasLoadedNamespace": [Function],
                  },
                },
                "state": Object {},
                "store": Object {
                  "de": Object {},
                  "en": Object {},
                  "fr": Object {},
                  "ru": Object {},
                  "uz": Object {},
                },
              },
              "interpolator": Interpolator {
                "alwaysFormat": false,
                "escape": [Function],
                "escapeValue": false,
                "format": [Function],
                "formatSeparator": ",",
                "logger": Logger {
                  "debug": true,
                  "logger": Object {
                    "error": [Function],
                    "log": [Function],
                    "output": [Function],
                    "type": "logger",
                    "warn": [Function],
                  },
                  "options": Object {
                    "appendNamespaceToCIMode": false,
                    "appendNamespaceToMissingKey": false,
                    "contextSeparator": "_",
                    "debug": true,
                    "defaultNS": "translation",
                    "fallbackLng": Array [
                      "en",
                    ],
                    "fallbackNS": false,
                    "initImmediate": false,
                    "interpolation": Object {
                      "escapeValue": false,
                    },
                    "joinArrays": false,
                    "keySeparator": ".",
                    "load": "all",
                    "missingInterpolationHandler": false,
                    "missingKeyHandler": false,
                    "nonExplicitSupportedLngs": true,
                    "nonExplicitWhitelist": false,
                    "ns": Array [],
                    "nsSeparator": ":",
                    "overloadTranslationOptionHandler": [Function],
                    "parseMissingKeyHandler": false,
                    "partialBundledLanguages": false,
                    "pluralSeparator": "_",
                    "postProcess": false,
                    "postProcessPassResolved": false,
                    "prefix": "i18next::interpolator:",
                    "preload": false,
                    "resources": Object {
                      "de": Object {},
                      "en": Object {},
                      "fr": Object {},
                      "ru": Object {},
                      "uz": Object {},
                    },
                    "returnEmptyString": true,
                    "returnNull": true,
                    "returnObjects": false,
                    "returnedObjectHandler": false,
                    "saveMissing": false,
                    "saveMissingPlurals": true,
                    "saveMissingTo": "fallback",
                    "simplifyPluralSuffix": true,
                    "supportedLngs": Array [
                      "de",
                      "en",
                      "fr",
                      "ru",
                      "uz",
                      "cimode",
                    ],
                    "updateMissing": false,
                    "whitelist": false,
                  },
                  "prefix": "i18next::interpolator:",
                },
                "maxReplaces": 1000,
                "nestingOptionsSeparator": ",",
                "nestingPrefix": "\\\\$t\\\\(",
                "nestingRegexp": /\\\\\\$t\\\\\\(\\(\\.\\+\\?\\)\\\\\\)/g,
                "nestingSuffix": "\\\\)",
                "options": Object {
                  "appendNamespaceToCIMode": false,
                  "appendNamespaceToMissingKey": false,
                  "contextSeparator": "_",
                  "debug": true,
                  "defaultNS": "translation",
                  "fallbackLng": Array [
                    "en",
                  ],
                  "fallbackNS": false,
                  "initImmediate": false,
                  "interpolation": Object {
                    "escapeValue": false,
                  },
                  "joinArrays": false,
                  "keySeparator": ".",
                  "load": "all",
                  "missingInterpolationHandler": false,
                  "missingKeyHandler": false,
                  "nonExplicitSupportedLngs": true,
                  "nonExplicitWhitelist": false,
                  "ns": Array [],
                  "nsSeparator": ":",
                  "overloadTranslationOptionHandler": [Function],
                  "parseMissingKeyHandler": false,
                  "partialBundledLanguages": false,
                  "pluralSeparator": "_",
                  "postProcess": false,
                  "postProcessPassResolved": false,
                  "preload": false,
                  "resources": Object {
                    "de": Object {},
                    "en": Object {},
                    "fr": Object {},
                    "ru": Object {},
                    "uz": Object {},
                  },
                  "returnEmptyString": true,
                  "returnNull": true,
                  "returnObjects": false,
                  "returnedObjectHandler": false,
                  "saveMissing": false,
                  "saveMissingPlurals": true,
                  "saveMissingTo": "fallback",
                  "simplifyPluralSuffix": true,
                  "supportedLngs": Array [
                    "de",
                    "en",
                    "fr",
                    "ru",
                    "uz",
                    "cimode",
                  ],
                  "updateMissing": false,
                  "whitelist": false,
                },
                "prefix": "{{",
                "regexp": /\\{\\{\\(\\.\\+\\?\\)\\}\\}/g,
                "regexpUnescape": /\\{\\{-\\(\\.\\+\\?\\)\\}\\}/g,
                "suffix": "}}",
                "unescapePrefix": "-",
                "unescapeSuffix": "",
                "useRawValueToEscape": false,
              },
              "language": "en",
              "languageUtils": LanguageUtil {
                "logger": Logger {
                  "debug": true,
                  "logger": Object {
                    "error": [Function],
                    "log": [Function],
                    "output": [Function],
                    "type": "logger",
                    "warn": [Function],
                  },
                  "options": Object {
                    "appendNamespaceToCIMode": false,
                    "appendNamespaceToMissingKey": false,
                    "contextSeparator": "_",
                    "debug": true,
                    "defaultNS": "translation",
                    "fallbackLng": Array [
                      "en",
                    ],
                    "fallbackNS": false,
                    "initImmediate": false,
                    "interpolation": Object {
                      "escapeValue": false,
                    },
                    "joinArrays": false,
                    "keySeparator": ".",
                    "load": "all",
                    "missingInterpolationHandler": false,
                    "missingKeyHandler": false,
                    "nonExplicitSupportedLngs": true,
                    "nonExplicitWhitelist": false,
                    "ns": Array [],
                    "nsSeparator": ":",
                    "overloadTranslationOptionHandler": [Function],
                    "parseMissingKeyHandler": false,
                    "partialBundledLanguages": false,
                    "pluralSeparator": "_",
                    "postProcess": false,
                    "postProcessPassResolved": false,
                    "prefix": "i18next::languageUtils:",
                    "preload": false,
                    "resources": Object {
                      "de": Object {},
                      "en": Object {},
                      "fr": Object {},
                      "ru": Object {},
                      "uz": Object {},
                    },
                    "returnEmptyString": true,
                    "returnNull": true,
                    "returnObjects": false,
                    "returnedObjectHandler": false,
                    "saveMissing": false,
                    "saveMissingPlurals": true,
                    "saveMissingTo": "fallback",
                    "simplifyPluralSuffix": true,
                    "supportedLngs": Array [
                      "de",
                      "en",
                      "fr",
                      "ru",
                      "uz",
                      "cimode",
                    ],
                    "updateMissing": false,
                    "whitelist": false,
                  },
                  "prefix": "i18next::languageUtils:",
                },
                "options": Object {
                  "appendNamespaceToCIMode": false,
                  "appendNamespaceToMissingKey": false,
                  "contextSeparator": "_",
                  "debug": true,
                  "defaultNS": "translation",
                  "fallbackLng": Array [
                    "en",
                  ],
                  "fallbackNS": false,
                  "initImmediate": false,
                  "interpolation": Object {
                    "escapeValue": false,
                  },
                  "joinArrays": false,
                  "keySeparator": ".",
                  "load": "all",
                  "missingInterpolationHandler": false,
                  "missingKeyHandler": false,
                  "nonExplicitSupportedLngs": true,
                  "nonExplicitWhitelist": false,
                  "ns": Array [],
                  "nsSeparator": ":",
                  "overloadTranslationOptionHandler": [Function],
                  "parseMissingKeyHandler": false,
                  "partialBundledLanguages": false,
                  "pluralSeparator": "_",
                  "postProcess": false,
                  "postProcessPassResolved": false,
                  "preload": false,
                  "resources": Object {
                    "de": Object {},
                    "en": Object {},
                    "fr": Object {},
                    "ru": Object {},
                    "uz": Object {},
                  },
                  "returnEmptyString": true,
                  "returnNull": true,
                  "returnObjects": false,
                  "returnedObjectHandler": false,
                  "saveMissing": false,
                  "saveMissingPlurals": true,
                  "saveMissingTo": "fallback",
                  "simplifyPluralSuffix": true,
                  "supportedLngs": Array [
                    "de",
                    "en",
                    "fr",
                    "ru",
                    "uz",
                    "cimode",
                  ],
                  "updateMissing": false,
                  "whitelist": false,
                },
                "supportedLngs": Array [
                  "de",
                  "en",
                  "fr",
                  "ru",
                  "uz",
                  "cimode",
                ],
                "whitelist": Array [
                  "de",
                  "en",
                  "fr",
                  "ru",
                  "uz",
                  "cimode",
                ],
              },
              "logger": Logger {
                "debug": true,
                "logger": Object {
                  "error": [Function],
                  "log": [Function],
                  "output": [Function],
                  "type": "logger",
                  "warn": [Function],
                },
                "options": Object {
                  "appendNamespaceToCIMode": false,
                  "appendNamespaceToMissingKey": false,
                  "contextSeparator": "_",
                  "debug": true,
                  "defaultNS": "translation",
                  "fallbackLng": Array [
                    "en",
                  ],
                  "fallbackNS": false,
                  "initImmediate": false,
                  "interpolation": Object {
                    "escapeValue": false,
                  },
                  "joinArrays": false,
                  "keySeparator": ".",
                  "load": "all",
                  "missingInterpolationHandler": false,
                  "missingKeyHandler": false,
                  "nonExplicitSupportedLngs": true,
                  "nonExplicitWhitelist": false,
                  "ns": Array [],
                  "nsSeparator": ":",
                  "overloadTranslationOptionHandler": [Function],
                  "parseMissingKeyHandler": false,
                  "partialBundledLanguages": false,
                  "pluralSeparator": "_",
                  "postProcess": false,
                  "postProcessPassResolved": false,
                  "prefix": "i18next::translator:",
                  "preload": false,
                  "resources": Object {
                    "de": Object {},
                    "en": Object {},
                    "fr": Object {},
                    "ru": Object {},
                    "uz": Object {},
                  },
                  "returnEmptyString": true,
                  "returnNull": true,
                  "returnObjects": false,
                  "returnedObjectHandler": false,
                  "saveMissing": false,
                  "saveMissingPlurals": true,
                  "saveMissingTo": "fallback",
                  "simplifyPluralSuffix": true,
                  "supportedLngs": Array [
                    "de",
                    "en",
                    "fr",
                    "ru",
                    "uz",
                    "cimode",
                  ],
                  "updateMissing": false,
                  "whitelist": false,
                },
                "prefix": "i18next::translator:",
              },
              "observers": Object {
                "*": Array [
                  [Function],
                ],
              },
              "options": Object {
                "appendNamespaceToCIMode": false,
                "appendNamespaceToMissingKey": false,
                "contextSeparator": "_",
                "debug": true,
                "defaultNS": "translation",
                "fallbackLng": Array [
                  "en",
                ],
                "fallbackNS": false,
                "initImmediate": false,
                "interpolation": Object {
                  "escapeValue": false,
                },
                "joinArrays": false,
                "keySeparator": ".",
                "load": "all",
                "missingInterpolationHandler": false,
                "missingKeyHandler": false,
                "nonExplicitSupportedLngs": true,
                "nonExplicitWhitelist": false,
                "ns": Array [],
                "nsSeparator": ":",
                "overloadTranslationOptionHandler": [Function],
                "parseMissingKeyHandler": false,
                "partialBundledLanguages": false,
                "pluralSeparator": "_",
                "postProcess": false,
                "postProcessPassResolved": false,
                "preload": false,
                "resources": Object {
                  "de": Object {},
                  "en": Object {},
                  "fr": Object {},
                  "ru": Object {},
                  "uz": Object {},
                },
                "returnEmptyString": true,
                "returnNull": true,
                "returnObjects": false,
                "returnedObjectHandler": false,
                "saveMissing": false,
                "saveMissingPlurals": true,
                "saveMissingTo": "fallback",
                "simplifyPluralSuffix": true,
                "supportedLngs": Array [
                  "de",
                  "en",
                  "fr",
                  "ru",
                  "uz",
                  "cimode",
                ],
                "updateMissing": false,
                "whitelist": false,
              },
              "pluralResolver": PluralResolver {
                "languageUtils": LanguageUtil {
                  "logger": Logger {
                    "debug": true,
                    "logger": Object {
                      "error": [Function],
                      "log": [Function],
                      "output": [Function],
                      "type": "logger",
                      "warn": [Function],
                    },
                    "options": Object {
                      "appendNamespaceToCIMode": false,
                      "appendNamespaceToMissingKey": false,
                      "contextSeparator": "_",
                      "debug": true,
                      "defaultNS": "translation",
                      "fallbackLng": Array [
                        "en",
                      ],
                      "fallbackNS": false,
                      "initImmediate": false,
                      "interpolation": Object {
                        "escapeValue": false,
                      },
                      "joinArrays": false,
                      "keySeparator": ".",
                      "load": "all",
                      "missingInterpolationHandler": false,
                      "missingKeyHandler": false,
                      "nonExplicitSupportedLngs": true,
                      "nonExplicitWhitelist": false,
                      "ns": Array [],
                      "nsSeparator": ":",
                      "overloadTranslationOptionHandler": [Function],
                      "parseMissingKeyHandler": false,
                      "partialBundledLanguages": false,
                      "pluralSeparator": "_",
                      "postProcess": false,
                      "postProcessPassResolved": false,
                      "prefix": "i18next::languageUtils:",
                      "preload": false,
                      "resources": Object {
                        "de": Object {},
                        "en": Object {},
                        "fr": Object {},
                        "ru": Object {},
                        "uz": Object {},
                      },
                      "returnEmptyString": true,
                      "returnNull": true,
                      "returnObjects": false,
                      "returnedObjectHandler": false,
                      "saveMissing": false,
                      "saveMissingPlurals": true,
                      "saveMissingTo": "fallback",
                      "simplifyPluralSuffix": true,
                      "supportedLngs": Array [
                        "de",
                        "en",
                        "fr",
                        "ru",
                        "uz",
                        "cimode",
                      ],
                      "updateMissing": false,
                      "whitelist": false,
                    },
                    "prefix": "i18next::languageUtils:",
                  },
                  "options": Object {
                    "appendNamespaceToCIMode": false,
                    "appendNamespaceToMissingKey": false,
                    "contextSeparator": "_",
                    "debug": true,
                    "defaultNS": "translation",
                    "fallbackLng": Array [
                      "en",
                    ],
                    "fallbackNS": false,
                    "initImmediate": false,
                    "interpolation": Object {
                      "escapeValue": false,
                    },
                    "joinArrays": false,
                    "keySeparator": ".",
                    "load": "all",
                    "missingInterpolationHandler": false,
                    "missingKeyHandler": false,
                    "nonExplicitSupportedLngs": true,
                    "nonExplicitWhitelist": false,
                    "ns": Array [],
                    "nsSeparator": ":",
                    "overloadTranslationOptionHandler": [Function],
                    "parseMissingKeyHandler": false,
                    "partialBundledLanguages": false,
                    "pluralSeparator": "_",
                    "postProcess": false,
                    "postProcessPassResolved": false,
                    "preload": false,
                    "resources": Object {
                      "de": Object {},
                      "en": Object {},
                      "fr": Object {},
                      "ru": Object {},
                      "uz": Object {},
                    },
                    "returnEmptyString": true,
                    "returnNull": true,
                    "returnObjects": false,
                    "returnedObjectHandler": false,
                    "saveMissing": false,
                    "saveMissingPlurals": true,
                    "saveMissingTo": "fallback",
                    "simplifyPluralSuffix": true,
                    "supportedLngs": Array [
                      "de",
                      "en",
                      "fr",
                      "ru",
                      "uz",
                      "cimode",
                    ],
                    "updateMissing": false,
                    "whitelist": false,
                  },
                  "supportedLngs": Array [
                    "de",
                    "en",
                    "fr",
                    "ru",
                    "uz",
                    "cimode",
                  ],
                  "whitelist": Array [
                    "de",
                    "en",
                    "fr",
                    "ru",
                    "uz",
                    "cimode",
                  ],
                },
                "logger": Logger {
                  "debug": true,
                  "logger": Object {
                    "error": [Function],
                    "log": [Function],
                    "output": [Function],
                    "type": "logger",
                    "warn": [Function],
                  },
                  "options": Object {
                    "appendNamespaceToCIMode": false,
                    "appendNamespaceToMissingKey": false,
                    "contextSeparator": "_",
                    "debug": true,
                    "defaultNS": "translation",
                    "fallbackLng": Array [
                      "en",
                    ],
                    "fallbackNS": false,
                    "initImmediate": false,
                    "interpolation": Object {
                      "escapeValue": false,
                    },
                    "joinArrays": false,
                    "keySeparator": ".",
                    "load": "all",
                    "missingInterpolationHandler": false,
                    "missingKeyHandler": false,
                    "nonExplicitSupportedLngs": true,
                    "nonExplicitWhitelist": false,
                    "ns": Array [],
                    "nsSeparator": ":",
                    "overloadTranslationOptionHandler": [Function],
                    "parseMissingKeyHandler": false,
                    "partialBundledLanguages": false,
                    "pluralSeparator": "_",
                    "postProcess": false,
                    "postProcessPassResolved": false,
                    "prefix": "i18next::pluralResolver:",
                    "preload": false,
                    "resources": Object {
                      "de": Object {},
                      "en": Object {},
                      "fr": Object {},
                      "ru": Object {},
                      "uz": Object {},
                    },
                    "returnEmptyString": true,
                    "returnNull": true,
                    "returnObjects": false,
                    "returnedObjectHandler": false,
                    "saveMissing": false,
                    "saveMissingPlurals": true,
                    "saveMissingTo": "fallback",
                    "simplifyPluralSuffix": true,
                    "supportedLngs": Array [
                      "de",
                      "en",
                      "fr",
                      "ru",
                      "uz",
                      "cimode",
                    ],
                    "updateMissing": false,
                    "whitelist": false,
                  },
                  "prefix": "i18next::pluralResolver:",
                },
                "options": Object {
                  "compatibilityJSON": undefined,
                  "prepend": "_",
                  "simplifyPluralSuffix": true,
                },
                "rules": Object {
                  "ach": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "af": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "ak": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "am": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "an": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "ar": Object {
                    "numbers": Array [
                      0,
                      1,
                      2,
                      3,
                      11,
                      100,
                    ],
                    "plurals": [Function],
                  },
                  "arn": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "ast": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "ay": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "az": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "be": Object {
                    "numbers": Array [
                      1,
                      2,
                      5,
                    ],
                    "plurals": [Function],
                  },
                  "bg": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "bn": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "bo": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "br": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "bs": Object {
                    "numbers": Array [
                      1,
                      2,
                      5,
                    ],
                    "plurals": [Function],
                  },
                  "ca": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "cgg": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "cnr": Object {
                    "numbers": Array [
                      1,
                      2,
                      5,
                    ],
                    "plurals": [Function],
                  },
                  "cs": Object {
                    "numbers": Array [
                      1,
                      2,
                      5,
                    ],
                    "plurals": [Function],
                  },
                  "csb": Object {
                    "numbers": Array [
                      1,
                      2,
                      5,
                    ],
                    "plurals": [Function],
                  },
                  "cy": Object {
                    "numbers": Array [
                      1,
                      2,
                      3,
                      8,
                    ],
                    "plurals": [Function],
                  },
                  "da": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "de": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "dev": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "dz": Object {
                    "numbers": Array [
                      1,
                      2,
                      5,
                    ],
                    "plurals": [Function],
                  },
                  "el": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "en": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "eo": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "es": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "et": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "eu": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "fa": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "fi": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "fil": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "fo": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "fr": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "fur": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "fy": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "ga": Object {
                    "numbers": Array [
                      1,
                      2,
                      3,
                      7,
                      11,
                    ],
                    "plurals": [Function],
                  },
                  "gd": Object {
                    "numbers": Array [
                      1,
                      2,
                      3,
                      20,
                    ],
                    "plurals": [Function],
                  },
                  "gl": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "gu": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "gun": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "ha": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "he": Object {
                    "numbers": Array [
                      1,
                      2,
                      20,
                      21,
                    ],
                    "plurals": [Function],
                  },
                  "hi": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "hr": Object {
                    "numbers": Array [
                      1,
                      2,
                      5,
                    ],
                    "plurals": [Function],
                  },
                  "ht": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "hu": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "hy": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "ia": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "id": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "is": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "it": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "iw": Object {
                    "numbers": Array [
                      1,
                      2,
                      20,
                      21,
                    ],
                    "plurals": [Function],
                  },
                  "ja": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "jbo": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "jv": Object {
                    "numbers": Array [
                      0,
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "ka": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "kk": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "km": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "kn": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "ko": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "ku": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "kw": Object {
                    "numbers": Array [
                      1,
                      2,
                      3,
                      4,
                    ],
                    "plurals": [Function],
                  },
                  "ky": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "lb": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "ln": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "lo": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "lt": Object {
                    "numbers": Array [
                      1,
                      2,
                      10,
                    ],
                    "plurals": [Function],
                  },
                  "lv": Object {
                    "numbers": Array [
                      1,
                      2,
                      0,
                    ],
                    "plurals": [Function],
                  },
                  "mai": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "mfe": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "mg": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "mi": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "mk": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "ml": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "mn": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "mnk": Object {
                    "numbers": Array [
                      0,
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "mr": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "ms": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "mt": Object {
                    "numbers": Array [
                      1,
                      2,
                      11,
                      20,
                    ],
                    "plurals": [Function],
                  },
                  "nah": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "nap": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "nb": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "ne": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "nl": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "nn": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "no": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "nso": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "oc": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "or": Object {
                    "numbers": Array [
                      2,
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "pa": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "pap": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "pl": Object {
                    "numbers": Array [
                      1,
                      2,
                      5,
                    ],
                    "plurals": [Function],
                  },
                  "pms": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "ps": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "pt": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "pt-BR": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "pt-PT": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "rm": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "ro": Object {
                    "numbers": Array [
                      1,
                      2,
                      20,
                    ],
                    "plurals": [Function],
                  },
                  "ru": Object {
                    "numbers": Array [
                      1,
                      2,
                      5,
                    ],
                    "plurals": [Function],
                  },
                  "sah": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "sco": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "se": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "si": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "sk": Object {
                    "numbers": Array [
                      1,
                      2,
                      5,
                    ],
                    "plurals": [Function],
                  },
                  "sl": Object {
                    "numbers": Array [
                      5,
                      1,
                      2,
                      3,
                    ],
                    "plurals": [Function],
                  },
                  "so": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "son": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "sq": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "sr": Object {
                    "numbers": Array [
                      1,
                      2,
                      5,
                    ],
                    "plurals": [Function],
                  },
                  "su": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "sv": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "sw": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "ta": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "te": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "tg": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "th": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "ti": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "tk": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "tr": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "tt": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "ug": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "uk": Object {
                    "numbers": Array [
                      1,
                      2,
                      5,
                    ],
                    "plurals": [Function],
                  },
                  "ur": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "uz": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "vi": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "wa": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "wo": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "yo": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "zh": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                },
              },
              "resourceStore": Object {
                "de": Object {},
                "en": Object {},
                "fr": Object {},
                "ru": Object {},
                "uz": Object {},
              },
              "utils": Object {
                "hasLoadedNamespace": [Function],
              },
            },
          }
        }
      >
        <Memo(MuiPickerUtils)>
          <MuiPickersUtilsProvider
            libInstance={[Function]}
            locale="en"
            utils={[Function]}
          >
            <Memo(ThemeProvider)
              defaultTheme={[Function]}
            >
              <ThemeProvider
                theme={
                  Object {
                    "breakpoints": Object {
                      "between": [Function],
                      "down": [Function],
                      "keys": Array [
                        "xs",
                        "sm",
                        "md",
                        "lg",
                        "xl",
                      ],
                      "only": [Function],
                      "up": [Function],
                      "values": Object {
                        "lg": 1280,
                        "md": 960,
                        "sm": 600,
                        "xl": 1920,
                        "xs": 0,
                      },
                      "width": [Function],
                    },
                    "direction": "ltr",
                    "mixins": Object {
                      "gutters": [Function],
                      "toolbar": Object {
                        "@media (min-width:0px) and (orientation: landscape)": Object {
                          "minHeight": 48,
                        },
                        "@media (min-width:600px)": Object {
                          "minHeight": 64,
                        },
                        "minHeight": 56,
                      },
                    },
                    "overrides": Object {},
                    "palette": Object {
                      "action": Object {
                        "activatedOpacity": 0.12,
                        "active": "rgba(0, 0, 0, 0.54)",
                        "disabled": "rgba(0, 0, 0, 0.26)",
                        "disabledBackground": "rgba(0, 0, 0, 0.12)",
                        "disabledOpacity": 0.38,
                        "focus": "rgba(0, 0, 0, 0.12)",
                        "focusOpacity": 0.12,
                        "hover": "rgba(0, 0, 0, 0.04)",
                        "hoverOpacity": 0.04,
                        "selected": "rgba(0, 0, 0, 0.08)",
                        "selectedOpacity": 0.08,
                      },
                      "augmentColor": [Function],
                      "background": Object {
                        "default": "#fafafa",
                        "paper": "#fff",
                      },
                      "common": Object {
                        "black": "#000",
                        "white": "#fff",
                      },
                      "contrastThreshold": 3,
                      "divider": "rgba(0, 0, 0, 0.12)",
                      "error": Object {
                        "contrastText": "#fff",
                        "dark": "#d32f2f",
                        "light": "#e57373",
                        "main": "#f44336",
                      },
                      "getContrastText": [Function],
                      "grey": Object {
                        "100": "#f5f5f5",
                        "200": "#eeeeee",
                        "300": "#e0e0e0",
                        "400": "#bdbdbd",
                        "50": "#fafafa",
                        "500": "#9e9e9e",
                        "600": "#757575",
                        "700": "#616161",
                        "800": "#424242",
                        "900": "#212121",
                        "A100": "#d5d5d5",
                        "A200": "#aaaaaa",
                        "A400": "#303030",
                        "A700": "#616161",
                      },
                      "info": Object {
                        "contrastText": "#fff",
                        "dark": "#1976d2",
                        "light": "#64b5f6",
                        "main": "#2196f3",
                      },
                      "primary": Object {
                        "contrastText": "#fff",
                        "dark": "rgb(44, 56, 126)",
                        "light": "rgb(101, 115, 195)",
                        "main": "#3f51b5",
                      },
                      "secondary": Object {
                        "contrastText": "#fff",
                        "dark": "rgb(171, 0, 60)",
                        "light": "rgb(247, 51, 120)",
                        "main": "#f50057",
                      },
                      "success": Object {
                        "contrastText": "rgba(0, 0, 0, 0.87)",
                        "dark": "#388e3c",
                        "light": "#81c784",
                        "main": "#4caf50",
                      },
                      "text": Object {
                        "disabled": "rgba(0, 0, 0, 0.38)",
                        "hint": "rgba(0, 0, 0, 0.38)",
                        "primary": "rgba(0, 0, 0, 0.87)",
                        "secondary": "rgba(0, 0, 0, 0.54)",
                      },
                      "tonalOffset": 0.2,
                      "type": "light",
                      "warning": Object {
                        "contrastText": "rgba(0, 0, 0, 0.87)",
                        "dark": "#f57c00",
                        "light": "#ffb74d",
                        "main": "#ff9800",
                      },
                    },
                    "props": Object {},
                    "shadows": Array [
                      "none",
                      "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                      "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                      "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                      "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                      "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                      "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                      "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                      "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                      "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                      "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                      "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                      "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                      "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                      "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                      "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                      "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                      "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                      "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                      "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                      "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                      "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                      "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                      "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                      "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                    ],
                    "shape": Object {
                      "borderRadius": 4,
                    },
                    "spacing": [Function],
                    "transitions": Object {
                      "create": [Function],
                      "duration": Object {
                        "complex": 375,
                        "enteringScreen": 225,
                        "leavingScreen": 195,
                        "short": 250,
                        "shorter": 200,
                        "shortest": 150,
                        "standard": 300,
                      },
                      "easing": Object {
                        "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                        "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                        "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                        "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                      },
                      "getAutoHeightDuration": [Function],
                    },
                    "typography": Object {
                      "body1": Object {
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "1rem",
                        "fontWeight": 400,
                        "letterSpacing": "0.00938em",
                        "lineHeight": 1.5,
                      },
                      "body2": Object {
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "0.875rem",
                        "fontWeight": 400,
                        "letterSpacing": "0.01071em",
                        "lineHeight": 1.43,
                      },
                      "button": Object {
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "0.875rem",
                        "fontWeight": 500,
                        "letterSpacing": "0.02857em",
                        "lineHeight": 1.75,
                        "textTransform": "uppercase",
                      },
                      "caption": Object {
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "0.75rem",
                        "fontWeight": 400,
                        "letterSpacing": "0.03333em",
                        "lineHeight": 1.66,
                      },
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": 14,
                      "fontWeightBold": 700,
                      "fontWeightLight": 300,
                      "fontWeightMedium": 500,
                      "fontWeightRegular": 400,
                      "h1": Object {
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "6rem",
                        "fontWeight": 300,
                        "letterSpacing": "-0.01562em",
                        "lineHeight": 1.167,
                      },
                      "h2": Object {
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "3.75rem",
                        "fontWeight": 300,
                        "letterSpacing": "-0.00833em",
                        "lineHeight": 1.2,
                      },
                      "h3": Object {
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "3rem",
                        "fontWeight": 400,
                        "letterSpacing": "0em",
                        "lineHeight": 1.167,
                      },
                      "h4": Object {
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "2.125rem",
                        "fontWeight": 400,
                        "letterSpacing": "0.00735em",
                        "lineHeight": 1.235,
                      },
                      "h5": Object {
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "1.5rem",
                        "fontWeight": 400,
                        "letterSpacing": "0em",
                        "lineHeight": 1.334,
                      },
                      "h6": Object {
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "1.25rem",
                        "fontWeight": 500,
                        "letterSpacing": "0.0075em",
                        "lineHeight": 1.6,
                      },
                      "htmlFontSize": 16,
                      "overline": Object {
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "0.75rem",
                        "fontWeight": 400,
                        "letterSpacing": "0.08333em",
                        "lineHeight": 2.66,
                        "textTransform": "uppercase",
                      },
                      "pxToRem": [Function],
                      "round": [Function],
                      "subtitle1": Object {
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "1rem",
                        "fontWeight": 400,
                        "letterSpacing": "0.00938em",
                        "lineHeight": 1.75,
                      },
                      "subtitle2": Object {
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "0.875rem",
                        "fontWeight": 500,
                        "letterSpacing": "0.00714em",
                        "lineHeight": 1.57,
                      },
                    },
                    "zIndex": Object {
                      "appBar": 1100,
                      "drawer": 1200,
                      "mobileStepper": 1000,
                      "modal": 1300,
                      "snackbar": 1400,
                      "speedDial": 1050,
                      "tooltip": 1500,
                    },
                    Symbol(mui.nested): false,
                  }
                }
              >
                <WithStyles(CssBaseline)>
                  <CssBaseline
                    classes={Object {}}
                  />
                </WithStyles(CssBaseline)>
                <QueryClientProvider
                  client={
                    QueryClient {
                      "defaultOptions": Object {},
                      "mutationCache": MutationCache {
                        "config": Object {},
                        "listeners": Array [],
                        "mutationId": 0,
                        "mutations": Array [],
                      },
                      "mutationDefaults": Array [],
                      "queryCache": QueryCache {
                        "config": Object {},
                        "listeners": Array [],
                        "queries": Array [],
                        "queriesMap": Object {},
                      },
                      "queryDefaults": Array [],
                      "unsubscribeFocus": [Function],
                      "unsubscribeOnline": [Function],
                    }
                  }
                >
                  <Memo(PermissionContextProvider)>
                    <Router
                      history={
                        Object {
                          "action": "POP",
                          "block": [Function],
                          "createHref": [Function],
                          "go": [Function],
                          "goBack": [Function],
                          "goForward": [Function],
                          "length": 1,
                          "listen": [Function],
                          "location": Object {
                            "hash": "",
                            "pathname": "/",
                            "search": "",
                            "state": undefined,
                          },
                          "push": [Function],
                          "replace": [Function],
                        }
                      }
                    >
                      <Memo(DialogContextProvider)>
                        <ThemeSelector>
                          <AdvThemeSelector>
                            <LanguageSelector />
                            <StylesProvider
                              generateClassName={[Function]}
                            >
                              <Component>
                                <DialogContent />
                              </Component>
                            </StylesProvider>
                          </AdvThemeSelector>
                        </ThemeSelector>
                        <Memo(InfoDialogRaw)
                          buttons={
                            Array [
                              Object {
                                "autoFocus": true,
                                "onClick": [Function],
                                "text": "Btn0",
                              },
                            ]
                          }
                          message="Enter your own text in Knobs!"
                          onClose={[Function]}
                          title="Storybook"
                        >
                          <Memo(ErrorDialogRaw)
                            buttons={
                              Array [
                                Object {
                                  "autoFocus": true,
                                  "onClick": [Function],
                                  "text": "Btn0",
                                },
                              ]
                            }
                            message="Enter your own text in Knobs!"
                            onClose={[Function]}
                            title="Storybook"
                          >
                            <WithStyles(ForwardRef(Dialog))
                              onClose={[Function]}
                              open={true}
                            >
                              <ForwardRef(Dialog)
                                classes={
                                  Object {
                                    "container": "MuiDialog-container",
                                    "paper": "MuiDialog-paper",
                                    "paperFullScreen": "MuiDialog-paperFullScreen",
                                    "paperFullWidth": "MuiDialog-paperFullWidth",
                                    "paperScrollBody": "MuiDialog-paperScrollBody",
                                    "paperScrollPaper": "MuiDialog-paperScrollPaper",
                                    "paperWidthFalse": "MuiDialog-paperWidthFalse",
                                    "paperWidthLg": "MuiDialog-paperWidthLg",
                                    "paperWidthMd": "MuiDialog-paperWidthMd",
                                    "paperWidthSm": "MuiDialog-paperWidthSm",
                                    "paperWidthXl": "MuiDialog-paperWidthXl",
                                    "paperWidthXs": "MuiDialog-paperWidthXs",
                                    "root": "MuiDialog-root",
                                    "scrollBody": "MuiDialog-scrollBody",
                                    "scrollPaper": "MuiDialog-scrollPaper",
                                  }
                                }
                                onClose={[Function]}
                                open={true}
                              >
                                <ForwardRef(Modal)
                                  BackdropComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "Naked": Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "propTypes": Object {
                                          "children": [Function],
                                          "className": [Function],
                                          "classes": [Function],
                                          "invisible": [Function],
                                          "open": [Function],
                                          "transitionDuration": [Function],
                                        },
                                        "render": [Function],
                                      },
                                      "options": Object {
                                        "defaultTheme": Object {
                                          "breakpoints": Object {
                                            "between": [Function],
                                            "down": [Function],
                                            "keys": Array [
                                              "xs",
                                              "sm",
                                              "md",
                                              "lg",
                                              "xl",
                                            ],
                                            "only": [Function],
                                            "up": [Function],
                                            "values": Object {
                                              "lg": 1280,
                                              "md": 960,
                                              "sm": 600,
                                              "xl": 1920,
                                              "xs": 0,
                                            },
                                            "width": [Function],
                                          },
                                          "direction": "ltr",
                                          "mixins": Object {
                                            "gutters": [Function],
                                            "toolbar": Object {
                                              "@media (min-width:0px) and (orientation: landscape)": Object {
                                                "minHeight": 48,
                                              },
                                              "@media (min-width:600px)": Object {
                                                "minHeight": 64,
                                              },
                                              "minHeight": 56,
                                            },
                                          },
                                          "overrides": Object {},
                                          "palette": Object {
                                            "action": Object {
                                              "activatedOpacity": 0.12,
                                              "active": "rgba(0, 0, 0, 0.54)",
                                              "disabled": "rgba(0, 0, 0, 0.26)",
                                              "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                              "disabledOpacity": 0.38,
                                              "focus": "rgba(0, 0, 0, 0.12)",
                                              "focusOpacity": 0.12,
                                              "hover": "rgba(0, 0, 0, 0.04)",
                                              "hoverOpacity": 0.04,
                                              "selected": "rgba(0, 0, 0, 0.08)",
                                              "selectedOpacity": 0.08,
                                            },
                                            "augmentColor": [Function],
                                            "background": Object {
                                              "default": "#fafafa",
                                              "paper": "#fff",
                                            },
                                            "common": Object {
                                              "black": "#000",
                                              "white": "#fff",
                                            },
                                            "contrastThreshold": 3,
                                            "divider": "rgba(0, 0, 0, 0.12)",
                                            "error": Object {
                                              "contrastText": "#fff",
                                              "dark": "#d32f2f",
                                              "light": "#e57373",
                                              "main": "#f44336",
                                            },
                                            "getContrastText": [Function],
                                            "grey": Object {
                                              "100": "#f5f5f5",
                                              "200": "#eeeeee",
                                              "300": "#e0e0e0",
                                              "400": "#bdbdbd",
                                              "50": "#fafafa",
                                              "500": "#9e9e9e",
                                              "600": "#757575",
                                              "700": "#616161",
                                              "800": "#424242",
                                              "900": "#212121",
                                              "A100": "#d5d5d5",
                                              "A200": "#aaaaaa",
                                              "A400": "#303030",
                                              "A700": "#616161",
                                            },
                                            "info": Object {
                                              "contrastText": "#fff",
                                              "dark": "#1976d2",
                                              "light": "#64b5f6",
                                              "main": "#2196f3",
                                            },
                                            "primary": Object {
                                              "contrastText": "#fff",
                                              "dark": "#303f9f",
                                              "light": "#7986cb",
                                              "main": "#3f51b5",
                                            },
                                            "secondary": Object {
                                              "contrastText": "#fff",
                                              "dark": "#c51162",
                                              "light": "#ff4081",
                                              "main": "#f50057",
                                            },
                                            "success": Object {
                                              "contrastText": "rgba(0, 0, 0, 0.87)",
                                              "dark": "#388e3c",
                                              "light": "#81c784",
                                              "main": "#4caf50",
                                            },
                                            "text": Object {
                                              "disabled": "rgba(0, 0, 0, 0.38)",
                                              "hint": "rgba(0, 0, 0, 0.38)",
                                              "primary": "rgba(0, 0, 0, 0.87)",
                                              "secondary": "rgba(0, 0, 0, 0.54)",
                                            },
                                            "tonalOffset": 0.2,
                                            "type": "light",
                                            "warning": Object {
                                              "contrastText": "rgba(0, 0, 0, 0.87)",
                                              "dark": "#f57c00",
                                              "light": "#ffb74d",
                                              "main": "#ff9800",
                                            },
                                          },
                                          "props": Object {},
                                          "shadows": Array [
                                            "none",
                                            "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                            "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                            "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                            "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                            "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                            "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                            "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                            "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                            "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                            "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                            "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                            "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                            "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                            "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                            "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                            "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                            "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                            "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                            "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                            "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                            "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                            "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                            "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                            "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                          ],
                                          "shape": Object {
                                            "borderRadius": 4,
                                          },
                                          "spacing": [Function],
                                          "transitions": Object {
                                            "create": [Function],
                                            "duration": Object {
                                              "complex": 375,
                                              "enteringScreen": 225,
                                              "leavingScreen": 195,
                                              "short": 250,
                                              "shorter": 200,
                                              "shortest": 150,
                                              "standard": 300,
                                            },
                                            "easing": Object {
                                              "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                              "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                              "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                              "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                            },
                                            "getAutoHeightDuration": [Function],
                                          },
                                          "typography": Object {
                                            "body1": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "1rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0.00938em",
                                              "lineHeight": 1.5,
                                            },
                                            "body2": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "0.875rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0.01071em",
                                              "lineHeight": 1.43,
                                            },
                                            "button": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "0.875rem",
                                              "fontWeight": 500,
                                              "letterSpacing": "0.02857em",
                                              "lineHeight": 1.75,
                                              "textTransform": "uppercase",
                                            },
                                            "caption": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "0.75rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0.03333em",
                                              "lineHeight": 1.66,
                                            },
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": 14,
                                            "fontWeightBold": 700,
                                            "fontWeightLight": 300,
                                            "fontWeightMedium": 500,
                                            "fontWeightRegular": 400,
                                            "h1": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "6rem",
                                              "fontWeight": 300,
                                              "letterSpacing": "-0.01562em",
                                              "lineHeight": 1.167,
                                            },
                                            "h2": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "3.75rem",
                                              "fontWeight": 300,
                                              "letterSpacing": "-0.00833em",
                                              "lineHeight": 1.2,
                                            },
                                            "h3": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "3rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0em",
                                              "lineHeight": 1.167,
                                            },
                                            "h4": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "2.125rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0.00735em",
                                              "lineHeight": 1.235,
                                            },
                                            "h5": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "1.5rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0em",
                                              "lineHeight": 1.334,
                                            },
                                            "h6": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "1.25rem",
                                              "fontWeight": 500,
                                              "letterSpacing": "0.0075em",
                                              "lineHeight": 1.6,
                                            },
                                            "htmlFontSize": 16,
                                            "overline": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "0.75rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0.08333em",
                                              "lineHeight": 2.66,
                                              "textTransform": "uppercase",
                                            },
                                            "pxToRem": [Function],
                                            "round": [Function],
                                            "subtitle1": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "1rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0.00938em",
                                              "lineHeight": 1.75,
                                            },
                                            "subtitle2": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "0.875rem",
                                              "fontWeight": 500,
                                              "letterSpacing": "0.00714em",
                                              "lineHeight": 1.57,
                                            },
                                          },
                                          "zIndex": Object {
                                            "appBar": 1100,
                                            "drawer": 1200,
                                            "mobileStepper": 1000,
                                            "modal": 1300,
                                            "snackbar": 1400,
                                            "speedDial": 1050,
                                            "tooltip": 1500,
                                          },
                                        },
                                        "name": "MuiBackdrop",
                                      },
                                      "propTypes": Object {
                                        "classes": [Function],
                                        "innerRef": [Function],
                                      },
                                      "render": [Function],
                                      "useStyles": [Function],
                                    }
                                  }
                                  BackdropProps={
                                    Object {
                                      "transitionDuration": Object {
                                        "enter": 225,
                                        "exit": 195,
                                      },
                                    }
                                  }
                                  className="MuiDialog-root"
                                  closeAfterTransition={true}
                                  disableBackdropClick={false}
                                  disableEscapeKeyDown={false}
                                  onClose={[Function]}
                                  open={true}
                                >
                                  <ForwardRef(Portal)
                                    disablePortal={false}
                                  >
                                    <Portal
                                      containerInfo={
                                        <body
                                          style="padding-right: 0px; overflow: hidden;"
                                        >
                                          <div
                                            aria-hidden="true"
                                            class="app"
                                            id="app"
                                          />
                                          <div
                                            class="MuiDialog-root"
                                            role="presentation"
                                            style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px;"
                                          >
                                            <div
                                              aria-hidden="true"
                                              class="MuiBackdrop-root"
                                              style="opacity: 1; webkit-transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;"
                                            />
                                            <div
                                              data-test="sentinelStart"
                                              tabindex="0"
                                            />
                                            <div
                                              class="MuiDialog-container MuiDialog-scrollPaper"
                                              role="none presentation"
                                              style="opacity: 1; webkit-transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;"
                                              tabindex="-1"
                                            >
                                              <div
                                                class="MuiPaper-root MuiDialog-paper MuiDialog-paperScrollPaper MuiDialog-paperWidthSm MuiPaper-elevation24 MuiPaper-rounded"
                                                role="dialog"
                                              >
                                                <div
                                                  class="MuiDialogTitle-root"
                                                >
                                                  <h2
                                                    class="MuiTypography-root MuiTypography-h6"
                                                  >
                                                    Storybook
                                                  </h2>
                                                </div>
                                                <div
                                                  class="MuiDialogContent-root"
                                                >
                                                  <p
                                                    class="MuiTypography-root MuiDialogContentText-root MuiTypography-body1 MuiTypography-colorTextSecondary"
                                                  >
                                                    Enter your own text in Knobs!
                                                  </p>
                                                </div>
                                                <div
                                                  class="MuiDialogActions-root MuiDialogActions-spacing"
                                                >
                                                  <button
                                                    class="MuiButtonBase-root MuiButton-root MuiButton-text MuiButton-textPrimary Mui-focusVisible Mui-focusVisible"
                                                    tabindex="0"
                                                    type="button"
                                                  >
                                                    <span
                                                      class="MuiButton-label"
                                                    >
                                                      Btn0
                                                    </span>
                                                    <span
                                                      class="MuiTouchRipple-root"
                                                    >
                                                      <span
                                                        class="MuiTouchRipple-ripple MuiTouchRipple-rippleVisible MuiTouchRipple-ripplePulsate"
                                                        style="width: 1px; height: 1px; top: -0.5px; left: -0.5px;"
                                                      >
                                                        <span
                                                          class="MuiTouchRipple-child MuiTouchRipple-childPulsate"
                                                        />
                                                      </span>
                                                    </span>
                                                  </button>
                                                </div>
                                              </div>
                                            </div>
                                            <div
                                              data-test="sentinelEnd"
                                              tabindex="0"
                                            />
                                          </div>
                                        </body>
                                      }
                                    >
                                      <div
                                        className="MuiDialog-root"
                                        onKeyDown={[Function]}
                                        role="presentation"
                                        style={
                                          Object {
                                            "bottom": 0,
                                            "left": 0,
                                            "position": "fixed",
                                            "right": 0,
                                            "top": 0,
                                            "zIndex": 1300,
                                          }
                                        }
                                      >
                                        <WithStyles(ForwardRef(Backdrop))
                                          onClick={[Function]}
                                          open={true}
                                          transitionDuration={
                                            Object {
                                              "enter": 225,
                                              "exit": 195,
                                            }
                                          }
                                        >
                                          <ForwardRef(Backdrop)
                                            classes={
                                              Object {
                                                "invisible": "MuiBackdrop-invisible",
                                                "root": "MuiBackdrop-root",
                                              }
                                            }
                                            onClick={[Function]}
                                            open={true}
                                            transitionDuration={
                                              Object {
                                                "enter": 225,
                                                "exit": 195,
                                              }
                                            }
                                          >
                                            <ForwardRef(Fade)
                                              in={true}
                                              onClick={[Function]}
                                              timeout={
                                                Object {
                                                  "enter": 225,
                                                  "exit": 195,
                                                }
                                              }
                                            >
                                              <Transition
                                                appear={true}
                                                enter={true}
                                                exit={true}
                                                in={true}
                                                mountOnEnter={false}
                                                onClick={[Function]}
                                                onEnter={[Function]}
                                                onEntered={[Function]}
                                                onEntering={[Function]}
                                                onExit={[Function]}
                                                onExited={[Function]}
                                                onExiting={[Function]}
                                                timeout={
                                                  Object {
                                                    "enter": 225,
                                                    "exit": 195,
                                                  }
                                                }
                                                unmountOnExit={false}
                                              >
                                                <div
                                                  aria-hidden={true}
                                                  className="MuiBackdrop-root"
                                                  onClick={[Function]}
                                                  style={
                                                    Object {
                                                      "opacity": 1,
                                                      "visibility": undefined,
                                                    }
                                                  }
                                                />
                                              </Transition>
                                            </ForwardRef(Fade)>
                                          </ForwardRef(Backdrop)>
                                        </WithStyles(ForwardRef(Backdrop))>
                                        <Unstable_TrapFocus
                                          disableAutoFocus={false}
                                          disableEnforceFocus={false}
                                          disableRestoreFocus={false}
                                          getDoc={[Function]}
                                          isEnabled={[Function]}
                                          open={true}
                                        >
                                          <div
                                            data-test="sentinelStart"
                                            tabIndex={0}
                                          />
                                          <ForwardRef(Fade)
                                            appear={true}
                                            in={true}
                                            onEnter={[Function]}
                                            onExited={[Function]}
                                            role="none presentation"
                                            tabIndex="-1"
                                            timeout={
                                              Object {
                                                "enter": 225,
                                                "exit": 195,
                                              }
                                            }
                                          >
                                            <Transition
                                              appear={true}
                                              enter={true}
                                              exit={true}
                                              in={true}
                                              mountOnEnter={false}
                                              onEnter={[Function]}
                                              onEntered={[Function]}
                                              onEntering={[Function]}
                                              onExit={[Function]}
                                              onExited={[Function]}
                                              onExiting={[Function]}
                                              role="none presentation"
                                              tabIndex="-1"
                                              timeout={
                                                Object {
                                                  "enter": 225,
                                                  "exit": 195,
                                                }
                                              }
                                              unmountOnExit={false}
                                            >
                                              <div
                                                className="MuiDialog-container MuiDialog-scrollPaper"
                                                onMouseDown={[Function]}
                                                onMouseUp={[Function]}
                                                role="none presentation"
                                                style={
                                                  Object {
                                                    "opacity": 1,
                                                    "visibility": undefined,
                                                  }
                                                }
                                                tabIndex="-1"
                                              >
                                                <WithStyles(ForwardRef(Paper))
                                                  className="MuiDialog-paper MuiDialog-paperScrollPaper MuiDialog-paperWidthSm"
                                                  elevation={24}
                                                  role="dialog"
                                                >
                                                  <ForwardRef(Paper)
                                                    className="MuiDialog-paper MuiDialog-paperScrollPaper MuiDialog-paperWidthSm"
                                                    classes={
                                                      Object {
                                                        "elevation0": "MuiPaper-elevation0",
                                                        "elevation1": "MuiPaper-elevation1",
                                                        "elevation10": "MuiPaper-elevation10",
                                                        "elevation11": "MuiPaper-elevation11",
                                                        "elevation12": "MuiPaper-elevation12",
                                                        "elevation13": "MuiPaper-elevation13",
                                                        "elevation14": "MuiPaper-elevation14",
                                                        "elevation15": "MuiPaper-elevation15",
                                                        "elevation16": "MuiPaper-elevation16",
                                                        "elevation17": "MuiPaper-elevation17",
                                                        "elevation18": "MuiPaper-elevation18",
                                                        "elevation19": "MuiPaper-elevation19",
                                                        "elevation2": "MuiPaper-elevation2",
                                                        "elevation20": "MuiPaper-elevation20",
                                                        "elevation21": "MuiPaper-elevation21",
                                                        "elevation22": "MuiPaper-elevation22",
                                                        "elevation23": "MuiPaper-elevation23",
                                                        "elevation24": "MuiPaper-elevation24",
                                                        "elevation3": "MuiPaper-elevation3",
                                                        "elevation4": "MuiPaper-elevation4",
                                                        "elevation5": "MuiPaper-elevation5",
                                                        "elevation6": "MuiPaper-elevation6",
                                                        "elevation7": "MuiPaper-elevation7",
                                                        "elevation8": "MuiPaper-elevation8",
                                                        "elevation9": "MuiPaper-elevation9",
                                                        "outlined": "MuiPaper-outlined",
                                                        "root": "MuiPaper-root",
                                                        "rounded": "MuiPaper-rounded",
                                                      }
                                                    }
                                                    elevation={24}
                                                    role="dialog"
                                                  >
                                                    <div
                                                      className="MuiPaper-root MuiDialog-paper MuiDialog-paperScrollPaper MuiDialog-paperWidthSm MuiPaper-elevation24 MuiPaper-rounded"
                                                      role="dialog"
                                                    >
                                                      <WithStyles(ForwardRef(DialogTitle))>
                                                        <ForwardRef(DialogTitle)
                                                          classes={
                                                            Object {
                                                              "root": "MuiDialogTitle-root",
                                                            }
                                                          }
                                                        >
                                                          <div
                                                            className="MuiDialogTitle-root"
                                                          >
                                                            <WithStyles(ForwardRef(Typography))
                                                              component="h2"
                                                              variant="h6"
                                                            >
                                                              <ForwardRef(Typography)
                                                                classes={
                                                                  Object {
                                                                    "alignCenter": "MuiTypography-alignCenter",
                                                                    "alignJustify": "MuiTypography-alignJustify",
                                                                    "alignLeft": "MuiTypography-alignLeft",
                                                                    "alignRight": "MuiTypography-alignRight",
                                                                    "body1": "MuiTypography-body1",
                                                                    "body2": "MuiTypography-body2",
                                                                    "button": "MuiTypography-button",
                                                                    "caption": "MuiTypography-caption",
                                                                    "colorError": "MuiTypography-colorError",
                                                                    "colorInherit": "MuiTypography-colorInherit",
                                                                    "colorPrimary": "MuiTypography-colorPrimary",
                                                                    "colorSecondary": "MuiTypography-colorSecondary",
                                                                    "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                    "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                    "displayBlock": "MuiTypography-displayBlock",
                                                                    "displayInline": "MuiTypography-displayInline",
                                                                    "gutterBottom": "MuiTypography-gutterBottom",
                                                                    "h1": "MuiTypography-h1",
                                                                    "h2": "MuiTypography-h2",
                                                                    "h3": "MuiTypography-h3",
                                                                    "h4": "MuiTypography-h4",
                                                                    "h5": "MuiTypography-h5",
                                                                    "h6": "MuiTypography-h6",
                                                                    "noWrap": "MuiTypography-noWrap",
                                                                    "overline": "MuiTypography-overline",
                                                                    "paragraph": "MuiTypography-paragraph",
                                                                    "root": "MuiTypography-root",
                                                                    "srOnly": "MuiTypography-srOnly",
                                                                    "subtitle1": "MuiTypography-subtitle1",
                                                                    "subtitle2": "MuiTypography-subtitle2",
                                                                  }
                                                                }
                                                                component="h2"
                                                                variant="h6"
                                                              >
                                                                <h2
                                                                  className="MuiTypography-root MuiTypography-h6"
                                                                >
                                                                  Storybook
                                                                </h2>
                                                              </ForwardRef(Typography)>
                                                            </WithStyles(ForwardRef(Typography))>
                                                          </div>
                                                        </ForwardRef(DialogTitle)>
                                                      </WithStyles(ForwardRef(DialogTitle))>
                                                      <WithStyles(ForwardRef(DialogContent))>
                                                        <ForwardRef(DialogContent)
                                                          classes={
                                                            Object {
                                                              "dividers": "MuiDialogContent-dividers",
                                                              "root": "MuiDialogContent-root",
                                                            }
                                                          }
                                                        >
                                                          <div
                                                            className="MuiDialogContent-root"
                                                          >
                                                            <WithStyles(ForwardRef(DialogContentText))>
                                                              <ForwardRef(DialogContentText)
                                                                classes={
                                                                  Object {
                                                                    "root": "MuiDialogContentText-root",
                                                                  }
                                                                }
                                                              >
                                                                <WithStyles(ForwardRef(Typography))
                                                                  classes={
                                                                    Object {
                                                                      "root": "MuiDialogContentText-root",
                                                                    }
                                                                  }
                                                                  color="textSecondary"
                                                                  component="p"
                                                                  variant="body1"
                                                                >
                                                                  <ForwardRef(Typography)
                                                                    classes={
                                                                      Object {
                                                                        "alignCenter": "MuiTypography-alignCenter",
                                                                        "alignJustify": "MuiTypography-alignJustify",
                                                                        "alignLeft": "MuiTypography-alignLeft",
                                                                        "alignRight": "MuiTypography-alignRight",
                                                                        "body1": "MuiTypography-body1",
                                                                        "body2": "MuiTypography-body2",
                                                                        "button": "MuiTypography-button",
                                                                        "caption": "MuiTypography-caption",
                                                                        "colorError": "MuiTypography-colorError",
                                                                        "colorInherit": "MuiTypography-colorInherit",
                                                                        "colorPrimary": "MuiTypography-colorPrimary",
                                                                        "colorSecondary": "MuiTypography-colorSecondary",
                                                                        "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                        "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                        "displayBlock": "MuiTypography-displayBlock",
                                                                        "displayInline": "MuiTypography-displayInline",
                                                                        "gutterBottom": "MuiTypography-gutterBottom",
                                                                        "h1": "MuiTypography-h1",
                                                                        "h2": "MuiTypography-h2",
                                                                        "h3": "MuiTypography-h3",
                                                                        "h4": "MuiTypography-h4",
                                                                        "h5": "MuiTypography-h5",
                                                                        "h6": "MuiTypography-h6",
                                                                        "noWrap": "MuiTypography-noWrap",
                                                                        "overline": "MuiTypography-overline",
                                                                        "paragraph": "MuiTypography-paragraph",
                                                                        "root": "MuiTypography-root MuiDialogContentText-root",
                                                                        "srOnly": "MuiTypography-srOnly",
                                                                        "subtitle1": "MuiTypography-subtitle1",
                                                                        "subtitle2": "MuiTypography-subtitle2",
                                                                      }
                                                                    }
                                                                    color="textSecondary"
                                                                    component="p"
                                                                    variant="body1"
                                                                  >
                                                                    <p
                                                                      className="MuiTypography-root MuiDialogContentText-root MuiTypography-body1 MuiTypography-colorTextSecondary"
                                                                    >
                                                                      Enter your own text in Knobs!
                                                                    </p>
                                                                  </ForwardRef(Typography)>
                                                                </WithStyles(ForwardRef(Typography))>
                                                              </ForwardRef(DialogContentText)>
                                                            </WithStyles(ForwardRef(DialogContentText))>
                                                          </div>
                                                        </ForwardRef(DialogContent)>
                                                      </WithStyles(ForwardRef(DialogContent))>
                                                      <WithStyles(ForwardRef(DialogActions))>
                                                        <ForwardRef(DialogActions)
                                                          classes={
                                                            Object {
                                                              "root": "MuiDialogActions-root",
                                                              "spacing": "MuiDialogActions-spacing",
                                                            }
                                                          }
                                                        >
                                                          <div
                                                            className="MuiDialogActions-root MuiDialogActions-spacing"
                                                          >
                                                            <WithStyles(ForwardRef(Button))
                                                              autoFocus={true}
                                                              color="primary"
                                                              key="0"
                                                              onClick={[Function]}
                                                            >
                                                              <ForwardRef(Button)
                                                                autoFocus={true}
                                                                classes={
                                                                  Object {
                                                                    "colorInherit": "MuiButton-colorInherit",
                                                                    "contained": "MuiButton-contained",
                                                                    "containedPrimary": "MuiButton-containedPrimary",
                                                                    "containedSecondary": "MuiButton-containedSecondary",
                                                                    "containedSizeLarge": "MuiButton-containedSizeLarge",
                                                                    "containedSizeSmall": "MuiButton-containedSizeSmall",
                                                                    "disableElevation": "MuiButton-disableElevation",
                                                                    "disabled": "Mui-disabled",
                                                                    "endIcon": "MuiButton-endIcon",
                                                                    "focusVisible": "Mui-focusVisible",
                                                                    "fullWidth": "MuiButton-fullWidth",
                                                                    "iconSizeLarge": "MuiButton-iconSizeLarge",
                                                                    "iconSizeMedium": "MuiButton-iconSizeMedium",
                                                                    "iconSizeSmall": "MuiButton-iconSizeSmall",
                                                                    "label": "MuiButton-label",
                                                                    "outlined": "MuiButton-outlined",
                                                                    "outlinedPrimary": "MuiButton-outlinedPrimary",
                                                                    "outlinedSecondary": "MuiButton-outlinedSecondary",
                                                                    "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                                                                    "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                                                                    "root": "MuiButton-root",
                                                                    "sizeLarge": "MuiButton-sizeLarge",
                                                                    "sizeSmall": "MuiButton-sizeSmall",
                                                                    "startIcon": "MuiButton-startIcon",
                                                                    "text": "MuiButton-text",
                                                                    "textPrimary": "MuiButton-textPrimary",
                                                                    "textSecondary": "MuiButton-textSecondary",
                                                                    "textSizeLarge": "MuiButton-textSizeLarge",
                                                                    "textSizeSmall": "MuiButton-textSizeSmall",
                                                                  }
                                                                }
                                                                color="primary"
                                                                onClick={[Function]}
                                                              >
                                                                <WithStyles(ForwardRef(ButtonBase))
                                                                  autoFocus={true}
                                                                  className="MuiButton-root MuiButton-text MuiButton-textPrimary"
                                                                  component="button"
                                                                  disabled={false}
                                                                  focusRipple={true}
                                                                  focusVisibleClassName="Mui-focusVisible"
                                                                  onClick={[Function]}
                                                                  type="button"
                                                                >
                                                                  <ForwardRef(ButtonBase)
                                                                    autoFocus={true}
                                                                    className="MuiButton-root MuiButton-text MuiButton-textPrimary"
                                                                    classes={
                                                                      Object {
                                                                        "disabled": "Mui-disabled",
                                                                        "focusVisible": "Mui-focusVisible",
                                                                        "root": "MuiButtonBase-root",
                                                                      }
                                                                    }
                                                                    component="button"
                                                                    disabled={false}
                                                                    focusRipple={true}
                                                                    focusVisibleClassName="Mui-focusVisible"
                                                                    onClick={[Function]}
                                                                    type="button"
                                                                  >
                                                                    <button
                                                                      autoFocus={true}
                                                                      className="MuiButtonBase-root MuiButton-root MuiButton-text MuiButton-textPrimary Mui-focusVisible Mui-focusVisible"
                                                                      disabled={false}
                                                                      onBlur={[Function]}
                                                                      onClick={[Function]}
                                                                      onDragLeave={[Function]}
                                                                      onFocus={[Function]}
                                                                      onKeyDown={[Function]}
                                                                      onKeyUp={[Function]}
                                                                      onMouseDown={[Function]}
                                                                      onMouseLeave={[Function]}
                                                                      onMouseUp={[Function]}
                                                                      onTouchEnd={[Function]}
                                                                      onTouchMove={[Function]}
                                                                      onTouchStart={[Function]}
                                                                      tabIndex={0}
                                                                      type="button"
                                                                    >
                                                                      <span
                                                                        className="MuiButton-label"
                                                                      >
                                                                        Btn0
                                                                      </span>
                                                                      <WithStyles(memo)
                                                                        center={false}
                                                                      >
                                                                        <ForwardRef(TouchRipple)
                                                                          center={false}
                                                                          classes={
                                                                            Object {
                                                                              "child": "MuiTouchRipple-child",
                                                                              "childLeaving": "MuiTouchRipple-childLeaving",
                                                                              "childPulsate": "MuiTouchRipple-childPulsate",
                                                                              "ripple": "MuiTouchRipple-ripple",
                                                                              "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                              "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                              "root": "MuiTouchRipple-root",
                                                                            }
                                                                          }
                                                                        >
                                                                          <span
                                                                            className="MuiTouchRipple-root"
                                                                          >
                                                                            <TransitionGroup
                                                                              childFactory={[Function]}
                                                                              component={null}
                                                                              exit={true}
                                                                            >
                                                                              <Ripple
                                                                                classes={
                                                                                  Object {
                                                                                    "child": "MuiTouchRipple-child",
                                                                                    "childLeaving": "MuiTouchRipple-childLeaving",
                                                                                    "childPulsate": "MuiTouchRipple-childPulsate",
                                                                                    "ripple": "MuiTouchRipple-ripple",
                                                                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                                    "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                                    "root": "MuiTouchRipple-root",
                                                                                  }
                                                                                }
                                                                                exit={true}
                                                                                in={true}
                                                                                key=".$0"
                                                                                onExited={[Function]}
                                                                                pulsate={true}
                                                                                rippleSize={1}
                                                                                rippleX={0}
                                                                                rippleY={0}
                                                                                timeout={550}
                                                                              >
                                                                                <span
                                                                                  className="MuiTouchRipple-ripple MuiTouchRipple-rippleVisible MuiTouchRipple-ripplePulsate"
                                                                                  style={
                                                                                    Object {
                                                                                      "height": 1,
                                                                                      "left": -0.5,
                                                                                      "top": -0.5,
                                                                                      "width": 1,
                                                                                    }
                                                                                  }
                                                                                >
                                                                                  <span
                                                                                    className="MuiTouchRipple-child MuiTouchRipple-childPulsate"
                                                                                  />
                                                                                </span>
                                                                              </Ripple>
                                                                            </TransitionGroup>
                                                                          </span>
                                                                        </ForwardRef(TouchRipple)>
                                                                      </WithStyles(memo)>
                                                                    </button>
                                                                  </ForwardRef(ButtonBase)>
                                                                </WithStyles(ForwardRef(ButtonBase))>
                                                              </ForwardRef(Button)>
                                                            </WithStyles(ForwardRef(Button))>
                                                          </div>
                                                        </ForwardRef(DialogActions)>
                                                      </WithStyles(ForwardRef(DialogActions))>
                                                    </div>
                                                  </ForwardRef(Paper)>
                                                </WithStyles(ForwardRef(Paper))>
                                              </div>
                                            </Transition>
                                          </ForwardRef(Fade)>
                                          <div
                                            data-test="sentinelEnd"
                                            tabIndex={0}
                                          />
                                        </Unstable_TrapFocus>
                                      </div>
                                    </Portal>
                                  </ForwardRef(Portal)>
                                </ForwardRef(Modal)>
                              </ForwardRef(Dialog)>
                            </WithStyles(ForwardRef(Dialog))>
                          </Memo(ErrorDialogRaw)>
                        </Memo(InfoDialogRaw)>
                      </Memo(DialogContextProvider)>
                    </Router>
                  </Memo(PermissionContextProvider)>
                </QueryClientProvider>
              </ThemeProvider>
            </Memo(ThemeProvider)>
          </MuiPickersUtilsProvider>
        </Memo(MuiPickerUtils)>
      </I18nextProvider>
    </Memo(CCI18nProvider)>
  </Suspense>
</Memo(ComponentsCareFramework)>
`;

exports[`Storyshots Non-Standalone/Dialog Input 1`] = `
<Memo(ComponentsCareFramework)
  defaultTheme={[Function]}
>
  <Suspense
    fallback={<Memo(Loader) />}
  >
    <Memo(CCI18nProvider)>
      <I18nextProvider
        defaultNS="translation"
        i18n={
          I18n {
            "addResource": [Function],
            "addResourceBundle": [Function],
            "addResources": [Function],
            "format": undefined,
            "getDataByLanguage": [Function],
            "getResource": [Function],
            "getResourceBundle": [Function],
            "hasResourceBundle": [Function],
            "isInitialized": true,
            "isLanguageChangingTo": undefined,
            "language": "en",
            "languages": Array [
              "en",
            ],
            "logger": Logger {
              "debug": true,
              "logger": Object {
                "error": [Function],
                "log": [Function],
                "output": [Function],
                "type": "logger",
                "warn": [Function],
              },
              "options": Object {
                "appendNamespaceToCIMode": false,
                "appendNamespaceToMissingKey": false,
                "contextSeparator": "_",
                "debug": true,
                "defaultNS": "translation",
                "fallbackLng": Array [
                  "en",
                ],
                "fallbackNS": false,
                "initImmediate": false,
                "interpolation": Object {
                  "escapeValue": false,
                },
                "joinArrays": false,
                "keySeparator": ".",
                "load": "all",
                "missingInterpolationHandler": false,
                "missingKeyHandler": false,
                "nonExplicitSupportedLngs": true,
                "nonExplicitWhitelist": false,
                "ns": Array [],
                "nsSeparator": ":",
                "overloadTranslationOptionHandler": [Function],
                "parseMissingKeyHandler": false,
                "partialBundledLanguages": false,
                "pluralSeparator": "_",
                "postProcess": false,
                "postProcessPassResolved": false,
                "preload": false,
                "resources": Object {
                  "de": Object {},
                  "en": Object {},
                  "fr": Object {},
                  "ru": Object {},
                  "uz": Object {},
                },
                "returnEmptyString": true,
                "returnNull": true,
                "returnObjects": false,
                "returnedObjectHandler": false,
                "saveMissing": false,
                "saveMissingPlurals": true,
                "saveMissingTo": "fallback",
                "simplifyPluralSuffix": true,
                "supportedLngs": Array [
                  "de",
                  "en",
                  "fr",
                  "ru",
                  "uz",
                  "cimode",
                ],
                "updateMissing": false,
                "whitelist": false,
              },
              "prefix": "i18next:",
            },
            "modules": Object {
              "external": Array [],
              "languageDetector": [Function],
            },
            "observers": Object {
              "languageChanged": Array [
                [Function],
                [Function],
              ],
            },
            "options": Object {
              "appendNamespaceToCIMode": false,
              "appendNamespaceToMissingKey": false,
              "contextSeparator": "_",
              "debug": true,
              "defaultNS": "translation",
              "fallbackLng": Array [
                "en",
              ],
              "fallbackNS": false,
              "initImmediate": false,
              "interpolation": Object {
                "escapeValue": false,
              },
              "joinArrays": false,
              "keySeparator": ".",
              "load": "all",
              "missingInterpolationHandler": false,
              "missingKeyHandler": false,
              "nonExplicitSupportedLngs": true,
              "nonExplicitWhitelist": false,
              "ns": Array [],
              "nsSeparator": ":",
              "overloadTranslationOptionHandler": [Function],
              "parseMissingKeyHandler": false,
              "partialBundledLanguages": false,
              "pluralSeparator": "_",
              "postProcess": false,
              "postProcessPassResolved": false,
              "preload": false,
              "resources": Object {
                "de": Object {},
                "en": Object {},
                "fr": Object {},
                "ru": Object {},
                "uz": Object {},
              },
              "returnEmptyString": true,
              "returnNull": true,
              "returnObjects": false,
              "returnedObjectHandler": false,
              "saveMissing": false,
              "saveMissingPlurals": true,
              "saveMissingTo": "fallback",
              "simplifyPluralSuffix": true,
              "supportedLngs": Array [
                "de",
                "en",
                "fr",
                "ru",
                "uz",
                "cimode",
              ],
              "updateMissing": false,
              "whitelist": false,
            },
            "removeResourceBundle": [Function],
            "reportNamespaces": ReportNamespaces {
              "usedNamespaces": Object {
                "translation": true,
              },
            },
            "services": Object {
              "backendConnector": Connector {
                "backend": null,
                "languageUtils": LanguageUtil {
                  "logger": Logger {
                    "debug": true,
                    "logger": Object {
                      "error": [Function],
                      "log": [Function],
                      "output": [Function],
                      "type": "logger",
                      "warn": [Function],
                    },
                    "options": Object {
                      "appendNamespaceToCIMode": false,
                      "appendNamespaceToMissingKey": false,
                      "contextSeparator": "_",
                      "debug": true,
                      "defaultNS": "translation",
                      "fallbackLng": Array [
                        "en",
                      ],
                      "fallbackNS": false,
                      "initImmediate": false,
                      "interpolation": Object {
                        "escapeValue": false,
                      },
                      "joinArrays": false,
                      "keySeparator": ".",
                      "load": "all",
                      "missingInterpolationHandler": false,
                      "missingKeyHandler": false,
                      "nonExplicitSupportedLngs": true,
                      "nonExplicitWhitelist": false,
                      "ns": Array [],
                      "nsSeparator": ":",
                      "overloadTranslationOptionHandler": [Function],
                      "parseMissingKeyHandler": false,
                      "partialBundledLanguages": false,
                      "pluralSeparator": "_",
                      "postProcess": false,
                      "postProcessPassResolved": false,
                      "prefix": "i18next::languageUtils:",
                      "preload": false,
                      "resources": Object {
                        "de": Object {},
                        "en": Object {},
                        "fr": Object {},
                        "ru": Object {},
                        "uz": Object {},
                      },
                      "returnEmptyString": true,
                      "returnNull": true,
                      "returnObjects": false,
                      "returnedObjectHandler": false,
                      "saveMissing": false,
                      "saveMissingPlurals": true,
                      "saveMissingTo": "fallback",
                      "simplifyPluralSuffix": true,
                      "supportedLngs": Array [
                        "de",
                        "en",
                        "fr",
                        "ru",
                        "uz",
                        "cimode",
                      ],
                      "updateMissing": false,
                      "whitelist": false,
                    },
                    "prefix": "i18next::languageUtils:",
                  },
                  "options": Object {
                    "appendNamespaceToCIMode": false,
                    "appendNamespaceToMissingKey": false,
                    "contextSeparator": "_",
                    "debug": true,
                    "defaultNS": "translation",
                    "fallbackLng": Array [
                      "en",
                    ],
                    "fallbackNS": false,
                    "initImmediate": false,
                    "interpolation": Object {
                      "escapeValue": false,
                    },
                    "joinArrays": false,
                    "keySeparator": ".",
                    "load": "all",
                    "missingInterpolationHandler": false,
                    "missingKeyHandler": false,
                    "nonExplicitSupportedLngs": true,
                    "nonExplicitWhitelist": false,
                    "ns": Array [],
                    "nsSeparator": ":",
                    "overloadTranslationOptionHandler": [Function],
                    "parseMissingKeyHandler": false,
                    "partialBundledLanguages": false,
                    "pluralSeparator": "_",
                    "postProcess": false,
                    "postProcessPassResolved": false,
                    "preload": false,
                    "resources": Object {
                      "de": Object {},
                      "en": Object {},
                      "fr": Object {},
                      "ru": Object {},
                      "uz": Object {},
                    },
                    "returnEmptyString": true,
                    "returnNull": true,
                    "returnObjects": false,
                    "returnedObjectHandler": false,
                    "saveMissing": false,
                    "saveMissingPlurals": true,
                    "saveMissingTo": "fallback",
                    "simplifyPluralSuffix": true,
                    "supportedLngs": Array [
                      "de",
                      "en",
                      "fr",
                      "ru",
                      "uz",
                      "cimode",
                    ],
                    "updateMissing": false,
                    "whitelist": false,
                  },
                  "supportedLngs": Array [
                    "de",
                    "en",
                    "fr",
                    "ru",
                    "uz",
                    "cimode",
                  ],
                  "whitelist": Array [
                    "de",
                    "en",
                    "fr",
                    "ru",
                    "uz",
                    "cimode",
                  ],
                },
                "logger": Logger {
                  "debug": true,
                  "logger": Object {
                    "error": [Function],
                    "log": [Function],
                    "output": [Function],
                    "type": "logger",
                    "warn": [Function],
                  },
                  "options": Object {
                    "appendNamespaceToCIMode": false,
                    "appendNamespaceToMissingKey": false,
                    "contextSeparator": "_",
                    "debug": true,
                    "defaultNS": "translation",
                    "fallbackLng": Array [
                      "en",
                    ],
                    "fallbackNS": false,
                    "initImmediate": false,
                    "interpolation": Object {
                      "escapeValue": false,
                    },
                    "joinArrays": false,
                    "keySeparator": ".",
                    "load": "all",
                    "missingInterpolationHandler": false,
                    "missingKeyHandler": false,
                    "nonExplicitSupportedLngs": true,
                    "nonExplicitWhitelist": false,
                    "ns": Array [],
                    "nsSeparator": ":",
                    "overloadTranslationOptionHandler": [Function],
                    "parseMissingKeyHandler": false,
                    "partialBundledLanguages": false,
                    "pluralSeparator": "_",
                    "postProcess": false,
                    "postProcessPassResolved": false,
                    "prefix": "i18next::backendConnector:",
                    "preload": false,
                    "resources": Object {
                      "de": Object {},
                      "en": Object {},
                      "fr": Object {},
                      "ru": Object {},
                      "uz": Object {},
                    },
                    "returnEmptyString": true,
                    "returnNull": true,
                    "returnObjects": false,
                    "returnedObjectHandler": false,
                    "saveMissing": false,
                    "saveMissingPlurals": true,
                    "saveMissingTo": "fallback",
                    "simplifyPluralSuffix": true,
                    "supportedLngs": Array [
                      "de",
                      "en",
                      "fr",
                      "ru",
                      "uz",
                      "cimode",
                    ],
                    "updateMissing": false,
                    "whitelist": false,
                  },
                  "prefix": "i18next::backendConnector:",
                },
                "observers": Object {
                  "*": Array [
                    [Function],
                  ],
                },
                "options": Object {
                  "appendNamespaceToCIMode": false,
                  "appendNamespaceToMissingKey": false,
                  "contextSeparator": "_",
                  "debug": true,
                  "defaultNS": "translation",
                  "fallbackLng": Array [
                    "en",
                  ],
                  "fallbackNS": false,
                  "initImmediate": false,
                  "interpolation": Object {
                    "escapeValue": false,
                  },
                  "joinArrays": false,
                  "keySeparator": ".",
                  "load": "all",
                  "missingInterpolationHandler": false,
                  "missingKeyHandler": false,
                  "nonExplicitSupportedLngs": true,
                  "nonExplicitWhitelist": false,
                  "ns": Array [],
                  "nsSeparator": ":",
                  "overloadTranslationOptionHandler": [Function],
                  "parseMissingKeyHandler": false,
                  "partialBundledLanguages": false,
                  "pluralSeparator": "_",
                  "postProcess": false,
                  "postProcessPassResolved": false,
                  "preload": false,
                  "resources": Object {
                    "de": Object {},
                    "en": Object {},
                    "fr": Object {},
                    "ru": Object {},
                    "uz": Object {},
                  },
                  "returnEmptyString": true,
                  "returnNull": true,
                  "returnObjects": false,
                  "returnedObjectHandler": false,
                  "saveMissing": false,
                  "saveMissingPlurals": true,
                  "saveMissingTo": "fallback",
                  "simplifyPluralSuffix": true,
                  "supportedLngs": Array [
                    "de",
                    "en",
                    "fr",
                    "ru",
                    "uz",
                    "cimode",
                  ],
                  "updateMissing": false,
                  "whitelist": false,
                },
                "queue": Array [],
                "services": [Circular],
                "state": Object {},
                "store": Object {
                  "de": Object {},
                  "en": Object {},
                  "fr": Object {},
                  "ru": Object {},
                  "uz": Object {},
                },
              },
              "interpolator": Interpolator {
                "alwaysFormat": false,
                "escape": [Function],
                "escapeValue": false,
                "format": [Function],
                "formatSeparator": ",",
                "logger": Logger {
                  "debug": true,
                  "logger": Object {
                    "error": [Function],
                    "log": [Function],
                    "output": [Function],
                    "type": "logger",
                    "warn": [Function],
                  },
                  "options": Object {
                    "appendNamespaceToCIMode": false,
                    "appendNamespaceToMissingKey": false,
                    "contextSeparator": "_",
                    "debug": true,
                    "defaultNS": "translation",
                    "fallbackLng": Array [
                      "en",
                    ],
                    "fallbackNS": false,
                    "initImmediate": false,
                    "interpolation": Object {
                      "escapeValue": false,
                    },
                    "joinArrays": false,
                    "keySeparator": ".",
                    "load": "all",
                    "missingInterpolationHandler": false,
                    "missingKeyHandler": false,
                    "nonExplicitSupportedLngs": true,
                    "nonExplicitWhitelist": false,
                    "ns": Array [],
                    "nsSeparator": ":",
                    "overloadTranslationOptionHandler": [Function],
                    "parseMissingKeyHandler": false,
                    "partialBundledLanguages": false,
                    "pluralSeparator": "_",
                    "postProcess": false,
                    "postProcessPassResolved": false,
                    "prefix": "i18next::interpolator:",
                    "preload": false,
                    "resources": Object {
                      "de": Object {},
                      "en": Object {},
                      "fr": Object {},
                      "ru": Object {},
                      "uz": Object {},
                    },
                    "returnEmptyString": true,
                    "returnNull": true,
                    "returnObjects": false,
                    "returnedObjectHandler": false,
                    "saveMissing": false,
                    "saveMissingPlurals": true,
                    "saveMissingTo": "fallback",
                    "simplifyPluralSuffix": true,
                    "supportedLngs": Array [
                      "de",
                      "en",
                      "fr",
                      "ru",
                      "uz",
                      "cimode",
                    ],
                    "updateMissing": false,
                    "whitelist": false,
                  },
                  "prefix": "i18next::interpolator:",
                },
                "maxReplaces": 1000,
                "nestingOptionsSeparator": ",",
                "nestingPrefix": "\\\\$t\\\\(",
                "nestingRegexp": /\\\\\\$t\\\\\\(\\(\\.\\+\\?\\)\\\\\\)/g,
                "nestingSuffix": "\\\\)",
                "options": Object {
                  "appendNamespaceToCIMode": false,
                  "appendNamespaceToMissingKey": false,
                  "contextSeparator": "_",
                  "debug": true,
                  "defaultNS": "translation",
                  "fallbackLng": Array [
                    "en",
                  ],
                  "fallbackNS": false,
                  "initImmediate": false,
                  "interpolation": Object {
                    "escapeValue": false,
                  },
                  "joinArrays": false,
                  "keySeparator": ".",
                  "load": "all",
                  "missingInterpolationHandler": false,
                  "missingKeyHandler": false,
                  "nonExplicitSupportedLngs": true,
                  "nonExplicitWhitelist": false,
                  "ns": Array [],
                  "nsSeparator": ":",
                  "overloadTranslationOptionHandler": [Function],
                  "parseMissingKeyHandler": false,
                  "partialBundledLanguages": false,
                  "pluralSeparator": "_",
                  "postProcess": false,
                  "postProcessPassResolved": false,
                  "preload": false,
                  "resources": Object {
                    "de": Object {},
                    "en": Object {},
                    "fr": Object {},
                    "ru": Object {},
                    "uz": Object {},
                  },
                  "returnEmptyString": true,
                  "returnNull": true,
                  "returnObjects": false,
                  "returnedObjectHandler": false,
                  "saveMissing": false,
                  "saveMissingPlurals": true,
                  "saveMissingTo": "fallback",
                  "simplifyPluralSuffix": true,
                  "supportedLngs": Array [
                    "de",
                    "en",
                    "fr",
                    "ru",
                    "uz",
                    "cimode",
                  ],
                  "updateMissing": false,
                  "whitelist": false,
                },
                "prefix": "{{",
                "regexp": /\\{\\{\\(\\.\\+\\?\\)\\}\\}/g,
                "regexpUnescape": /\\{\\{-\\(\\.\\+\\?\\)\\}\\}/g,
                "suffix": "}}",
                "unescapePrefix": "-",
                "unescapeSuffix": "",
                "useRawValueToEscape": false,
              },
              "languageDetector": Browser {
                "detectors": Object {
                  "cookie": Object {
                    "cacheUserLanguage": [Function],
                    "lookup": [Function],
                    "name": "cookie",
                  },
                  "htmlTag": Object {
                    "lookup": [Function],
                    "name": "htmlTag",
                  },
                  "localStorage": Object {
                    "cacheUserLanguage": [Function],
                    "lookup": [Function],
                    "name": "localStorage",
                  },
                  "navigator": Object {
                    "lookup": [Function],
                    "name": "navigator",
                  },
                  "path": Object {
                    "lookup": [Function],
                    "name": "path",
                  },
                  "querystring": Object {
                    "lookup": [Function],
                    "name": "querystring",
                  },
                  "sessionStorage": Object {
                    "cacheUserLanguage": [Function],
                    "lookup": [Function],
                    "name": "sessionStorage",
                  },
                  "subdomain": Object {
                    "lookup": [Function],
                    "name": "subdomain",
                  },
                },
                "i18nOptions": Object {
                  "appendNamespaceToCIMode": false,
                  "appendNamespaceToMissingKey": false,
                  "contextSeparator": "_",
                  "debug": true,
                  "defaultNS": "translation",
                  "fallbackLng": Array [
                    "en",
                  ],
                  "fallbackNS": false,
                  "initImmediate": false,
                  "interpolation": Object {
                    "escapeValue": false,
                  },
                  "joinArrays": false,
                  "keySeparator": ".",
                  "load": "all",
                  "missingInterpolationHandler": false,
                  "missingKeyHandler": false,
                  "nonExplicitSupportedLngs": true,
                  "nonExplicitWhitelist": false,
                  "ns": Array [],
                  "nsSeparator": ":",
                  "overloadTranslationOptionHandler": [Function],
                  "parseMissingKeyHandler": false,
                  "partialBundledLanguages": false,
                  "pluralSeparator": "_",
                  "postProcess": false,
                  "postProcessPassResolved": false,
                  "preload": false,
                  "resources": Object {
                    "de": Object {},
                    "en": Object {},
                    "fr": Object {},
                    "ru": Object {},
                    "uz": Object {},
                  },
                  "returnEmptyString": true,
                  "returnNull": true,
                  "returnObjects": false,
                  "returnedObjectHandler": false,
                  "saveMissing": false,
                  "saveMissingPlurals": true,
                  "saveMissingTo": "fallback",
                  "simplifyPluralSuffix": true,
                  "supportedLngs": Array [
                    "de",
                    "en",
                    "fr",
                    "ru",
                    "uz",
                    "cimode",
                  ],
                  "updateMissing": false,
                  "whitelist": false,
                },
                "options": Object {
                  "caches": Array [
                    "localStorage",
                  ],
                  "excludeCacheFor": Array [
                    "cimode",
                  ],
                  "lookupCookie": "i18next",
                  "lookupLocalStorage": "i18nextLng",
                  "lookupQuerystring": "lng",
                  "lookupSessionStorage": "i18nextLng",
                  "order": Array [
                    "querystring",
                    "cookie",
                    "localStorage",
                    "sessionStorage",
                    "navigator",
                    "htmlTag",
                  ],
                },
                "services": [Circular],
                "type": "languageDetector",
              },
              "languageUtils": LanguageUtil {
                "logger": Logger {
                  "debug": true,
                  "logger": Object {
                    "error": [Function],
                    "log": [Function],
                    "output": [Function],
                    "type": "logger",
                    "warn": [Function],
                  },
                  "options": Object {
                    "appendNamespaceToCIMode": false,
                    "appendNamespaceToMissingKey": false,
                    "contextSeparator": "_",
                    "debug": true,
                    "defaultNS": "translation",
                    "fallbackLng": Array [
                      "en",
                    ],
                    "fallbackNS": false,
                    "initImmediate": false,
                    "interpolation": Object {
                      "escapeValue": false,
                    },
                    "joinArrays": false,
                    "keySeparator": ".",
                    "load": "all",
                    "missingInterpolationHandler": false,
                    "missingKeyHandler": false,
                    "nonExplicitSupportedLngs": true,
                    "nonExplicitWhitelist": false,
                    "ns": Array [],
                    "nsSeparator": ":",
                    "overloadTranslationOptionHandler": [Function],
                    "parseMissingKeyHandler": false,
                    "partialBundledLanguages": false,
                    "pluralSeparator": "_",
                    "postProcess": false,
                    "postProcessPassResolved": false,
                    "prefix": "i18next::languageUtils:",
                    "preload": false,
                    "resources": Object {
                      "de": Object {},
                      "en": Object {},
                      "fr": Object {},
                      "ru": Object {},
                      "uz": Object {},
                    },
                    "returnEmptyString": true,
                    "returnNull": true,
                    "returnObjects": false,
                    "returnedObjectHandler": false,
                    "saveMissing": false,
                    "saveMissingPlurals": true,
                    "saveMissingTo": "fallback",
                    "simplifyPluralSuffix": true,
                    "supportedLngs": Array [
                      "de",
                      "en",
                      "fr",
                      "ru",
                      "uz",
                      "cimode",
                    ],
                    "updateMissing": false,
                    "whitelist": false,
                  },
                  "prefix": "i18next::languageUtils:",
                },
                "options": Object {
                  "appendNamespaceToCIMode": false,
                  "appendNamespaceToMissingKey": false,
                  "contextSeparator": "_",
                  "debug": true,
                  "defaultNS": "translation",
                  "fallbackLng": Array [
                    "en",
                  ],
                  "fallbackNS": false,
                  "initImmediate": false,
                  "interpolation": Object {
                    "escapeValue": false,
                  },
                  "joinArrays": false,
                  "keySeparator": ".",
                  "load": "all",
                  "missingInterpolationHandler": false,
                  "missingKeyHandler": false,
                  "nonExplicitSupportedLngs": true,
                  "nonExplicitWhitelist": false,
                  "ns": Array [],
                  "nsSeparator": ":",
                  "overloadTranslationOptionHandler": [Function],
                  "parseMissingKeyHandler": false,
                  "partialBundledLanguages": false,
                  "pluralSeparator": "_",
                  "postProcess": false,
                  "postProcessPassResolved": false,
                  "preload": false,
                  "resources": Object {
                    "de": Object {},
                    "en": Object {},
                    "fr": Object {},
                    "ru": Object {},
                    "uz": Object {},
                  },
                  "returnEmptyString": true,
                  "returnNull": true,
                  "returnObjects": false,
                  "returnedObjectHandler": false,
                  "saveMissing": false,
                  "saveMissingPlurals": true,
                  "saveMissingTo": "fallback",
                  "simplifyPluralSuffix": true,
                  "supportedLngs": Array [
                    "de",
                    "en",
                    "fr",
                    "ru",
                    "uz",
                    "cimode",
                  ],
                  "updateMissing": false,
                  "whitelist": false,
                },
                "supportedLngs": Array [
                  "de",
                  "en",
                  "fr",
                  "ru",
                  "uz",
                  "cimode",
                ],
                "whitelist": Array [
                  "de",
                  "en",
                  "fr",
                  "ru",
                  "uz",
                  "cimode",
                ],
              },
              "logger": Logger {
                "debug": true,
                "logger": Object {
                  "error": [Function],
                  "log": [Function],
                  "output": [Function],
                  "type": "logger",
                  "warn": [Function],
                },
                "options": Object {
                  "appendNamespaceToCIMode": false,
                  "appendNamespaceToMissingKey": false,
                  "contextSeparator": "_",
                  "debug": true,
                  "defaultNS": "translation",
                  "fallbackLng": Array [
                    "en",
                  ],
                  "fallbackNS": false,
                  "initImmediate": false,
                  "interpolation": Object {
                    "escapeValue": false,
                  },
                  "joinArrays": false,
                  "keySeparator": ".",
                  "load": "all",
                  "missingInterpolationHandler": false,
                  "missingKeyHandler": false,
                  "nonExplicitSupportedLngs": true,
                  "nonExplicitWhitelist": false,
                  "ns": Array [],
                  "nsSeparator": ":",
                  "overloadTranslationOptionHandler": [Function],
                  "parseMissingKeyHandler": false,
                  "partialBundledLanguages": false,
                  "pluralSeparator": "_",
                  "postProcess": false,
                  "postProcessPassResolved": false,
                  "preload": false,
                  "resources": Object {
                    "de": Object {},
                    "en": Object {},
                    "fr": Object {},
                    "ru": Object {},
                    "uz": Object {},
                  },
                  "returnEmptyString": true,
                  "returnNull": true,
                  "returnObjects": false,
                  "returnedObjectHandler": false,
                  "saveMissing": false,
                  "saveMissingPlurals": true,
                  "saveMissingTo": "fallback",
                  "simplifyPluralSuffix": true,
                  "supportedLngs": Array [
                    "de",
                    "en",
                    "fr",
                    "ru",
                    "uz",
                    "cimode",
                  ],
                  "updateMissing": false,
                  "whitelist": false,
                },
                "prefix": "i18next:",
              },
              "pluralResolver": PluralResolver {
                "languageUtils": LanguageUtil {
                  "logger": Logger {
                    "debug": true,
                    "logger": Object {
                      "error": [Function],
                      "log": [Function],
                      "output": [Function],
                      "type": "logger",
                      "warn": [Function],
                    },
                    "options": Object {
                      "appendNamespaceToCIMode": false,
                      "appendNamespaceToMissingKey": false,
                      "contextSeparator": "_",
                      "debug": true,
                      "defaultNS": "translation",
                      "fallbackLng": Array [
                        "en",
                      ],
                      "fallbackNS": false,
                      "initImmediate": false,
                      "interpolation": Object {
                        "escapeValue": false,
                      },
                      "joinArrays": false,
                      "keySeparator": ".",
                      "load": "all",
                      "missingInterpolationHandler": false,
                      "missingKeyHandler": false,
                      "nonExplicitSupportedLngs": true,
                      "nonExplicitWhitelist": false,
                      "ns": Array [],
                      "nsSeparator": ":",
                      "overloadTranslationOptionHandler": [Function],
                      "parseMissingKeyHandler": false,
                      "partialBundledLanguages": false,
                      "pluralSeparator": "_",
                      "postProcess": false,
                      "postProcessPassResolved": false,
                      "prefix": "i18next::languageUtils:",
                      "preload": false,
                      "resources": Object {
                        "de": Object {},
                        "en": Object {},
                        "fr": Object {},
                        "ru": Object {},
                        "uz": Object {},
                      },
                      "returnEmptyString": true,
                      "returnNull": true,
                      "returnObjects": false,
                      "returnedObjectHandler": false,
                      "saveMissing": false,
                      "saveMissingPlurals": true,
                      "saveMissingTo": "fallback",
                      "simplifyPluralSuffix": true,
                      "supportedLngs": Array [
                        "de",
                        "en",
                        "fr",
                        "ru",
                        "uz",
                        "cimode",
                      ],
                      "updateMissing": false,
                      "whitelist": false,
                    },
                    "prefix": "i18next::languageUtils:",
                  },
                  "options": Object {
                    "appendNamespaceToCIMode": false,
                    "appendNamespaceToMissingKey": false,
                    "contextSeparator": "_",
                    "debug": true,
                    "defaultNS": "translation",
                    "fallbackLng": Array [
                      "en",
                    ],
                    "fallbackNS": false,
                    "initImmediate": false,
                    "interpolation": Object {
                      "escapeValue": false,
                    },
                    "joinArrays": false,
                    "keySeparator": ".",
                    "load": "all",
                    "missingInterpolationHandler": false,
                    "missingKeyHandler": false,
                    "nonExplicitSupportedLngs": true,
                    "nonExplicitWhitelist": false,
                    "ns": Array [],
                    "nsSeparator": ":",
                    "overloadTranslationOptionHandler": [Function],
                    "parseMissingKeyHandler": false,
                    "partialBundledLanguages": false,
                    "pluralSeparator": "_",
                    "postProcess": false,
                    "postProcessPassResolved": false,
                    "preload": false,
                    "resources": Object {
                      "de": Object {},
                      "en": Object {},
                      "fr": Object {},
                      "ru": Object {},
                      "uz": Object {},
                    },
                    "returnEmptyString": true,
                    "returnNull": true,
                    "returnObjects": false,
                    "returnedObjectHandler": false,
                    "saveMissing": false,
                    "saveMissingPlurals": true,
                    "saveMissingTo": "fallback",
                    "simplifyPluralSuffix": true,
                    "supportedLngs": Array [
                      "de",
                      "en",
                      "fr",
                      "ru",
                      "uz",
                      "cimode",
                    ],
                    "updateMissing": false,
                    "whitelist": false,
                  },
                  "supportedLngs": Array [
                    "de",
                    "en",
                    "fr",
                    "ru",
                    "uz",
                    "cimode",
                  ],
                  "whitelist": Array [
                    "de",
                    "en",
                    "fr",
                    "ru",
                    "uz",
                    "cimode",
                  ],
                },
                "logger": Logger {
                  "debug": true,
                  "logger": Object {
                    "error": [Function],
                    "log": [Function],
                    "output": [Function],
                    "type": "logger",
                    "warn": [Function],
                  },
                  "options": Object {
                    "appendNamespaceToCIMode": false,
                    "appendNamespaceToMissingKey": false,
                    "contextSeparator": "_",
                    "debug": true,
                    "defaultNS": "translation",
                    "fallbackLng": Array [
                      "en",
                    ],
                    "fallbackNS": false,
                    "initImmediate": false,
                    "interpolation": Object {
                      "escapeValue": false,
                    },
                    "joinArrays": false,
                    "keySeparator": ".",
                    "load": "all",
                    "missingInterpolationHandler": false,
                    "missingKeyHandler": false,
                    "nonExplicitSupportedLngs": true,
                    "nonExplicitWhitelist": false,
                    "ns": Array [],
                    "nsSeparator": ":",
                    "overloadTranslationOptionHandler": [Function],
                    "parseMissingKeyHandler": false,
                    "partialBundledLanguages": false,
                    "pluralSeparator": "_",
                    "postProcess": false,
                    "postProcessPassResolved": false,
                    "prefix": "i18next::pluralResolver:",
                    "preload": false,
                    "resources": Object {
                      "de": Object {},
                      "en": Object {},
                      "fr": Object {},
                      "ru": Object {},
                      "uz": Object {},
                    },
                    "returnEmptyString": true,
                    "returnNull": true,
                    "returnObjects": false,
                    "returnedObjectHandler": false,
                    "saveMissing": false,
                    "saveMissingPlurals": true,
                    "saveMissingTo": "fallback",
                    "simplifyPluralSuffix": true,
                    "supportedLngs": Array [
                      "de",
                      "en",
                      "fr",
                      "ru",
                      "uz",
                      "cimode",
                    ],
                    "updateMissing": false,
                    "whitelist": false,
                  },
                  "prefix": "i18next::pluralResolver:",
                },
                "options": Object {
                  "compatibilityJSON": undefined,
                  "prepend": "_",
                  "simplifyPluralSuffix": true,
                },
                "rules": Object {
                  "ach": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "af": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "ak": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "am": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "an": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "ar": Object {
                    "numbers": Array [
                      0,
                      1,
                      2,
                      3,
                      11,
                      100,
                    ],
                    "plurals": [Function],
                  },
                  "arn": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "ast": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "ay": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "az": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "be": Object {
                    "numbers": Array [
                      1,
                      2,
                      5,
                    ],
                    "plurals": [Function],
                  },
                  "bg": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "bn": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "bo": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "br": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "bs": Object {
                    "numbers": Array [
                      1,
                      2,
                      5,
                    ],
                    "plurals": [Function],
                  },
                  "ca": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "cgg": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "cnr": Object {
                    "numbers": Array [
                      1,
                      2,
                      5,
                    ],
                    "plurals": [Function],
                  },
                  "cs": Object {
                    "numbers": Array [
                      1,
                      2,
                      5,
                    ],
                    "plurals": [Function],
                  },
                  "csb": Object {
                    "numbers": Array [
                      1,
                      2,
                      5,
                    ],
                    "plurals": [Function],
                  },
                  "cy": Object {
                    "numbers": Array [
                      1,
                      2,
                      3,
                      8,
                    ],
                    "plurals": [Function],
                  },
                  "da": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "de": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "dev": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "dz": Object {
                    "numbers": Array [
                      1,
                      2,
                      5,
                    ],
                    "plurals": [Function],
                  },
                  "el": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "en": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "eo": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "es": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "et": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "eu": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "fa": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "fi": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "fil": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "fo": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "fr": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "fur": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "fy": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "ga": Object {
                    "numbers": Array [
                      1,
                      2,
                      3,
                      7,
                      11,
                    ],
                    "plurals": [Function],
                  },
                  "gd": Object {
                    "numbers": Array [
                      1,
                      2,
                      3,
                      20,
                    ],
                    "plurals": [Function],
                  },
                  "gl": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "gu": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "gun": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "ha": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "he": Object {
                    "numbers": Array [
                      1,
                      2,
                      20,
                      21,
                    ],
                    "plurals": [Function],
                  },
                  "hi": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "hr": Object {
                    "numbers": Array [
                      1,
                      2,
                      5,
                    ],
                    "plurals": [Function],
                  },
                  "ht": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "hu": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "hy": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "ia": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "id": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "is": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "it": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "iw": Object {
                    "numbers": Array [
                      1,
                      2,
                      20,
                      21,
                    ],
                    "plurals": [Function],
                  },
                  "ja": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "jbo": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "jv": Object {
                    "numbers": Array [
                      0,
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "ka": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "kk": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "km": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "kn": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "ko": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "ku": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "kw": Object {
                    "numbers": Array [
                      1,
                      2,
                      3,
                      4,
                    ],
                    "plurals": [Function],
                  },
                  "ky": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "lb": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "ln": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "lo": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "lt": Object {
                    "numbers": Array [
                      1,
                      2,
                      10,
                    ],
                    "plurals": [Function],
                  },
                  "lv": Object {
                    "numbers": Array [
                      1,
                      2,
                      0,
                    ],
                    "plurals": [Function],
                  },
                  "mai": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "mfe": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "mg": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "mi": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "mk": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "ml": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "mn": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "mnk": Object {
                    "numbers": Array [
                      0,
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "mr": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "ms": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "mt": Object {
                    "numbers": Array [
                      1,
                      2,
                      11,
                      20,
                    ],
                    "plurals": [Function],
                  },
                  "nah": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "nap": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "nb": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "ne": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "nl": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "nn": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "no": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "nso": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "oc": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "or": Object {
                    "numbers": Array [
                      2,
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "pa": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "pap": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "pl": Object {
                    "numbers": Array [
                      1,
                      2,
                      5,
                    ],
                    "plurals": [Function],
                  },
                  "pms": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "ps": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "pt": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "pt-BR": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "pt-PT": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "rm": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "ro": Object {
                    "numbers": Array [
                      1,
                      2,
                      20,
                    ],
                    "plurals": [Function],
                  },
                  "ru": Object {
                    "numbers": Array [
                      1,
                      2,
                      5,
                    ],
                    "plurals": [Function],
                  },
                  "sah": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "sco": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "se": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "si": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "sk": Object {
                    "numbers": Array [
                      1,
                      2,
                      5,
                    ],
                    "plurals": [Function],
                  },
                  "sl": Object {
                    "numbers": Array [
                      5,
                      1,
                      2,
                      3,
                    ],
                    "plurals": [Function],
                  },
                  "so": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "son": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "sq": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "sr": Object {
                    "numbers": Array [
                      1,
                      2,
                      5,
                    ],
                    "plurals": [Function],
                  },
                  "su": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "sv": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "sw": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "ta": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "te": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "tg": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "th": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "ti": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "tk": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "tr": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "tt": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "ug": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "uk": Object {
                    "numbers": Array [
                      1,
                      2,
                      5,
                    ],
                    "plurals": [Function],
                  },
                  "ur": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "uz": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "vi": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "wa": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "wo": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "yo": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "zh": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                },
              },
              "resourceStore": Object {
                "de": Object {},
                "en": Object {},
                "fr": Object {},
                "ru": Object {},
                "uz": Object {},
              },
              "utils": Object {
                "hasLoadedNamespace": [Function],
              },
            },
            "store": Object {
              "de": Object {},
              "en": Object {},
              "fr": Object {},
              "ru": Object {},
              "uz": Object {},
            },
            "translator": Translator {
              "backendConnector": Connector {
                "backend": null,
                "languageUtils": LanguageUtil {
                  "logger": Logger {
                    "debug": true,
                    "logger": Object {
                      "error": [Function],
                      "log": [Function],
                      "output": [Function],
                      "type": "logger",
                      "warn": [Function],
                    },
                    "options": Object {
                      "appendNamespaceToCIMode": false,
                      "appendNamespaceToMissingKey": false,
                      "contextSeparator": "_",
                      "debug": true,
                      "defaultNS": "translation",
                      "fallbackLng": Array [
                        "en",
                      ],
                      "fallbackNS": false,
                      "initImmediate": false,
                      "interpolation": Object {
                        "escapeValue": false,
                      },
                      "joinArrays": false,
                      "keySeparator": ".",
                      "load": "all",
                      "missingInterpolationHandler": false,
                      "missingKeyHandler": false,
                      "nonExplicitSupportedLngs": true,
                      "nonExplicitWhitelist": false,
                      "ns": Array [],
                      "nsSeparator": ":",
                      "overloadTranslationOptionHandler": [Function],
                      "parseMissingKeyHandler": false,
                      "partialBundledLanguages": false,
                      "pluralSeparator": "_",
                      "postProcess": false,
                      "postProcessPassResolved": false,
                      "prefix": "i18next::languageUtils:",
                      "preload": false,
                      "resources": Object {
                        "de": Object {},
                        "en": Object {},
                        "fr": Object {},
                        "ru": Object {},
                        "uz": Object {},
                      },
                      "returnEmptyString": true,
                      "returnNull": true,
                      "returnObjects": false,
                      "returnedObjectHandler": false,
                      "saveMissing": false,
                      "saveMissingPlurals": true,
                      "saveMissingTo": "fallback",
                      "simplifyPluralSuffix": true,
                      "supportedLngs": Array [
                        "de",
                        "en",
                        "fr",
                        "ru",
                        "uz",
                        "cimode",
                      ],
                      "updateMissing": false,
                      "whitelist": false,
                    },
                    "prefix": "i18next::languageUtils:",
                  },
                  "options": Object {
                    "appendNamespaceToCIMode": false,
                    "appendNamespaceToMissingKey": false,
                    "contextSeparator": "_",
                    "debug": true,
                    "defaultNS": "translation",
                    "fallbackLng": Array [
                      "en",
                    ],
                    "fallbackNS": false,
                    "initImmediate": false,
                    "interpolation": Object {
                      "escapeValue": false,
                    },
                    "joinArrays": false,
                    "keySeparator": ".",
                    "load": "all",
                    "missingInterpolationHandler": false,
                    "missingKeyHandler": false,
                    "nonExplicitSupportedLngs": true,
                    "nonExplicitWhitelist": false,
                    "ns": Array [],
                    "nsSeparator": ":",
                    "overloadTranslationOptionHandler": [Function],
                    "parseMissingKeyHandler": false,
                    "partialBundledLanguages": false,
                    "pluralSeparator": "_",
                    "postProcess": false,
                    "postProcessPassResolved": false,
                    "preload": false,
                    "resources": Object {
                      "de": Object {},
                      "en": Object {},
                      "fr": Object {},
                      "ru": Object {},
                      "uz": Object {},
                    },
                    "returnEmptyString": true,
                    "returnNull": true,
                    "returnObjects": false,
                    "returnedObjectHandler": false,
                    "saveMissing": false,
                    "saveMissingPlurals": true,
                    "saveMissingTo": "fallback",
                    "simplifyPluralSuffix": true,
                    "supportedLngs": Array [
                      "de",
                      "en",
                      "fr",
                      "ru",
                      "uz",
                      "cimode",
                    ],
                    "updateMissing": false,
                    "whitelist": false,
                  },
                  "supportedLngs": Array [
                    "de",
                    "en",
                    "fr",
                    "ru",
                    "uz",
                    "cimode",
                  ],
                  "whitelist": Array [
                    "de",
                    "en",
                    "fr",
                    "ru",
                    "uz",
                    "cimode",
                  ],
                },
                "logger": Logger {
                  "debug": true,
                  "logger": Object {
                    "error": [Function],
                    "log": [Function],
                    "output": [Function],
                    "type": "logger",
                    "warn": [Function],
                  },
                  "options": Object {
                    "appendNamespaceToCIMode": false,
                    "appendNamespaceToMissingKey": false,
                    "contextSeparator": "_",
                    "debug": true,
                    "defaultNS": "translation",
                    "fallbackLng": Array [
                      "en",
                    ],
                    "fallbackNS": false,
                    "initImmediate": false,
                    "interpolation": Object {
                      "escapeValue": false,
                    },
                    "joinArrays": false,
                    "keySeparator": ".",
                    "load": "all",
                    "missingInterpolationHandler": false,
                    "missingKeyHandler": false,
                    "nonExplicitSupportedLngs": true,
                    "nonExplicitWhitelist": false,
                    "ns": Array [],
                    "nsSeparator": ":",
                    "overloadTranslationOptionHandler": [Function],
                    "parseMissingKeyHandler": false,
                    "partialBundledLanguages": false,
                    "pluralSeparator": "_",
                    "postProcess": false,
                    "postProcessPassResolved": false,
                    "prefix": "i18next::backendConnector:",
                    "preload": false,
                    "resources": Object {
                      "de": Object {},
                      "en": Object {},
                      "fr": Object {},
                      "ru": Object {},
                      "uz": Object {},
                    },
                    "returnEmptyString": true,
                    "returnNull": true,
                    "returnObjects": false,
                    "returnedObjectHandler": false,
                    "saveMissing": false,
                    "saveMissingPlurals": true,
                    "saveMissingTo": "fallback",
                    "simplifyPluralSuffix": true,
                    "supportedLngs": Array [
                      "de",
                      "en",
                      "fr",
                      "ru",
                      "uz",
                      "cimode",
                    ],
                    "updateMissing": false,
                    "whitelist": false,
                  },
                  "prefix": "i18next::backendConnector:",
                },
                "observers": Object {
                  "*": Array [
                    [Function],
                  ],
                },
                "options": Object {
                  "appendNamespaceToCIMode": false,
                  "appendNamespaceToMissingKey": false,
                  "contextSeparator": "_",
                  "debug": true,
                  "defaultNS": "translation",
                  "fallbackLng": Array [
                    "en",
                  ],
                  "fallbackNS": false,
                  "initImmediate": false,
                  "interpolation": Object {
                    "escapeValue": false,
                  },
                  "joinArrays": false,
                  "keySeparator": ".",
                  "load": "all",
                  "missingInterpolationHandler": false,
                  "missingKeyHandler": false,
                  "nonExplicitSupportedLngs": true,
                  "nonExplicitWhitelist": false,
                  "ns": Array [],
                  "nsSeparator": ":",
                  "overloadTranslationOptionHandler": [Function],
                  "parseMissingKeyHandler": false,
                  "partialBundledLanguages": false,
                  "pluralSeparator": "_",
                  "postProcess": false,
                  "postProcessPassResolved": false,
                  "preload": false,
                  "resources": Object {
                    "de": Object {},
                    "en": Object {},
                    "fr": Object {},
                    "ru": Object {},
                    "uz": Object {},
                  },
                  "returnEmptyString": true,
                  "returnNull": true,
                  "returnObjects": false,
                  "returnedObjectHandler": false,
                  "saveMissing": false,
                  "saveMissingPlurals": true,
                  "saveMissingTo": "fallback",
                  "simplifyPluralSuffix": true,
                  "supportedLngs": Array [
                    "de",
                    "en",
                    "fr",
                    "ru",
                    "uz",
                    "cimode",
                  ],
                  "updateMissing": false,
                  "whitelist": false,
                },
                "queue": Array [],
                "services": Object {
                  "backendConnector": [Circular],
                  "interpolator": Interpolator {
                    "alwaysFormat": false,
                    "escape": [Function],
                    "escapeValue": false,
                    "format": [Function],
                    "formatSeparator": ",",
                    "logger": Logger {
                      "debug": true,
                      "logger": Object {
                        "error": [Function],
                        "log": [Function],
                        "output": [Function],
                        "type": "logger",
                        "warn": [Function],
                      },
                      "options": Object {
                        "appendNamespaceToCIMode": false,
                        "appendNamespaceToMissingKey": false,
                        "contextSeparator": "_",
                        "debug": true,
                        "defaultNS": "translation",
                        "fallbackLng": Array [
                          "en",
                        ],
                        "fallbackNS": false,
                        "initImmediate": false,
                        "interpolation": Object {
                          "escapeValue": false,
                        },
                        "joinArrays": false,
                        "keySeparator": ".",
                        "load": "all",
                        "missingInterpolationHandler": false,
                        "missingKeyHandler": false,
                        "nonExplicitSupportedLngs": true,
                        "nonExplicitWhitelist": false,
                        "ns": Array [],
                        "nsSeparator": ":",
                        "overloadTranslationOptionHandler": [Function],
                        "parseMissingKeyHandler": false,
                        "partialBundledLanguages": false,
                        "pluralSeparator": "_",
                        "postProcess": false,
                        "postProcessPassResolved": false,
                        "prefix": "i18next::interpolator:",
                        "preload": false,
                        "resources": Object {
                          "de": Object {},
                          "en": Object {},
                          "fr": Object {},
                          "ru": Object {},
                          "uz": Object {},
                        },
                        "returnEmptyString": true,
                        "returnNull": true,
                        "returnObjects": false,
                        "returnedObjectHandler": false,
                        "saveMissing": false,
                        "saveMissingPlurals": true,
                        "saveMissingTo": "fallback",
                        "simplifyPluralSuffix": true,
                        "supportedLngs": Array [
                          "de",
                          "en",
                          "fr",
                          "ru",
                          "uz",
                          "cimode",
                        ],
                        "updateMissing": false,
                        "whitelist": false,
                      },
                      "prefix": "i18next::interpolator:",
                    },
                    "maxReplaces": 1000,
                    "nestingOptionsSeparator": ",",
                    "nestingPrefix": "\\\\$t\\\\(",
                    "nestingRegexp": /\\\\\\$t\\\\\\(\\(\\.\\+\\?\\)\\\\\\)/g,
                    "nestingSuffix": "\\\\)",
                    "options": Object {
                      "appendNamespaceToCIMode": false,
                      "appendNamespaceToMissingKey": false,
                      "contextSeparator": "_",
                      "debug": true,
                      "defaultNS": "translation",
                      "fallbackLng": Array [
                        "en",
                      ],
                      "fallbackNS": false,
                      "initImmediate": false,
                      "interpolation": Object {
                        "escapeValue": false,
                      },
                      "joinArrays": false,
                      "keySeparator": ".",
                      "load": "all",
                      "missingInterpolationHandler": false,
                      "missingKeyHandler": false,
                      "nonExplicitSupportedLngs": true,
                      "nonExplicitWhitelist": false,
                      "ns": Array [],
                      "nsSeparator": ":",
                      "overloadTranslationOptionHandler": [Function],
                      "parseMissingKeyHandler": false,
                      "partialBundledLanguages": false,
                      "pluralSeparator": "_",
                      "postProcess": false,
                      "postProcessPassResolved": false,
                      "preload": false,
                      "resources": Object {
                        "de": Object {},
                        "en": Object {},
                        "fr": Object {},
                        "ru": Object {},
                        "uz": Object {},
                      },
                      "returnEmptyString": true,
                      "returnNull": true,
                      "returnObjects": false,
                      "returnedObjectHandler": false,
                      "saveMissing": false,
                      "saveMissingPlurals": true,
                      "saveMissingTo": "fallback",
                      "simplifyPluralSuffix": true,
                      "supportedLngs": Array [
                        "de",
                        "en",
                        "fr",
                        "ru",
                        "uz",
                        "cimode",
                      ],
                      "updateMissing": false,
                      "whitelist": false,
                    },
                    "prefix": "{{",
                    "regexp": /\\{\\{\\(\\.\\+\\?\\)\\}\\}/g,
                    "regexpUnescape": /\\{\\{-\\(\\.\\+\\?\\)\\}\\}/g,
                    "suffix": "}}",
                    "unescapePrefix": "-",
                    "unescapeSuffix": "",
                    "useRawValueToEscape": false,
                  },
                  "languageDetector": Browser {
                    "detectors": Object {
                      "cookie": Object {
                        "cacheUserLanguage": [Function],
                        "lookup": [Function],
                        "name": "cookie",
                      },
                      "htmlTag": Object {
                        "lookup": [Function],
                        "name": "htmlTag",
                      },
                      "localStorage": Object {
                        "cacheUserLanguage": [Function],
                        "lookup": [Function],
                        "name": "localStorage",
                      },
                      "navigator": Object {
                        "lookup": [Function],
                        "name": "navigator",
                      },
                      "path": Object {
                        "lookup": [Function],
                        "name": "path",
                      },
                      "querystring": Object {
                        "lookup": [Function],
                        "name": "querystring",
                      },
                      "sessionStorage": Object {
                        "cacheUserLanguage": [Function],
                        "lookup": [Function],
                        "name": "sessionStorage",
                      },
                      "subdomain": Object {
                        "lookup": [Function],
                        "name": "subdomain",
                      },
                    },
                    "i18nOptions": Object {
                      "appendNamespaceToCIMode": false,
                      "appendNamespaceToMissingKey": false,
                      "contextSeparator": "_",
                      "debug": true,
                      "defaultNS": "translation",
                      "fallbackLng": Array [
                        "en",
                      ],
                      "fallbackNS": false,
                      "initImmediate": false,
                      "interpolation": Object {
                        "escapeValue": false,
                      },
                      "joinArrays": false,
                      "keySeparator": ".",
                      "load": "all",
                      "missingInterpolationHandler": false,
                      "missingKeyHandler": false,
                      "nonExplicitSupportedLngs": true,
                      "nonExplicitWhitelist": false,
                      "ns": Array [],
                      "nsSeparator": ":",
                      "overloadTranslationOptionHandler": [Function],
                      "parseMissingKeyHandler": false,
                      "partialBundledLanguages": false,
                      "pluralSeparator": "_",
                      "postProcess": false,
                      "postProcessPassResolved": false,
                      "preload": false,
                      "resources": Object {
                        "de": Object {},
                        "en": Object {},
                        "fr": Object {},
                        "ru": Object {},
                        "uz": Object {},
                      },
                      "returnEmptyString": true,
                      "returnNull": true,
                      "returnObjects": false,
                      "returnedObjectHandler": false,
                      "saveMissing": false,
                      "saveMissingPlurals": true,
                      "saveMissingTo": "fallback",
                      "simplifyPluralSuffix": true,
                      "supportedLngs": Array [
                        "de",
                        "en",
                        "fr",
                        "ru",
                        "uz",
                        "cimode",
                      ],
                      "updateMissing": false,
                      "whitelist": false,
                    },
                    "options": Object {
                      "caches": Array [
                        "localStorage",
                      ],
                      "excludeCacheFor": Array [
                        "cimode",
                      ],
                      "lookupCookie": "i18next",
                      "lookupLocalStorage": "i18nextLng",
                      "lookupQuerystring": "lng",
                      "lookupSessionStorage": "i18nextLng",
                      "order": Array [
                        "querystring",
                        "cookie",
                        "localStorage",
                        "sessionStorage",
                        "navigator",
                        "htmlTag",
                      ],
                    },
                    "services": [Circular],
                    "type": "languageDetector",
                  },
                  "languageUtils": LanguageUtil {
                    "logger": Logger {
                      "debug": true,
                      "logger": Object {
                        "error": [Function],
                        "log": [Function],
                        "output": [Function],
                        "type": "logger",
                        "warn": [Function],
                      },
                      "options": Object {
                        "appendNamespaceToCIMode": false,
                        "appendNamespaceToMissingKey": false,
                        "contextSeparator": "_",
                        "debug": true,
                        "defaultNS": "translation",
                        "fallbackLng": Array [
                          "en",
                        ],
                        "fallbackNS": false,
                        "initImmediate": false,
                        "interpolation": Object {
                          "escapeValue": false,
                        },
                        "joinArrays": false,
                        "keySeparator": ".",
                        "load": "all",
                        "missingInterpolationHandler": false,
                        "missingKeyHandler": false,
                        "nonExplicitSupportedLngs": true,
                        "nonExplicitWhitelist": false,
                        "ns": Array [],
                        "nsSeparator": ":",
                        "overloadTranslationOptionHandler": [Function],
                        "parseMissingKeyHandler": false,
                        "partialBundledLanguages": false,
                        "pluralSeparator": "_",
                        "postProcess": false,
                        "postProcessPassResolved": false,
                        "prefix": "i18next::languageUtils:",
                        "preload": false,
                        "resources": Object {
                          "de": Object {},
                          "en": Object {},
                          "fr": Object {},
                          "ru": Object {},
                          "uz": Object {},
                        },
                        "returnEmptyString": true,
                        "returnNull": true,
                        "returnObjects": false,
                        "returnedObjectHandler": false,
                        "saveMissing": false,
                        "saveMissingPlurals": true,
                        "saveMissingTo": "fallback",
                        "simplifyPluralSuffix": true,
                        "supportedLngs": Array [
                          "de",
                          "en",
                          "fr",
                          "ru",
                          "uz",
                          "cimode",
                        ],
                        "updateMissing": false,
                        "whitelist": false,
                      },
                      "prefix": "i18next::languageUtils:",
                    },
                    "options": Object {
                      "appendNamespaceToCIMode": false,
                      "appendNamespaceToMissingKey": false,
                      "contextSeparator": "_",
                      "debug": true,
                      "defaultNS": "translation",
                      "fallbackLng": Array [
                        "en",
                      ],
                      "fallbackNS": false,
                      "initImmediate": false,
                      "interpolation": Object {
                        "escapeValue": false,
                      },
                      "joinArrays": false,
                      "keySeparator": ".",
                      "load": "all",
                      "missingInterpolationHandler": false,
                      "missingKeyHandler": false,
                      "nonExplicitSupportedLngs": true,
                      "nonExplicitWhitelist": false,
                      "ns": Array [],
                      "nsSeparator": ":",
                      "overloadTranslationOptionHandler": [Function],
                      "parseMissingKeyHandler": false,
                      "partialBundledLanguages": false,
                      "pluralSeparator": "_",
                      "postProcess": false,
                      "postProcessPassResolved": false,
                      "preload": false,
                      "resources": Object {
                        "de": Object {},
                        "en": Object {},
                        "fr": Object {},
                        "ru": Object {},
                        "uz": Object {},
                      },
                      "returnEmptyString": true,
                      "returnNull": true,
                      "returnObjects": false,
                      "returnedObjectHandler": false,
                      "saveMissing": false,
                      "saveMissingPlurals": true,
                      "saveMissingTo": "fallback",
                      "simplifyPluralSuffix": true,
                      "supportedLngs": Array [
                        "de",
                        "en",
                        "fr",
                        "ru",
                        "uz",
                        "cimode",
                      ],
                      "updateMissing": false,
                      "whitelist": false,
                    },
                    "supportedLngs": Array [
                      "de",
                      "en",
                      "fr",
                      "ru",
                      "uz",
                      "cimode",
                    ],
                    "whitelist": Array [
                      "de",
                      "en",
                      "fr",
                      "ru",
                      "uz",
                      "cimode",
                    ],
                  },
                  "logger": Logger {
                    "debug": true,
                    "logger": Object {
                      "error": [Function],
                      "log": [Function],
                      "output": [Function],
                      "type": "logger",
                      "warn": [Function],
                    },
                    "options": Object {
                      "appendNamespaceToCIMode": false,
                      "appendNamespaceToMissingKey": false,
                      "contextSeparator": "_",
                      "debug": true,
                      "defaultNS": "translation",
                      "fallbackLng": Array [
                        "en",
                      ],
                      "fallbackNS": false,
                      "initImmediate": false,
                      "interpolation": Object {
                        "escapeValue": false,
                      },
                      "joinArrays": false,
                      "keySeparator": ".",
                      "load": "all",
                      "missingInterpolationHandler": false,
                      "missingKeyHandler": false,
                      "nonExplicitSupportedLngs": true,
                      "nonExplicitWhitelist": false,
                      "ns": Array [],
                      "nsSeparator": ":",
                      "overloadTranslationOptionHandler": [Function],
                      "parseMissingKeyHandler": false,
                      "partialBundledLanguages": false,
                      "pluralSeparator": "_",
                      "postProcess": false,
                      "postProcessPassResolved": false,
                      "preload": false,
                      "resources": Object {
                        "de": Object {},
                        "en": Object {},
                        "fr": Object {},
                        "ru": Object {},
                        "uz": Object {},
                      },
                      "returnEmptyString": true,
                      "returnNull": true,
                      "returnObjects": false,
                      "returnedObjectHandler": false,
                      "saveMissing": false,
                      "saveMissingPlurals": true,
                      "saveMissingTo": "fallback",
                      "simplifyPluralSuffix": true,
                      "supportedLngs": Array [
                        "de",
                        "en",
                        "fr",
                        "ru",
                        "uz",
                        "cimode",
                      ],
                      "updateMissing": false,
                      "whitelist": false,
                    },
                    "prefix": "i18next:",
                  },
                  "pluralResolver": PluralResolver {
                    "languageUtils": LanguageUtil {
                      "logger": Logger {
                        "debug": true,
                        "logger": Object {
                          "error": [Function],
                          "log": [Function],
                          "output": [Function],
                          "type": "logger",
                          "warn": [Function],
                        },
                        "options": Object {
                          "appendNamespaceToCIMode": false,
                          "appendNamespaceToMissingKey": false,
                          "contextSeparator": "_",
                          "debug": true,
                          "defaultNS": "translation",
                          "fallbackLng": Array [
                            "en",
                          ],
                          "fallbackNS": false,
                          "initImmediate": false,
                          "interpolation": Object {
                            "escapeValue": false,
                          },
                          "joinArrays": false,
                          "keySeparator": ".",
                          "load": "all",
                          "missingInterpolationHandler": false,
                          "missingKeyHandler": false,
                          "nonExplicitSupportedLngs": true,
                          "nonExplicitWhitelist": false,
                          "ns": Array [],
                          "nsSeparator": ":",
                          "overloadTranslationOptionHandler": [Function],
                          "parseMissingKeyHandler": false,
                          "partialBundledLanguages": false,
                          "pluralSeparator": "_",
                          "postProcess": false,
                          "postProcessPassResolved": false,
                          "prefix": "i18next::languageUtils:",
                          "preload": false,
                          "resources": Object {
                            "de": Object {},
                            "en": Object {},
                            "fr": Object {},
                            "ru": Object {},
                            "uz": Object {},
                          },
                          "returnEmptyString": true,
                          "returnNull": true,
                          "returnObjects": false,
                          "returnedObjectHandler": false,
                          "saveMissing": false,
                          "saveMissingPlurals": true,
                          "saveMissingTo": "fallback",
                          "simplifyPluralSuffix": true,
                          "supportedLngs": Array [
                            "de",
                            "en",
                            "fr",
                            "ru",
                            "uz",
                            "cimode",
                          ],
                          "updateMissing": false,
                          "whitelist": false,
                        },
                        "prefix": "i18next::languageUtils:",
                      },
                      "options": Object {
                        "appendNamespaceToCIMode": false,
                        "appendNamespaceToMissingKey": false,
                        "contextSeparator": "_",
                        "debug": true,
                        "defaultNS": "translation",
                        "fallbackLng": Array [
                          "en",
                        ],
                        "fallbackNS": false,
                        "initImmediate": false,
                        "interpolation": Object {
                          "escapeValue": false,
                        },
                        "joinArrays": false,
                        "keySeparator": ".",
                        "load": "all",
                        "missingInterpolationHandler": false,
                        "missingKeyHandler": false,
                        "nonExplicitSupportedLngs": true,
                        "nonExplicitWhitelist": false,
                        "ns": Array [],
                        "nsSeparator": ":",
                        "overloadTranslationOptionHandler": [Function],
                        "parseMissingKeyHandler": false,
                        "partialBundledLanguages": false,
                        "pluralSeparator": "_",
                        "postProcess": false,
                        "postProcessPassResolved": false,
                        "preload": false,
                        "resources": Object {
                          "de": Object {},
                          "en": Object {},
                          "fr": Object {},
                          "ru": Object {},
                          "uz": Object {},
                        },
                        "returnEmptyString": true,
                        "returnNull": true,
                        "returnObjects": false,
                        "returnedObjectHandler": false,
                        "saveMissing": false,
                        "saveMissingPlurals": true,
                        "saveMissingTo": "fallback",
                        "simplifyPluralSuffix": true,
                        "supportedLngs": Array [
                          "de",
                          "en",
                          "fr",
                          "ru",
                          "uz",
                          "cimode",
                        ],
                        "updateMissing": false,
                        "whitelist": false,
                      },
                      "supportedLngs": Array [
                        "de",
                        "en",
                        "fr",
                        "ru",
                        "uz",
                        "cimode",
                      ],
                      "whitelist": Array [
                        "de",
                        "en",
                        "fr",
                        "ru",
                        "uz",
                        "cimode",
                      ],
                    },
                    "logger": Logger {
                      "debug": true,
                      "logger": Object {
                        "error": [Function],
                        "log": [Function],
                        "output": [Function],
                        "type": "logger",
                        "warn": [Function],
                      },
                      "options": Object {
                        "appendNamespaceToCIMode": false,
                        "appendNamespaceToMissingKey": false,
                        "contextSeparator": "_",
                        "debug": true,
                        "defaultNS": "translation",
                        "fallbackLng": Array [
                          "en",
                        ],
                        "fallbackNS": false,
                        "initImmediate": false,
                        "interpolation": Object {
                          "escapeValue": false,
                        },
                        "joinArrays": false,
                        "keySeparator": ".",
                        "load": "all",
                        "missingInterpolationHandler": false,
                        "missingKeyHandler": false,
                        "nonExplicitSupportedLngs": true,
                        "nonExplicitWhitelist": false,
                        "ns": Array [],
                        "nsSeparator": ":",
                        "overloadTranslationOptionHandler": [Function],
                        "parseMissingKeyHandler": false,
                        "partialBundledLanguages": false,
                        "pluralSeparator": "_",
                        "postProcess": false,
                        "postProcessPassResolved": false,
                        "prefix": "i18next::pluralResolver:",
                        "preload": false,
                        "resources": Object {
                          "de": Object {},
                          "en": Object {},
                          "fr": Object {},
                          "ru": Object {},
                          "uz": Object {},
                        },
                        "returnEmptyString": true,
                        "returnNull": true,
                        "returnObjects": false,
                        "returnedObjectHandler": false,
                        "saveMissing": false,
                        "saveMissingPlurals": true,
                        "saveMissingTo": "fallback",
                        "simplifyPluralSuffix": true,
                        "supportedLngs": Array [
                          "de",
                          "en",
                          "fr",
                          "ru",
                          "uz",
                          "cimode",
                        ],
                        "updateMissing": false,
                        "whitelist": false,
                      },
                      "prefix": "i18next::pluralResolver:",
                    },
                    "options": Object {
                      "compatibilityJSON": undefined,
                      "prepend": "_",
                      "simplifyPluralSuffix": true,
                    },
                    "rules": Object {
                      "ach": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "af": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "ak": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "am": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "an": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "ar": Object {
                        "numbers": Array [
                          0,
                          1,
                          2,
                          3,
                          11,
                          100,
                        ],
                        "plurals": [Function],
                      },
                      "arn": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "ast": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "ay": Object {
                        "numbers": Array [
                          1,
                        ],
                        "plurals": [Function],
                      },
                      "az": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "be": Object {
                        "numbers": Array [
                          1,
                          2,
                          5,
                        ],
                        "plurals": [Function],
                      },
                      "bg": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "bn": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "bo": Object {
                        "numbers": Array [
                          1,
                        ],
                        "plurals": [Function],
                      },
                      "br": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "bs": Object {
                        "numbers": Array [
                          1,
                          2,
                          5,
                        ],
                        "plurals": [Function],
                      },
                      "ca": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "cgg": Object {
                        "numbers": Array [
                          1,
                        ],
                        "plurals": [Function],
                      },
                      "cnr": Object {
                        "numbers": Array [
                          1,
                          2,
                          5,
                        ],
                        "plurals": [Function],
                      },
                      "cs": Object {
                        "numbers": Array [
                          1,
                          2,
                          5,
                        ],
                        "plurals": [Function],
                      },
                      "csb": Object {
                        "numbers": Array [
                          1,
                          2,
                          5,
                        ],
                        "plurals": [Function],
                      },
                      "cy": Object {
                        "numbers": Array [
                          1,
                          2,
                          3,
                          8,
                        ],
                        "plurals": [Function],
                      },
                      "da": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "de": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "dev": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "dz": Object {
                        "numbers": Array [
                          1,
                          2,
                          5,
                        ],
                        "plurals": [Function],
                      },
                      "el": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "en": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "eo": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "es": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "et": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "eu": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "fa": Object {
                        "numbers": Array [
                          1,
                        ],
                        "plurals": [Function],
                      },
                      "fi": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "fil": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "fo": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "fr": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "fur": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "fy": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "ga": Object {
                        "numbers": Array [
                          1,
                          2,
                          3,
                          7,
                          11,
                        ],
                        "plurals": [Function],
                      },
                      "gd": Object {
                        "numbers": Array [
                          1,
                          2,
                          3,
                          20,
                        ],
                        "plurals": [Function],
                      },
                      "gl": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "gu": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "gun": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "ha": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "he": Object {
                        "numbers": Array [
                          1,
                          2,
                          20,
                          21,
                        ],
                        "plurals": [Function],
                      },
                      "hi": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "hr": Object {
                        "numbers": Array [
                          1,
                          2,
                          5,
                        ],
                        "plurals": [Function],
                      },
                      "ht": Object {
                        "numbers": Array [
                          1,
                        ],
                        "plurals": [Function],
                      },
                      "hu": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "hy": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "ia": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "id": Object {
                        "numbers": Array [
                          1,
                        ],
                        "plurals": [Function],
                      },
                      "is": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "it": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "iw": Object {
                        "numbers": Array [
                          1,
                          2,
                          20,
                          21,
                        ],
                        "plurals": [Function],
                      },
                      "ja": Object {
                        "numbers": Array [
                          1,
                        ],
                        "plurals": [Function],
                      },
                      "jbo": Object {
                        "numbers": Array [
                          1,
                        ],
                        "plurals": [Function],
                      },
                      "jv": Object {
                        "numbers": Array [
                          0,
                          1,
                        ],
                        "plurals": [Function],
                      },
                      "ka": Object {
                        "numbers": Array [
                          1,
                        ],
                        "plurals": [Function],
                      },
                      "kk": Object {
                        "numbers": Array [
                          1,
                        ],
                        "plurals": [Function],
                      },
                      "km": Object {
                        "numbers": Array [
                          1,
                        ],
                        "plurals": [Function],
                      },
                      "kn": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "ko": Object {
                        "numbers": Array [
                          1,
                        ],
                        "plurals": [Function],
                      },
                      "ku": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "kw": Object {
                        "numbers": Array [
                          1,
                          2,
                          3,
                          4,
                        ],
                        "plurals": [Function],
                      },
                      "ky": Object {
                        "numbers": Array [
                          1,
                        ],
                        "plurals": [Function],
                      },
                      "lb": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "ln": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "lo": Object {
                        "numbers": Array [
                          1,
                        ],
                        "plurals": [Function],
                      },
                      "lt": Object {
                        "numbers": Array [
                          1,
                          2,
                          10,
                        ],
                        "plurals": [Function],
                      },
                      "lv": Object {
                        "numbers": Array [
                          1,
                          2,
                          0,
                        ],
                        "plurals": [Function],
                      },
                      "mai": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "mfe": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "mg": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "mi": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "mk": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "ml": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "mn": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "mnk": Object {
                        "numbers": Array [
                          0,
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "mr": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "ms": Object {
                        "numbers": Array [
                          1,
                        ],
                        "plurals": [Function],
                      },
                      "mt": Object {
                        "numbers": Array [
                          1,
                          2,
                          11,
                          20,
                        ],
                        "plurals": [Function],
                      },
                      "nah": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "nap": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "nb": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "ne": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "nl": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "nn": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "no": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "nso": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "oc": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "or": Object {
                        "numbers": Array [
                          2,
                          1,
                        ],
                        "plurals": [Function],
                      },
                      "pa": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "pap": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "pl": Object {
                        "numbers": Array [
                          1,
                          2,
                          5,
                        ],
                        "plurals": [Function],
                      },
                      "pms": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "ps": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "pt": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "pt-BR": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "pt-PT": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "rm": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "ro": Object {
                        "numbers": Array [
                          1,
                          2,
                          20,
                        ],
                        "plurals": [Function],
                      },
                      "ru": Object {
                        "numbers": Array [
                          1,
                          2,
                          5,
                        ],
                        "plurals": [Function],
                      },
                      "sah": Object {
                        "numbers": Array [
                          1,
                        ],
                        "plurals": [Function],
                      },
                      "sco": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "se": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "si": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "sk": Object {
                        "numbers": Array [
                          1,
                          2,
                          5,
                        ],
                        "plurals": [Function],
                      },
                      "sl": Object {
                        "numbers": Array [
                          5,
                          1,
                          2,
                          3,
                        ],
                        "plurals": [Function],
                      },
                      "so": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "son": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "sq": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "sr": Object {
                        "numbers": Array [
                          1,
                          2,
                          5,
                        ],
                        "plurals": [Function],
                      },
                      "su": Object {
                        "numbers": Array [
                          1,
                        ],
                        "plurals": [Function],
                      },
                      "sv": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "sw": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "ta": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "te": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "tg": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "th": Object {
                        "numbers": Array [
                          1,
                        ],
                        "plurals": [Function],
                      },
                      "ti": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "tk": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "tr": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "tt": Object {
                        "numbers": Array [
                          1,
                        ],
                        "plurals": [Function],
                      },
                      "ug": Object {
                        "numbers": Array [
                          1,
                        ],
                        "plurals": [Function],
                      },
                      "uk": Object {
                        "numbers": Array [
                          1,
                          2,
                          5,
                        ],
                        "plurals": [Function],
                      },
                      "ur": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "uz": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "vi": Object {
                        "numbers": Array [
                          1,
                        ],
                        "plurals": [Function],
                      },
                      "wa": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "wo": Object {
                        "numbers": Array [
                          1,
                        ],
                        "plurals": [Function],
                      },
                      "yo": Object {
                        "numbers": Array [
                          1,
                          2,
                        ],
                        "plurals": [Function],
                      },
                      "zh": Object {
                        "numbers": Array [
                          1,
                        ],
                        "plurals": [Function],
                      },
                    },
                  },
                  "resourceStore": Object {
                    "de": Object {},
                    "en": Object {},
                    "fr": Object {},
                    "ru": Object {},
                    "uz": Object {},
                  },
                  "utils": Object {
                    "hasLoadedNamespace": [Function],
                  },
                },
                "state": Object {},
                "store": Object {
                  "de": Object {},
                  "en": Object {},
                  "fr": Object {},
                  "ru": Object {},
                  "uz": Object {},
                },
              },
              "interpolator": Interpolator {
                "alwaysFormat": false,
                "escape": [Function],
                "escapeValue": false,
                "format": [Function],
                "formatSeparator": ",",
                "logger": Logger {
                  "debug": true,
                  "logger": Object {
                    "error": [Function],
                    "log": [Function],
                    "output": [Function],
                    "type": "logger",
                    "warn": [Function],
                  },
                  "options": Object {
                    "appendNamespaceToCIMode": false,
                    "appendNamespaceToMissingKey": false,
                    "contextSeparator": "_",
                    "debug": true,
                    "defaultNS": "translation",
                    "fallbackLng": Array [
                      "en",
                    ],
                    "fallbackNS": false,
                    "initImmediate": false,
                    "interpolation": Object {
                      "escapeValue": false,
                    },
                    "joinArrays": false,
                    "keySeparator": ".",
                    "load": "all",
                    "missingInterpolationHandler": false,
                    "missingKeyHandler": false,
                    "nonExplicitSupportedLngs": true,
                    "nonExplicitWhitelist": false,
                    "ns": Array [],
                    "nsSeparator": ":",
                    "overloadTranslationOptionHandler": [Function],
                    "parseMissingKeyHandler": false,
                    "partialBundledLanguages": false,
                    "pluralSeparator": "_",
                    "postProcess": false,
                    "postProcessPassResolved": false,
                    "prefix": "i18next::interpolator:",
                    "preload": false,
                    "resources": Object {
                      "de": Object {},
                      "en": Object {},
                      "fr": Object {},
                      "ru": Object {},
                      "uz": Object {},
                    },
                    "returnEmptyString": true,
                    "returnNull": true,
                    "returnObjects": false,
                    "returnedObjectHandler": false,
                    "saveMissing": false,
                    "saveMissingPlurals": true,
                    "saveMissingTo": "fallback",
                    "simplifyPluralSuffix": true,
                    "supportedLngs": Array [
                      "de",
                      "en",
                      "fr",
                      "ru",
                      "uz",
                      "cimode",
                    ],
                    "updateMissing": false,
                    "whitelist": false,
                  },
                  "prefix": "i18next::interpolator:",
                },
                "maxReplaces": 1000,
                "nestingOptionsSeparator": ",",
                "nestingPrefix": "\\\\$t\\\\(",
                "nestingRegexp": /\\\\\\$t\\\\\\(\\(\\.\\+\\?\\)\\\\\\)/g,
                "nestingSuffix": "\\\\)",
                "options": Object {
                  "appendNamespaceToCIMode": false,
                  "appendNamespaceToMissingKey": false,
                  "contextSeparator": "_",
                  "debug": true,
                  "defaultNS": "translation",
                  "fallbackLng": Array [
                    "en",
                  ],
                  "fallbackNS": false,
                  "initImmediate": false,
                  "interpolation": Object {
                    "escapeValue": false,
                  },
                  "joinArrays": false,
                  "keySeparator": ".",
                  "load": "all",
                  "missingInterpolationHandler": false,
                  "missingKeyHandler": false,
                  "nonExplicitSupportedLngs": true,
                  "nonExplicitWhitelist": false,
                  "ns": Array [],
                  "nsSeparator": ":",
                  "overloadTranslationOptionHandler": [Function],
                  "parseMissingKeyHandler": false,
                  "partialBundledLanguages": false,
                  "pluralSeparator": "_",
                  "postProcess": false,
                  "postProcessPassResolved": false,
                  "preload": false,
                  "resources": Object {
                    "de": Object {},
                    "en": Object {},
                    "fr": Object {},
                    "ru": Object {},
                    "uz": Object {},
                  },
                  "returnEmptyString": true,
                  "returnNull": true,
                  "returnObjects": false,
                  "returnedObjectHandler": false,
                  "saveMissing": false,
                  "saveMissingPlurals": true,
                  "saveMissingTo": "fallback",
                  "simplifyPluralSuffix": true,
                  "supportedLngs": Array [
                    "de",
                    "en",
                    "fr",
                    "ru",
                    "uz",
                    "cimode",
                  ],
                  "updateMissing": false,
                  "whitelist": false,
                },
                "prefix": "{{",
                "regexp": /\\{\\{\\(\\.\\+\\?\\)\\}\\}/g,
                "regexpUnescape": /\\{\\{-\\(\\.\\+\\?\\)\\}\\}/g,
                "suffix": "}}",
                "unescapePrefix": "-",
                "unescapeSuffix": "",
                "useRawValueToEscape": false,
              },
              "language": "en",
              "languageUtils": LanguageUtil {
                "logger": Logger {
                  "debug": true,
                  "logger": Object {
                    "error": [Function],
                    "log": [Function],
                    "output": [Function],
                    "type": "logger",
                    "warn": [Function],
                  },
                  "options": Object {
                    "appendNamespaceToCIMode": false,
                    "appendNamespaceToMissingKey": false,
                    "contextSeparator": "_",
                    "debug": true,
                    "defaultNS": "translation",
                    "fallbackLng": Array [
                      "en",
                    ],
                    "fallbackNS": false,
                    "initImmediate": false,
                    "interpolation": Object {
                      "escapeValue": false,
                    },
                    "joinArrays": false,
                    "keySeparator": ".",
                    "load": "all",
                    "missingInterpolationHandler": false,
                    "missingKeyHandler": false,
                    "nonExplicitSupportedLngs": true,
                    "nonExplicitWhitelist": false,
                    "ns": Array [],
                    "nsSeparator": ":",
                    "overloadTranslationOptionHandler": [Function],
                    "parseMissingKeyHandler": false,
                    "partialBundledLanguages": false,
                    "pluralSeparator": "_",
                    "postProcess": false,
                    "postProcessPassResolved": false,
                    "prefix": "i18next::languageUtils:",
                    "preload": false,
                    "resources": Object {
                      "de": Object {},
                      "en": Object {},
                      "fr": Object {},
                      "ru": Object {},
                      "uz": Object {},
                    },
                    "returnEmptyString": true,
                    "returnNull": true,
                    "returnObjects": false,
                    "returnedObjectHandler": false,
                    "saveMissing": false,
                    "saveMissingPlurals": true,
                    "saveMissingTo": "fallback",
                    "simplifyPluralSuffix": true,
                    "supportedLngs": Array [
                      "de",
                      "en",
                      "fr",
                      "ru",
                      "uz",
                      "cimode",
                    ],
                    "updateMissing": false,
                    "whitelist": false,
                  },
                  "prefix": "i18next::languageUtils:",
                },
                "options": Object {
                  "appendNamespaceToCIMode": false,
                  "appendNamespaceToMissingKey": false,
                  "contextSeparator": "_",
                  "debug": true,
                  "defaultNS": "translation",
                  "fallbackLng": Array [
                    "en",
                  ],
                  "fallbackNS": false,
                  "initImmediate": false,
                  "interpolation": Object {
                    "escapeValue": false,
                  },
                  "joinArrays": false,
                  "keySeparator": ".",
                  "load": "all",
                  "missingInterpolationHandler": false,
                  "missingKeyHandler": false,
                  "nonExplicitSupportedLngs": true,
                  "nonExplicitWhitelist": false,
                  "ns": Array [],
                  "nsSeparator": ":",
                  "overloadTranslationOptionHandler": [Function],
                  "parseMissingKeyHandler": false,
                  "partialBundledLanguages": false,
                  "pluralSeparator": "_",
                  "postProcess": false,
                  "postProcessPassResolved": false,
                  "preload": false,
                  "resources": Object {
                    "de": Object {},
                    "en": Object {},
                    "fr": Object {},
                    "ru": Object {},
                    "uz": Object {},
                  },
                  "returnEmptyString": true,
                  "returnNull": true,
                  "returnObjects": false,
                  "returnedObjectHandler": false,
                  "saveMissing": false,
                  "saveMissingPlurals": true,
                  "saveMissingTo": "fallback",
                  "simplifyPluralSuffix": true,
                  "supportedLngs": Array [
                    "de",
                    "en",
                    "fr",
                    "ru",
                    "uz",
                    "cimode",
                  ],
                  "updateMissing": false,
                  "whitelist": false,
                },
                "supportedLngs": Array [
                  "de",
                  "en",
                  "fr",
                  "ru",
                  "uz",
                  "cimode",
                ],
                "whitelist": Array [
                  "de",
                  "en",
                  "fr",
                  "ru",
                  "uz",
                  "cimode",
                ],
              },
              "logger": Logger {
                "debug": true,
                "logger": Object {
                  "error": [Function],
                  "log": [Function],
                  "output": [Function],
                  "type": "logger",
                  "warn": [Function],
                },
                "options": Object {
                  "appendNamespaceToCIMode": false,
                  "appendNamespaceToMissingKey": false,
                  "contextSeparator": "_",
                  "debug": true,
                  "defaultNS": "translation",
                  "fallbackLng": Array [
                    "en",
                  ],
                  "fallbackNS": false,
                  "initImmediate": false,
                  "interpolation": Object {
                    "escapeValue": false,
                  },
                  "joinArrays": false,
                  "keySeparator": ".",
                  "load": "all",
                  "missingInterpolationHandler": false,
                  "missingKeyHandler": false,
                  "nonExplicitSupportedLngs": true,
                  "nonExplicitWhitelist": false,
                  "ns": Array [],
                  "nsSeparator": ":",
                  "overloadTranslationOptionHandler": [Function],
                  "parseMissingKeyHandler": false,
                  "partialBundledLanguages": false,
                  "pluralSeparator": "_",
                  "postProcess": false,
                  "postProcessPassResolved": false,
                  "prefix": "i18next::translator:",
                  "preload": false,
                  "resources": Object {
                    "de": Object {},
                    "en": Object {},
                    "fr": Object {},
                    "ru": Object {},
                    "uz": Object {},
                  },
                  "returnEmptyString": true,
                  "returnNull": true,
                  "returnObjects": false,
                  "returnedObjectHandler": false,
                  "saveMissing": false,
                  "saveMissingPlurals": true,
                  "saveMissingTo": "fallback",
                  "simplifyPluralSuffix": true,
                  "supportedLngs": Array [
                    "de",
                    "en",
                    "fr",
                    "ru",
                    "uz",
                    "cimode",
                  ],
                  "updateMissing": false,
                  "whitelist": false,
                },
                "prefix": "i18next::translator:",
              },
              "observers": Object {
                "*": Array [
                  [Function],
                ],
              },
              "options": Object {
                "appendNamespaceToCIMode": false,
                "appendNamespaceToMissingKey": false,
                "contextSeparator": "_",
                "debug": true,
                "defaultNS": "translation",
                "fallbackLng": Array [
                  "en",
                ],
                "fallbackNS": false,
                "initImmediate": false,
                "interpolation": Object {
                  "escapeValue": false,
                },
                "joinArrays": false,
                "keySeparator": ".",
                "load": "all",
                "missingInterpolationHandler": false,
                "missingKeyHandler": false,
                "nonExplicitSupportedLngs": true,
                "nonExplicitWhitelist": false,
                "ns": Array [],
                "nsSeparator": ":",
                "overloadTranslationOptionHandler": [Function],
                "parseMissingKeyHandler": false,
                "partialBundledLanguages": false,
                "pluralSeparator": "_",
                "postProcess": false,
                "postProcessPassResolved": false,
                "preload": false,
                "resources": Object {
                  "de": Object {},
                  "en": Object {},
                  "fr": Object {},
                  "ru": Object {},
                  "uz": Object {},
                },
                "returnEmptyString": true,
                "returnNull": true,
                "returnObjects": false,
                "returnedObjectHandler": false,
                "saveMissing": false,
                "saveMissingPlurals": true,
                "saveMissingTo": "fallback",
                "simplifyPluralSuffix": true,
                "supportedLngs": Array [
                  "de",
                  "en",
                  "fr",
                  "ru",
                  "uz",
                  "cimode",
                ],
                "updateMissing": false,
                "whitelist": false,
              },
              "pluralResolver": PluralResolver {
                "languageUtils": LanguageUtil {
                  "logger": Logger {
                    "debug": true,
                    "logger": Object {
                      "error": [Function],
                      "log": [Function],
                      "output": [Function],
                      "type": "logger",
                      "warn": [Function],
                    },
                    "options": Object {
                      "appendNamespaceToCIMode": false,
                      "appendNamespaceToMissingKey": false,
                      "contextSeparator": "_",
                      "debug": true,
                      "defaultNS": "translation",
                      "fallbackLng": Array [
                        "en",
                      ],
                      "fallbackNS": false,
                      "initImmediate": false,
                      "interpolation": Object {
                        "escapeValue": false,
                      },
                      "joinArrays": false,
                      "keySeparator": ".",
                      "load": "all",
                      "missingInterpolationHandler": false,
                      "missingKeyHandler": false,
                      "nonExplicitSupportedLngs": true,
                      "nonExplicitWhitelist": false,
                      "ns": Array [],
                      "nsSeparator": ":",
                      "overloadTranslationOptionHandler": [Function],
                      "parseMissingKeyHandler": false,
                      "partialBundledLanguages": false,
                      "pluralSeparator": "_",
                      "postProcess": false,
                      "postProcessPassResolved": false,
                      "prefix": "i18next::languageUtils:",
                      "preload": false,
                      "resources": Object {
                        "de": Object {},
                        "en": Object {},
                        "fr": Object {},
                        "ru": Object {},
                        "uz": Object {},
                      },
                      "returnEmptyString": true,
                      "returnNull": true,
                      "returnObjects": false,
                      "returnedObjectHandler": false,
                      "saveMissing": false,
                      "saveMissingPlurals": true,
                      "saveMissingTo": "fallback",
                      "simplifyPluralSuffix": true,
                      "supportedLngs": Array [
                        "de",
                        "en",
                        "fr",
                        "ru",
                        "uz",
                        "cimode",
                      ],
                      "updateMissing": false,
                      "whitelist": false,
                    },
                    "prefix": "i18next::languageUtils:",
                  },
                  "options": Object {
                    "appendNamespaceToCIMode": false,
                    "appendNamespaceToMissingKey": false,
                    "contextSeparator": "_",
                    "debug": true,
                    "defaultNS": "translation",
                    "fallbackLng": Array [
                      "en",
                    ],
                    "fallbackNS": false,
                    "initImmediate": false,
                    "interpolation": Object {
                      "escapeValue": false,
                    },
                    "joinArrays": false,
                    "keySeparator": ".",
                    "load": "all",
                    "missingInterpolationHandler": false,
                    "missingKeyHandler": false,
                    "nonExplicitSupportedLngs": true,
                    "nonExplicitWhitelist": false,
                    "ns": Array [],
                    "nsSeparator": ":",
                    "overloadTranslationOptionHandler": [Function],
                    "parseMissingKeyHandler": false,
                    "partialBundledLanguages": false,
                    "pluralSeparator": "_",
                    "postProcess": false,
                    "postProcessPassResolved": false,
                    "preload": false,
                    "resources": Object {
                      "de": Object {},
                      "en": Object {},
                      "fr": Object {},
                      "ru": Object {},
                      "uz": Object {},
                    },
                    "returnEmptyString": true,
                    "returnNull": true,
                    "returnObjects": false,
                    "returnedObjectHandler": false,
                    "saveMissing": false,
                    "saveMissingPlurals": true,
                    "saveMissingTo": "fallback",
                    "simplifyPluralSuffix": true,
                    "supportedLngs": Array [
                      "de",
                      "en",
                      "fr",
                      "ru",
                      "uz",
                      "cimode",
                    ],
                    "updateMissing": false,
                    "whitelist": false,
                  },
                  "supportedLngs": Array [
                    "de",
                    "en",
                    "fr",
                    "ru",
                    "uz",
                    "cimode",
                  ],
                  "whitelist": Array [
                    "de",
                    "en",
                    "fr",
                    "ru",
                    "uz",
                    "cimode",
                  ],
                },
                "logger": Logger {
                  "debug": true,
                  "logger": Object {
                    "error": [Function],
                    "log": [Function],
                    "output": [Function],
                    "type": "logger",
                    "warn": [Function],
                  },
                  "options": Object {
                    "appendNamespaceToCIMode": false,
                    "appendNamespaceToMissingKey": false,
                    "contextSeparator": "_",
                    "debug": true,
                    "defaultNS": "translation",
                    "fallbackLng": Array [
                      "en",
                    ],
                    "fallbackNS": false,
                    "initImmediate": false,
                    "interpolation": Object {
                      "escapeValue": false,
                    },
                    "joinArrays": false,
                    "keySeparator": ".",
                    "load": "all",
                    "missingInterpolationHandler": false,
                    "missingKeyHandler": false,
                    "nonExplicitSupportedLngs": true,
                    "nonExplicitWhitelist": false,
                    "ns": Array [],
                    "nsSeparator": ":",
                    "overloadTranslationOptionHandler": [Function],
                    "parseMissingKeyHandler": false,
                    "partialBundledLanguages": false,
                    "pluralSeparator": "_",
                    "postProcess": false,
                    "postProcessPassResolved": false,
                    "prefix": "i18next::pluralResolver:",
                    "preload": false,
                    "resources": Object {
                      "de": Object {},
                      "en": Object {},
                      "fr": Object {},
                      "ru": Object {},
                      "uz": Object {},
                    },
                    "returnEmptyString": true,
                    "returnNull": true,
                    "returnObjects": false,
                    "returnedObjectHandler": false,
                    "saveMissing": false,
                    "saveMissingPlurals": true,
                    "saveMissingTo": "fallback",
                    "simplifyPluralSuffix": true,
                    "supportedLngs": Array [
                      "de",
                      "en",
                      "fr",
                      "ru",
                      "uz",
                      "cimode",
                    ],
                    "updateMissing": false,
                    "whitelist": false,
                  },
                  "prefix": "i18next::pluralResolver:",
                },
                "options": Object {
                  "compatibilityJSON": undefined,
                  "prepend": "_",
                  "simplifyPluralSuffix": true,
                },
                "rules": Object {
                  "ach": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "af": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "ak": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "am": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "an": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "ar": Object {
                    "numbers": Array [
                      0,
                      1,
                      2,
                      3,
                      11,
                      100,
                    ],
                    "plurals": [Function],
                  },
                  "arn": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "ast": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "ay": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "az": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "be": Object {
                    "numbers": Array [
                      1,
                      2,
                      5,
                    ],
                    "plurals": [Function],
                  },
                  "bg": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "bn": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "bo": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "br": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "bs": Object {
                    "numbers": Array [
                      1,
                      2,
                      5,
                    ],
                    "plurals": [Function],
                  },
                  "ca": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "cgg": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "cnr": Object {
                    "numbers": Array [
                      1,
                      2,
                      5,
                    ],
                    "plurals": [Function],
                  },
                  "cs": Object {
                    "numbers": Array [
                      1,
                      2,
                      5,
                    ],
                    "plurals": [Function],
                  },
                  "csb": Object {
                    "numbers": Array [
                      1,
                      2,
                      5,
                    ],
                    "plurals": [Function],
                  },
                  "cy": Object {
                    "numbers": Array [
                      1,
                      2,
                      3,
                      8,
                    ],
                    "plurals": [Function],
                  },
                  "da": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "de": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "dev": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "dz": Object {
                    "numbers": Array [
                      1,
                      2,
                      5,
                    ],
                    "plurals": [Function],
                  },
                  "el": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "en": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "eo": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "es": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "et": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "eu": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "fa": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "fi": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "fil": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "fo": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "fr": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "fur": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "fy": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "ga": Object {
                    "numbers": Array [
                      1,
                      2,
                      3,
                      7,
                      11,
                    ],
                    "plurals": [Function],
                  },
                  "gd": Object {
                    "numbers": Array [
                      1,
                      2,
                      3,
                      20,
                    ],
                    "plurals": [Function],
                  },
                  "gl": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "gu": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "gun": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "ha": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "he": Object {
                    "numbers": Array [
                      1,
                      2,
                      20,
                      21,
                    ],
                    "plurals": [Function],
                  },
                  "hi": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "hr": Object {
                    "numbers": Array [
                      1,
                      2,
                      5,
                    ],
                    "plurals": [Function],
                  },
                  "ht": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "hu": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "hy": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "ia": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "id": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "is": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "it": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "iw": Object {
                    "numbers": Array [
                      1,
                      2,
                      20,
                      21,
                    ],
                    "plurals": [Function],
                  },
                  "ja": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "jbo": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "jv": Object {
                    "numbers": Array [
                      0,
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "ka": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "kk": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "km": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "kn": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "ko": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "ku": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "kw": Object {
                    "numbers": Array [
                      1,
                      2,
                      3,
                      4,
                    ],
                    "plurals": [Function],
                  },
                  "ky": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "lb": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "ln": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "lo": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "lt": Object {
                    "numbers": Array [
                      1,
                      2,
                      10,
                    ],
                    "plurals": [Function],
                  },
                  "lv": Object {
                    "numbers": Array [
                      1,
                      2,
                      0,
                    ],
                    "plurals": [Function],
                  },
                  "mai": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "mfe": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "mg": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "mi": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "mk": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "ml": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "mn": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "mnk": Object {
                    "numbers": Array [
                      0,
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "mr": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "ms": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "mt": Object {
                    "numbers": Array [
                      1,
                      2,
                      11,
                      20,
                    ],
                    "plurals": [Function],
                  },
                  "nah": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "nap": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "nb": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "ne": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "nl": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "nn": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "no": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "nso": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "oc": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "or": Object {
                    "numbers": Array [
                      2,
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "pa": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "pap": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "pl": Object {
                    "numbers": Array [
                      1,
                      2,
                      5,
                    ],
                    "plurals": [Function],
                  },
                  "pms": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "ps": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "pt": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "pt-BR": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "pt-PT": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "rm": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "ro": Object {
                    "numbers": Array [
                      1,
                      2,
                      20,
                    ],
                    "plurals": [Function],
                  },
                  "ru": Object {
                    "numbers": Array [
                      1,
                      2,
                      5,
                    ],
                    "plurals": [Function],
                  },
                  "sah": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "sco": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "se": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "si": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "sk": Object {
                    "numbers": Array [
                      1,
                      2,
                      5,
                    ],
                    "plurals": [Function],
                  },
                  "sl": Object {
                    "numbers": Array [
                      5,
                      1,
                      2,
                      3,
                    ],
                    "plurals": [Function],
                  },
                  "so": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "son": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "sq": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "sr": Object {
                    "numbers": Array [
                      1,
                      2,
                      5,
                    ],
                    "plurals": [Function],
                  },
                  "su": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "sv": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "sw": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "ta": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "te": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "tg": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "th": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "ti": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "tk": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "tr": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "tt": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "ug": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "uk": Object {
                    "numbers": Array [
                      1,
                      2,
                      5,
                    ],
                    "plurals": [Function],
                  },
                  "ur": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "uz": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "vi": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "wa": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "wo": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                  "yo": Object {
                    "numbers": Array [
                      1,
                      2,
                    ],
                    "plurals": [Function],
                  },
                  "zh": Object {
                    "numbers": Array [
                      1,
                    ],
                    "plurals": [Function],
                  },
                },
              },
              "resourceStore": Object {
                "de": Object {},
                "en": Object {},
                "fr": Object {},
                "ru": Object {},
                "uz": Object {},
              },
              "utils": Object {
                "hasLoadedNamespace": [Function],
              },
            },
          }
        }
      >
        <Memo(MuiPickerUtils)>
          <MuiPickersUtilsProvider
            libInstance={[Function]}
            locale="en"
            utils={[Function]}
          >
            <Memo(ThemeProvider)
              defaultTheme={[Function]}
            >
              <ThemeProvider
                theme={
                  Object {
                    "breakpoints": Object {
                      "between": [Function],
                      "down": [Function],
                      "keys": Array [
                        "xs",
                        "sm",
                        "md",
                        "lg",
                        "xl",
                      ],
                      "only": [Function],
                      "up": [Function],
                      "values": Object {
                        "lg": 1280,
                        "md": 960,
                        "sm": 600,
                        "xl": 1920,
                        "xs": 0,
                      },
                      "width": [Function],
                    },
                    "direction": "ltr",
                    "mixins": Object {
                      "gutters": [Function],
                      "toolbar": Object {
                        "@media (min-width:0px) and (orientation: landscape)": Object {
                          "minHeight": 48,
                        },
                        "@media (min-width:600px)": Object {
                          "minHeight": 64,
                        },
                        "minHeight": 56,
                      },
                    },
                    "overrides": Object {},
                    "palette": Object {
                      "action": Object {
                        "activatedOpacity": 0.12,
                        "active": "rgba(0, 0, 0, 0.54)",
                        "disabled": "rgba(0, 0, 0, 0.26)",
                        "disabledBackground": "rgba(0, 0, 0, 0.12)",
                        "disabledOpacity": 0.38,
                        "focus": "rgba(0, 0, 0, 0.12)",
                        "focusOpacity": 0.12,
                        "hover": "rgba(0, 0, 0, 0.04)",
                        "hoverOpacity": 0.04,
                        "selected": "rgba(0, 0, 0, 0.08)",
                        "selectedOpacity": 0.08,
                      },
                      "augmentColor": [Function],
                      "background": Object {
                        "default": "#fafafa",
                        "paper": "#fff",
                      },
                      "common": Object {
                        "black": "#000",
                        "white": "#fff",
                      },
                      "contrastThreshold": 3,
                      "divider": "rgba(0, 0, 0, 0.12)",
                      "error": Object {
                        "contrastText": "#fff",
                        "dark": "#d32f2f",
                        "light": "#e57373",
                        "main": "#f44336",
                      },
                      "getContrastText": [Function],
                      "grey": Object {
                        "100": "#f5f5f5",
                        "200": "#eeeeee",
                        "300": "#e0e0e0",
                        "400": "#bdbdbd",
                        "50": "#fafafa",
                        "500": "#9e9e9e",
                        "600": "#757575",
                        "700": "#616161",
                        "800": "#424242",
                        "900": "#212121",
                        "A100": "#d5d5d5",
                        "A200": "#aaaaaa",
                        "A400": "#303030",
                        "A700": "#616161",
                      },
                      "info": Object {
                        "contrastText": "#fff",
                        "dark": "#1976d2",
                        "light": "#64b5f6",
                        "main": "#2196f3",
                      },
                      "primary": Object {
                        "contrastText": "#fff",
                        "dark": "rgb(44, 56, 126)",
                        "light": "rgb(101, 115, 195)",
                        "main": "#3f51b5",
                      },
                      "secondary": Object {
                        "contrastText": "#fff",
                        "dark": "rgb(171, 0, 60)",
                        "light": "rgb(247, 51, 120)",
                        "main": "#f50057",
                      },
                      "success": Object {
                        "contrastText": "rgba(0, 0, 0, 0.87)",
                        "dark": "#388e3c",
                        "light": "#81c784",
                        "main": "#4caf50",
                      },
                      "text": Object {
                        "disabled": "rgba(0, 0, 0, 0.38)",
                        "hint": "rgba(0, 0, 0, 0.38)",
                        "primary": "rgba(0, 0, 0, 0.87)",
                        "secondary": "rgba(0, 0, 0, 0.54)",
                      },
                      "tonalOffset": 0.2,
                      "type": "light",
                      "warning": Object {
                        "contrastText": "rgba(0, 0, 0, 0.87)",
                        "dark": "#f57c00",
                        "light": "#ffb74d",
                        "main": "#ff9800",
                      },
                    },
                    "props": Object {},
                    "shadows": Array [
                      "none",
                      "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                      "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                      "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                      "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                      "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                      "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                      "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                      "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                      "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                      "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                      "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                      "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                      "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                      "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                      "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                      "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                      "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                      "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                      "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                      "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                      "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                      "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                      "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                      "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                    ],
                    "shape": Object {
                      "borderRadius": 4,
                    },
                    "spacing": [Function],
                    "transitions": Object {
                      "create": [Function],
                      "duration": Object {
                        "complex": 375,
                        "enteringScreen": 225,
                        "leavingScreen": 195,
                        "short": 250,
                        "shorter": 200,
                        "shortest": 150,
                        "standard": 300,
                      },
                      "easing": Object {
                        "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                        "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                        "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                        "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                      },
                      "getAutoHeightDuration": [Function],
                    },
                    "typography": Object {
                      "body1": Object {
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "1rem",
                        "fontWeight": 400,
                        "letterSpacing": "0.00938em",
                        "lineHeight": 1.5,
                      },
                      "body2": Object {
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "0.875rem",
                        "fontWeight": 400,
                        "letterSpacing": "0.01071em",
                        "lineHeight": 1.43,
                      },
                      "button": Object {
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "0.875rem",
                        "fontWeight": 500,
                        "letterSpacing": "0.02857em",
                        "lineHeight": 1.75,
                        "textTransform": "uppercase",
                      },
                      "caption": Object {
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "0.75rem",
                        "fontWeight": 400,
                        "letterSpacing": "0.03333em",
                        "lineHeight": 1.66,
                      },
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": 14,
                      "fontWeightBold": 700,
                      "fontWeightLight": 300,
                      "fontWeightMedium": 500,
                      "fontWeightRegular": 400,
                      "h1": Object {
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "6rem",
                        "fontWeight": 300,
                        "letterSpacing": "-0.01562em",
                        "lineHeight": 1.167,
                      },
                      "h2": Object {
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "3.75rem",
                        "fontWeight": 300,
                        "letterSpacing": "-0.00833em",
                        "lineHeight": 1.2,
                      },
                      "h3": Object {
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "3rem",
                        "fontWeight": 400,
                        "letterSpacing": "0em",
                        "lineHeight": 1.167,
                      },
                      "h4": Object {
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "2.125rem",
                        "fontWeight": 400,
                        "letterSpacing": "0.00735em",
                        "lineHeight": 1.235,
                      },
                      "h5": Object {
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "1.5rem",
                        "fontWeight": 400,
                        "letterSpacing": "0em",
                        "lineHeight": 1.334,
                      },
                      "h6": Object {
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "1.25rem",
                        "fontWeight": 500,
                        "letterSpacing": "0.0075em",
                        "lineHeight": 1.6,
                      },
                      "htmlFontSize": 16,
                      "overline": Object {
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "0.75rem",
                        "fontWeight": 400,
                        "letterSpacing": "0.08333em",
                        "lineHeight": 2.66,
                        "textTransform": "uppercase",
                      },
                      "pxToRem": [Function],
                      "round": [Function],
                      "subtitle1": Object {
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "1rem",
                        "fontWeight": 400,
                        "letterSpacing": "0.00938em",
                        "lineHeight": 1.75,
                      },
                      "subtitle2": Object {
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "0.875rem",
                        "fontWeight": 500,
                        "letterSpacing": "0.00714em",
                        "lineHeight": 1.57,
                      },
                    },
                    "zIndex": Object {
                      "appBar": 1100,
                      "drawer": 1200,
                      "mobileStepper": 1000,
                      "modal": 1300,
                      "snackbar": 1400,
                      "speedDial": 1050,
                      "tooltip": 1500,
                    },
                    Symbol(mui.nested): false,
                  }
                }
              >
                <WithStyles(CssBaseline)>
                  <CssBaseline
                    classes={Object {}}
                  />
                </WithStyles(CssBaseline)>
                <QueryClientProvider
                  client={
                    QueryClient {
                      "defaultOptions": Object {},
                      "mutationCache": MutationCache {
                        "config": Object {},
                        "listeners": Array [],
                        "mutationId": 0,
                        "mutations": Array [],
                      },
                      "mutationDefaults": Array [],
                      "queryCache": QueryCache {
                        "config": Object {},
                        "listeners": Array [],
                        "queries": Array [],
                        "queriesMap": Object {},
                      },
                      "queryDefaults": Array [],
                      "unsubscribeFocus": [Function],
                      "unsubscribeOnline": [Function],
                    }
                  }
                >
                  <Memo(PermissionContextProvider)>
                    <Router
                      history={
                        Object {
                          "action": "POP",
                          "block": [Function],
                          "createHref": [Function],
                          "go": [Function],
                          "goBack": [Function],
                          "goForward": [Function],
                          "length": 1,
                          "listen": [Function],
                          "location": Object {
                            "hash": "",
                            "pathname": "/",
                            "search": "",
                            "state": undefined,
                          },
                          "push": [Function],
                          "replace": [Function],
                        }
                      }
                    >
                      <Memo(DialogContextProvider)>
                        <ThemeSelector>
                          <AdvThemeSelector>
                            <LanguageSelector />
                            <StylesProvider
                              generateClassName={[Function]}
                            >
                              <Component>
                                <DialogContent />
                              </Component>
                            </StylesProvider>
                          </AdvThemeSelector>
                        </ThemeSelector>
                        <Memo(InputDialogRaw)
                          handlerButtonNo={[Function]}
                          handlerButtonYes={[Function]}
                          message="Enter your own text in Knobs!"
                          onClose={[Function]}
                          textButtonNo="No"
                          textButtonYes="Yes"
                          textFieldLabel="Enter your input here:"
                          textFieldValidator={[Function]}
                          title="Storybook"
                        >
                          <WithStyles(ForwardRef(Dialog))
                            onClose={[Function]}
                            open={true}
                          >
                            <ForwardRef(Dialog)
                              classes={
                                Object {
                                  "container": "MuiDialog-container",
                                  "paper": "MuiDialog-paper",
                                  "paperFullScreen": "MuiDialog-paperFullScreen",
                                  "paperFullWidth": "MuiDialog-paperFullWidth",
                                  "paperScrollBody": "MuiDialog-paperScrollBody",
                                  "paperScrollPaper": "MuiDialog-paperScrollPaper",
                                  "paperWidthFalse": "MuiDialog-paperWidthFalse",
                                  "paperWidthLg": "MuiDialog-paperWidthLg",
                                  "paperWidthMd": "MuiDialog-paperWidthMd",
                                  "paperWidthSm": "MuiDialog-paperWidthSm",
                                  "paperWidthXl": "MuiDialog-paperWidthXl",
                                  "paperWidthXs": "MuiDialog-paperWidthXs",
                                  "root": "MuiDialog-root",
                                  "scrollBody": "MuiDialog-scrollBody",
                                  "scrollPaper": "MuiDialog-scrollPaper",
                                }
                              }
                              onClose={[Function]}
                              open={true}
                            >
                              <ForwardRef(Modal)
                                BackdropComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "Naked": Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "propTypes": Object {
                                        "children": [Function],
                                        "className": [Function],
                                        "classes": [Function],
                                        "invisible": [Function],
                                        "open": [Function],
                                        "transitionDuration": [Function],
                                      },
                                      "render": [Function],
                                    },
                                    "options": Object {
                                      "defaultTheme": Object {
                                        "breakpoints": Object {
                                          "between": [Function],
                                          "down": [Function],
                                          "keys": Array [
                                            "xs",
                                            "sm",
                                            "md",
                                            "lg",
                                            "xl",
                                          ],
                                          "only": [Function],
                                          "up": [Function],
                                          "values": Object {
                                            "lg": 1280,
                                            "md": 960,
                                            "sm": 600,
                                            "xl": 1920,
                                            "xs": 0,
                                          },
                                          "width": [Function],
                                        },
                                        "direction": "ltr",
                                        "mixins": Object {
                                          "gutters": [Function],
                                          "toolbar": Object {
                                            "@media (min-width:0px) and (orientation: landscape)": Object {
                                              "minHeight": 48,
                                            },
                                            "@media (min-width:600px)": Object {
                                              "minHeight": 64,
                                            },
                                            "minHeight": 56,
                                          },
                                        },
                                        "overrides": Object {},
                                        "palette": Object {
                                          "action": Object {
                                            "activatedOpacity": 0.12,
                                            "active": "rgba(0, 0, 0, 0.54)",
                                            "disabled": "rgba(0, 0, 0, 0.26)",
                                            "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                            "disabledOpacity": 0.38,
                                            "focus": "rgba(0, 0, 0, 0.12)",
                                            "focusOpacity": 0.12,
                                            "hover": "rgba(0, 0, 0, 0.04)",
                                            "hoverOpacity": 0.04,
                                            "selected": "rgba(0, 0, 0, 0.08)",
                                            "selectedOpacity": 0.08,
                                          },
                                          "augmentColor": [Function],
                                          "background": Object {
                                            "default": "#fafafa",
                                            "paper": "#fff",
                                          },
                                          "common": Object {
                                            "black": "#000",
                                            "white": "#fff",
                                          },
                                          "contrastThreshold": 3,
                                          "divider": "rgba(0, 0, 0, 0.12)",
                                          "error": Object {
                                            "contrastText": "#fff",
                                            "dark": "#d32f2f",
                                            "light": "#e57373",
                                            "main": "#f44336",
                                          },
                                          "getContrastText": [Function],
                                          "grey": Object {
                                            "100": "#f5f5f5",
                                            "200": "#eeeeee",
                                            "300": "#e0e0e0",
                                            "400": "#bdbdbd",
                                            "50": "#fafafa",
                                            "500": "#9e9e9e",
                                            "600": "#757575",
                                            "700": "#616161",
                                            "800": "#424242",
                                            "900": "#212121",
                                            "A100": "#d5d5d5",
                                            "A200": "#aaaaaa",
                                            "A400": "#303030",
                                            "A700": "#616161",
                                          },
                                          "info": Object {
                                            "contrastText": "#fff",
                                            "dark": "#1976d2",
                                            "light": "#64b5f6",
                                            "main": "#2196f3",
                                          },
                                          "primary": Object {
                                            "contrastText": "#fff",
                                            "dark": "#303f9f",
                                            "light": "#7986cb",
                                            "main": "#3f51b5",
                                          },
                                          "secondary": Object {
                                            "contrastText": "#fff",
                                            "dark": "#c51162",
                                            "light": "#ff4081",
                                            "main": "#f50057",
                                          },
                                          "success": Object {
                                            "contrastText": "rgba(0, 0, 0, 0.87)",
                                            "dark": "#388e3c",
                                            "light": "#81c784",
                                            "main": "#4caf50",
                                          },
                                          "text": Object {
                                            "disabled": "rgba(0, 0, 0, 0.38)",
                                            "hint": "rgba(0, 0, 0, 0.38)",
                                            "primary": "rgba(0, 0, 0, 0.87)",
                                            "secondary": "rgba(0, 0, 0, 0.54)",
                                          },
                                          "tonalOffset": 0.2,
                                          "type": "light",
                                          "warning": Object {
                                            "contrastText": "rgba(0, 0, 0, 0.87)",
                                            "dark": "#f57c00",
                                            "light": "#ffb74d",
                                            "main": "#ff9800",
                                          },
                                        },
                                        "props": Object {},
                                        "shadows": Array [
                                          "none",
                                          "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                          "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                          "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                          "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                          "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                          "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                          "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                          "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                          "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                          "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                          "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                          "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                          "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                          "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                          "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                          "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                          "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                          "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                          "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                          "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                          "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                          "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                          "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                          "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                        ],
                                        "shape": Object {
                                          "borderRadius": 4,
                                        },
                                        "spacing": [Function],
                                        "transitions": Object {
                                          "create": [Function],
                                          "duration": Object {
                                            "complex": 375,
                                            "enteringScreen": 225,
                                            "leavingScreen": 195,
                                            "short": 250,
                                            "shorter": 200,
                                            "shortest": 150,
                                            "standard": 300,
                                          },
                                          "easing": Object {
                                            "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                            "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                            "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                            "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                          },
                                          "getAutoHeightDuration": [Function],
                                        },
                                        "typography": Object {
                                          "body1": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "1rem",
                                            "fontWeight": 400,
                                            "letterSpacing": "0.00938em",
                                            "lineHeight": 1.5,
                                          },
                                          "body2": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "0.875rem",
                                            "fontWeight": 400,
                                            "letterSpacing": "0.01071em",
                                            "lineHeight": 1.43,
                                          },
                                          "button": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "0.875rem",
                                            "fontWeight": 500,
                                            "letterSpacing": "0.02857em",
                                            "lineHeight": 1.75,
                                            "textTransform": "uppercase",
                                          },
                                          "caption": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "0.75rem",
                                            "fontWeight": 400,
                                            "letterSpacing": "0.03333em",
                                            "lineHeight": 1.66,
                                          },
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": 14,
                                          "fontWeightBold": 700,
                                          "fontWeightLight": 300,
                                          "fontWeightMedium": 500,
                                          "fontWeightRegular": 400,
                                          "h1": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "6rem",
                                            "fontWeight": 300,
                                            "letterSpacing": "-0.01562em",
                                            "lineHeight": 1.167,
                                          },
                                          "h2": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "3.75rem",
                                            "fontWeight": 300,
                                            "letterSpacing": "-0.00833em",
                                            "lineHeight": 1.2,
                                          },
                                          "h3": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "3rem",
                                            "fontWeight": 400,
                                            "letterSpacing": "0em",
                                            "lineHeight": 1.167,
                                          },
                                          "h4": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "2.125rem",
                                            "fontWeight": 400,
                                            "letterSpacing": "0.00735em",
                                            "lineHeight": 1.235,
                                          },
                                          "h5": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "1.5rem",
                                            "fontWeight": 400,
                                            "letterSpacing": "0em",
                                            "lineHeight": 1.334,
                                          },
                                          "h6": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "1.25rem",
                                            "fontWeight": 500,
                                            "letterSpacing": "0.0075em",
                                            "lineHeight": 1.6,
                                          },
                                          "htmlFontSize": 16,
                                          "overline": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "0.75rem",
                                            "fontWeight": 400,
                                            "letterSpacing": "0.08333em",
                                            "lineHeight": 2.66,
                                            "textTransform": "uppercase",
                                          },
                                          "pxToRem": [Function],
                                          "round": [Function],
                                          "subtitle1": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "1rem",
                                            "fontWeight": 400,
                                            "letterSpacing": "0.00938em",
                                            "lineHeight": 1.75,
                                          },
                                          "subtitle2": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "0.875rem",
                                            "fontWeight": 500,
                                            "letterSpacing": "0.00714em",
                                            "lineHeight": 1.57,
                                          },
                                        },
                                        "zIndex": Object {
                                          "appBar": 1100,
                                          "drawer": 1200,
                                          "mobileStepper": 1000,
                                          "modal": 1300,
                                          "snackbar": 1400,
                                          "speedDial": 1050,
                                          "tooltip": 1500,
                                        },
                                      },
                                      "name": "MuiBackdrop",
                                    },
                                    "propTypes": Object {
                                      "classes": [Function],
                                      "innerRef": [Function],
                                    },
                                    "render": [Function],
                                    "useStyles": [Function],
                                  }
                                }
                                BackdropProps={
                                  Object {
                                    "transitionDuration": Object {
                                      "enter": 225,
                                      "exit": 195,
                                    },
                                  }
                                }
                                className="MuiDialog-root"
                                closeAfterTransition={true}
                                disableBackdropClick={false}
                                disableEscapeKeyDown={false}
                                onClose={[Function]}
                                open={true}
                              >
                                <ForwardRef(Portal)
                                  disablePortal={false}
                                >
                                  <Portal
                                    containerInfo={
                                      <body
                                        style="padding-right: 0px; overflow: hidden;"
                                      >
                                        <div
                                          aria-hidden="true"
                                          class="app"
                                          id="app"
                                        />
                                        <div
                                          class="MuiDialog-root"
                                          role="presentation"
                                          style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px;"
                                        >
                                          <div
                                            aria-hidden="true"
                                            class="MuiBackdrop-root"
                                            style="opacity: 1; webkit-transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;"
                                          />
                                          <div
                                            data-test="sentinelStart"
                                            tabindex="0"
                                          />
                                          <div
                                            class="MuiDialog-container MuiDialog-scrollPaper"
                                            role="none presentation"
                                            style="opacity: 1; webkit-transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;"
                                            tabindex="-1"
                                          >
                                            <div
                                              class="MuiPaper-root MuiDialog-paper MuiDialog-paperScrollPaper MuiDialog-paperWidthSm MuiPaper-elevation24 MuiPaper-rounded"
                                              role="dialog"
                                            >
                                              <div
                                                class="MuiDialogTitle-root"
                                              >
                                                <h2
                                                  class="MuiTypography-root MuiTypography-h6"
                                                >
                                                  Storybook
                                                </h2>
                                              </div>
                                              <div
                                                class="MuiDialogContent-root"
                                              >
                                                <p
                                                  class="MuiTypography-root MuiDialogContentText-root MuiTypography-body1 MuiTypography-colorTextSecondary"
                                                >
                                                  Enter your own text in Knobs!
                                                </p>
                                                <div
                                                  class="MuiFormControl-root MuiTextField-root MuiFormControl-marginDense MuiFormControl-fullWidth"
                                                >
                                                  <label
                                                    class="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-marginDense Mui-focused Mui-focused"
                                                    data-shrink="true"
                                                  >
                                                    Enter your input here:
                                                  </label>
                                                  <div
                                                    class="MuiInputBase-root MuiInput-root MuiInput-underline MuiInputBase-fullWidth MuiInput-fullWidth Mui-focused Mui-focused MuiInputBase-formControl MuiInput-formControl MuiInputBase-marginDense MuiInput-marginDense"
                                                  >
                                                    <input
                                                      aria-invalid="false"
                                                      class="MuiInputBase-input MuiInput-input MuiInputBase-inputMarginDense MuiInput-inputMarginDense"
                                                      type="text"
                                                      value=""
                                                    />
                                                  </div>
                                                </div>
                                              </div>
                                              <div
                                                class="MuiDialogActions-root MuiDialogActions-spacing"
                                              >
                                                <button
                                                  class="MuiButtonBase-root MuiButton-root MuiButton-text MuiButton-textPrimary"
                                                  tabindex="0"
                                                  type="button"
                                                >
                                                  <span
                                                    class="MuiButton-label"
                                                  >
                                                    No
                                                  </span>
                                                  <span
                                                    class="MuiTouchRipple-root"
                                                  />
                                                </button>
                                                <button
                                                  class="MuiButtonBase-root MuiButton-root MuiButton-text MuiButton-textPrimary"
                                                  tabindex="0"
                                                  type="button"
                                                >
                                                  <span
                                                    class="MuiButton-label"
                                                  >
                                                    Yes
                                                  </span>
                                                  <span
                                                    class="MuiTouchRipple-root"
                                                  />
                                                </button>
                                              </div>
                                            </div>
                                          </div>
                                          <div
                                            data-test="sentinelEnd"
                                            tabindex="0"
                                          />
                                        </div>
                                      </body>
                                    }
                                  >
                                    <div
                                      className="MuiDialog-root"
                                      onKeyDown={[Function]}
                                      role="presentation"
                                      style={
                                        Object {
                                          "bottom": 0,
                                          "left": 0,
                                          "position": "fixed",
                                          "right": 0,
                                          "top": 0,
                                          "zIndex": 1300,
                                        }
                                      }
                                    >
                                      <WithStyles(ForwardRef(Backdrop))
                                        onClick={[Function]}
                                        open={true}
                                        transitionDuration={
                                          Object {
                                            "enter": 225,
                                            "exit": 195,
                                          }
                                        }
                                      >
                                        <ForwardRef(Backdrop)
                                          classes={
                                            Object {
                                              "invisible": "MuiBackdrop-invisible",
                                              "root": "MuiBackdrop-root",
                                            }
                                          }
                                          onClick={[Function]}
                                          open={true}
                                          transitionDuration={
                                            Object {
                                              "enter": 225,
                                              "exit": 195,
                                            }
                                          }
                                        >
                                          <ForwardRef(Fade)
                                            in={true}
                                            onClick={[Function]}
                                            timeout={
                                              Object {
                                                "enter": 225,
                                                "exit": 195,
                                              }
                                            }
                                          >
                                            <Transition
                                              appear={true}
                                              enter={true}
                                              exit={true}
                                              in={true}
                                              mountOnEnter={false}
                                              onClick={[Function]}
                                              onEnter={[Function]}
                                              onEntered={[Function]}
                                              onEntering={[Function]}
                                              onExit={[Function]}
                                              onExited={[Function]}
                                              onExiting={[Function]}
                                              timeout={
                                                Object {
                                                  "enter": 225,
                                                  "exit": 195,
                                                }
                                              }
                                              unmountOnExit={false}
                                            >
                                              <div
                                                aria-hidden={true}
                                                className="MuiBackdrop-root"
                                                onClick={[Function]}
                                                style={
                                                  Object {
                                                    "opacity": 1,
                                                    "visibility": undefined,
                                                  }
                                                }
                                              />
                                            </Transition>
                                          </ForwardRef(Fade)>
                                        </ForwardRef(Backdrop)>
                                      </WithStyles(ForwardRef(Backdrop))>
                                      <Unstable_TrapFocus
                                        disableAutoFocus={false}
                                        disableEnforceFocus={false}
                                        disableRestoreFocus={false}
                                        getDoc={[Function]}
                                        isEnabled={[Function]}
                                        open={true}
                                      >
                                        <div
                                          data-test="sentinelStart"
                                          tabIndex={0}
                                        />
                                        <ForwardRef(Fade)
                                          appear={true}
                                          in={true}
                                          onEnter={[Function]}
                                          onExited={[Function]}
                                          role="none presentation"
                                          tabIndex="-1"
                                          timeout={
                                            Object {
                                              "enter": 225,
                                              "exit": 195,
                                            }
                                          }
                                        >
                                          <Transition
                                            appear={true}
                                            enter={true}
                                            exit={true}
                                            in={true}
                                            mountOnEnter={false}
                                            onEnter={[Function]}
                                            onEntered={[Function]}
                                            onEntering={[Function]}
                                            onExit={[Function]}
                                            onExited={[Function]}
                                            onExiting={[Function]}
                                            role="none presentation"
                                            tabIndex="-1"
                                            timeout={
                                              Object {
                                                "enter": 225,
                                                "exit": 195,
                                              }
                                            }
                                            unmountOnExit={false}
                                          >
                                            <div
                                              className="MuiDialog-container MuiDialog-scrollPaper"
                                              onMouseDown={[Function]}
                                              onMouseUp={[Function]}
                                              role="none presentation"
                                              style={
                                                Object {
                                                  "opacity": 1,
                                                  "visibility": undefined,
                                                }
                                              }
                                              tabIndex="-1"
                                            >
                                              <WithStyles(ForwardRef(Paper))
                                                className="MuiDialog-paper MuiDialog-paperScrollPaper MuiDialog-paperWidthSm"
                                                elevation={24}
                                                role="dialog"
                                              >
                                                <ForwardRef(Paper)
                                                  className="MuiDialog-paper MuiDialog-paperScrollPaper MuiDialog-paperWidthSm"
                                                  classes={
                                                    Object {
                                                      "elevation0": "MuiPaper-elevation0",
                                                      "elevation1": "MuiPaper-elevation1",
                                                      "elevation10": "MuiPaper-elevation10",
                                                      "elevation11": "MuiPaper-elevation11",
                                                      "elevation12": "MuiPaper-elevation12",
                                                      "elevation13": "MuiPaper-elevation13",
                                                      "elevation14": "MuiPaper-elevation14",
                                                      "elevation15": "MuiPaper-elevation15",
                                                      "elevation16": "MuiPaper-elevation16",
                                                      "elevation17": "MuiPaper-elevation17",
                                                      "elevation18": "MuiPaper-elevation18",
                                                      "elevation19": "MuiPaper-elevation19",
                                                      "elevation2": "MuiPaper-elevation2",
                                                      "elevation20": "MuiPaper-elevation20",
                                                      "elevation21": "MuiPaper-elevation21",
                                                      "elevation22": "MuiPaper-elevation22",
                                                      "elevation23": "MuiPaper-elevation23",
                                                      "elevation24": "MuiPaper-elevation24",
                                                      "elevation3": "MuiPaper-elevation3",
                                                      "elevation4": "MuiPaper-elevation4",
                                                      "elevation5": "MuiPaper-elevation5",
                                                      "elevation6": "MuiPaper-elevation6",
                                                      "elevation7": "MuiPaper-elevation7",
                                                      "elevation8": "MuiPaper-elevation8",
                                                      "elevation9": "MuiPaper-elevation9",
                                                      "outlined": "MuiPaper-outlined",
                                                      "root": "MuiPaper-root",
                                                      "rounded": "MuiPaper-rounded",
                                                    }
                                                  }
                                                  elevation={24}
                                                  role="dialog"
                                                >
                                                  <div
                                                    className="MuiPaper-root MuiDialog-paper MuiDialog-paperScrollPaper MuiDialog-paperWidthSm MuiPaper-elevation24 MuiPaper-rounded"
                                                    role="dialog"
                                                  >
                                                    <WithStyles(ForwardRef(DialogTitle))>
                                                      <ForwardRef(DialogTitle)
                                                        classes={
                                                          Object {
                                                            "root": "MuiDialogTitle-root",
                                                          }
                                                        }
                                                      >
                                                        <div
                                                          className="MuiDialogTitle-root"
                                                        >
                                                          <WithStyles(ForwardRef(Typography))
                                                            component="h2"
                                                            variant="h6"
                                                          >
                                                            <ForwardRef(Typography)
                                                              classes={
                                                                Object {
                                                                  "alignCenter": "MuiTypography-alignCenter",
                                                                  "alignJustify": "MuiTypography-alignJustify",
                                                                  "alignLeft": "MuiTypography-alignLeft",
                                                                  "alignRight": "MuiTypography-alignRight",
                                                                  "body1": "MuiTypography-body1",
                                                                  "body2": "MuiTypography-body2",
                                                                  "button": "MuiTypography-button",
                                                                  "caption": "MuiTypography-caption",
                                                                  "colorError": "MuiTypography-colorError",
                                                                  "colorInherit": "MuiTypography-colorInherit",
                                                                  "colorPrimary": "MuiTypography-colorPrimary",
                                                                  "colorSecondary": "MuiTypography-colorSecondary",
                                                                  "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                  "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                  "displayBlock": "MuiTypography-displayBlock",
                                                                  "displayInline": "MuiTypography-displayInline",
                                                                  "gutterBottom": "MuiTypography-gutterBottom",
                                                                  "h1": "MuiTypography-h1",
                                                                  "h2": "MuiTypography-h2",
                                                                  "h3": "MuiTypography-h3",
                                                                  "h4": "MuiTypography-h4",
                                                                  "h5": "MuiTypography-h5",
                                                                  "h6": "MuiTypography-h6",
                                                                  "noWrap": "MuiTypography-noWrap",
                                                                  "overline": "MuiTypography-overline",
                                                                  "paragraph": "MuiTypography-paragraph",
                                                                  "root": "MuiTypography-root",
                                                                  "srOnly": "MuiTypography-srOnly",
                                                                  "subtitle1": "MuiTypography-subtitle1",
                                                                  "subtitle2": "MuiTypography-subtitle2",
                                                                }
                                                              }
                                                              component="h2"
                                                              variant="h6"
                                                            >
                                                              <h2
                                                                className="MuiTypography-root MuiTypography-h6"
                                                              >
                                                                Storybook
                                                              </h2>
                                                            </ForwardRef(Typography)>
                                                          </WithStyles(ForwardRef(Typography))>
                                                        </div>
                                                      </ForwardRef(DialogTitle)>
                                                    </WithStyles(ForwardRef(DialogTitle))>
                                                    <WithStyles(ForwardRef(DialogContent))>
                                                      <ForwardRef(DialogContent)
                                                        classes={
                                                          Object {
                                                            "dividers": "MuiDialogContent-dividers",
                                                            "root": "MuiDialogContent-root",
                                                          }
                                                        }
                                                      >
                                                        <div
                                                          className="MuiDialogContent-root"
                                                        >
                                                          <WithStyles(ForwardRef(DialogContentText))>
                                                            <ForwardRef(DialogContentText)
                                                              classes={
                                                                Object {
                                                                  "root": "MuiDialogContentText-root",
                                                                }
                                                              }
                                                            >
                                                              <WithStyles(ForwardRef(Typography))
                                                                classes={
                                                                  Object {
                                                                    "root": "MuiDialogContentText-root",
                                                                  }
                                                                }
                                                                color="textSecondary"
                                                                component="p"
                                                                variant="body1"
                                                              >
                                                                <ForwardRef(Typography)
                                                                  classes={
                                                                    Object {
                                                                      "alignCenter": "MuiTypography-alignCenter",
                                                                      "alignJustify": "MuiTypography-alignJustify",
                                                                      "alignLeft": "MuiTypography-alignLeft",
                                                                      "alignRight": "MuiTypography-alignRight",
                                                                      "body1": "MuiTypography-body1",
                                                                      "body2": "MuiTypography-body2",
                                                                      "button": "MuiTypography-button",
                                                                      "caption": "MuiTypography-caption",
                                                                      "colorError": "MuiTypography-colorError",
                                                                      "colorInherit": "MuiTypography-colorInherit",
                                                                      "colorPrimary": "MuiTypography-colorPrimary",
                                                                      "colorSecondary": "MuiTypography-colorSecondary",
                                                                      "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                      "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                      "displayBlock": "MuiTypography-displayBlock",
                                                                      "displayInline": "MuiTypography-displayInline",
                                                                      "gutterBottom": "MuiTypography-gutterBottom",
                                                                      "h1": "MuiTypography-h1",
                                                                      "h2": "MuiTypography-h2",
                                                                      "h3": "MuiTypography-h3",
                                                                      "h4": "MuiTypography-h4",
                                                                      "h5": "MuiTypography-h5",
                                                                      "h6": "MuiTypography-h6",
                                                                      "noWrap": "MuiTypography-noWrap",
                                                                      "overline": "MuiTypography-overline",
                                                                      "paragraph": "MuiTypography-paragraph",
                                                                      "root": "MuiTypography-root MuiDialogContentText-root",
                                                                      "srOnly": "MuiTypography-srOnly",
                                                                      "subtitle1": "MuiTypography-subtitle1",
                                                                      "subtitle2": "MuiTypography-subtitle2",
                                                                    }
                                                                  }
                                                                  color="textSecondary"
                                                                  component="p"
                                                                  variant="body1"
                                                                >
                                                                  <p
                                                                    className="MuiTypography-root MuiDialogContentText-root MuiTypography-body1 MuiTypography-colorTextSecondary"
                                                                  >
                                                                    Enter your own text in Knobs!
                                                                  </p>
                                                                </ForwardRef(Typography)>
                                                              </WithStyles(ForwardRef(Typography))>
                                                            </ForwardRef(DialogContentText)>
                                                          </WithStyles(ForwardRef(DialogContentText))>
                                                          <WithStyles(ForwardRef(TextField))
                                                            autoFocus={true}
                                                            error={false}
                                                            fullWidth={true}
                                                            label="Enter your input here:"
                                                            margin="dense"
                                                            onChange={[Function]}
                                                            type="text"
                                                            value=""
                                                          >
                                                            <ForwardRef(TextField)
                                                              autoFocus={true}
                                                              classes={
                                                                Object {
                                                                  "root": "MuiTextField-root",
                                                                }
                                                              }
                                                              error={false}
                                                              fullWidth={true}
                                                              label="Enter your input here:"
                                                              margin="dense"
                                                              onChange={[Function]}
                                                              type="text"
                                                              value=""
                                                            >
                                                              <WithStyles(ForwardRef(FormControl))
                                                                className="MuiTextField-root"
                                                                color="primary"
                                                                disabled={false}
                                                                error={false}
                                                                fullWidth={true}
                                                                margin="dense"
                                                                required={false}
                                                                variant="standard"
                                                              >
                                                                <ForwardRef(FormControl)
                                                                  className="MuiTextField-root"
                                                                  classes={
                                                                    Object {
                                                                      "fullWidth": "MuiFormControl-fullWidth",
                                                                      "marginDense": "MuiFormControl-marginDense",
                                                                      "marginNormal": "MuiFormControl-marginNormal",
                                                                      "root": "MuiFormControl-root",
                                                                    }
                                                                  }
                                                                  color="primary"
                                                                  disabled={false}
                                                                  error={false}
                                                                  fullWidth={true}
                                                                  margin="dense"
                                                                  required={false}
                                                                  variant="standard"
                                                                >
                                                                  <div
                                                                    className="MuiFormControl-root MuiTextField-root MuiFormControl-marginDense MuiFormControl-fullWidth"
                                                                  >
                                                                    <WithStyles(ForwardRef(InputLabel))>
                                                                      <ForwardRef(InputLabel)
                                                                        classes={
                                                                          Object {
                                                                            "animated": "MuiInputLabel-animated",
                                                                            "asterisk": "MuiInputLabel-asterisk",
                                                                            "disabled": "Mui-disabled",
                                                                            "error": "Mui-error",
                                                                            "filled": "MuiInputLabel-filled",
                                                                            "focused": "Mui-focused",
                                                                            "formControl": "MuiInputLabel-formControl",
                                                                            "marginDense": "MuiInputLabel-marginDense",
                                                                            "outlined": "MuiInputLabel-outlined",
                                                                            "required": "Mui-required",
                                                                            "root": "MuiInputLabel-root",
                                                                            "shrink": "MuiInputLabel-shrink",
                                                                          }
                                                                        }
                                                                      >
                                                                        <WithStyles(ForwardRef(FormLabel))
                                                                          className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-marginDense"
                                                                          classes={
                                                                            Object {
                                                                              "asterisk": "MuiInputLabel-asterisk",
                                                                              "disabled": "Mui-disabled",
                                                                              "error": "Mui-error",
                                                                              "focused": "Mui-focused",
                                                                              "required": "Mui-required",
                                                                            }
                                                                          }
                                                                          data-shrink={true}
                                                                        >
                                                                          <ForwardRef(FormLabel)
                                                                            className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-marginDense"
                                                                            classes={
                                                                              Object {
                                                                                "asterisk": "MuiFormLabel-asterisk MuiInputLabel-asterisk",
                                                                                "colorSecondary": "MuiFormLabel-colorSecondary",
                                                                                "disabled": "Mui-disabled Mui-disabled",
                                                                                "error": "Mui-error Mui-error",
                                                                                "filled": "MuiFormLabel-filled",
                                                                                "focused": "Mui-focused Mui-focused",
                                                                                "required": "Mui-required Mui-required",
                                                                                "root": "MuiFormLabel-root",
                                                                              }
                                                                            }
                                                                            data-shrink={true}
                                                                          >
                                                                            <label
                                                                              className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-marginDense Mui-focused Mui-focused"
                                                                              data-shrink={true}
                                                                            >
                                                                              Enter your input here:
                                                                            </label>
                                                                          </ForwardRef(FormLabel)>
                                                                        </WithStyles(ForwardRef(FormLabel))>
                                                                      </ForwardRef(InputLabel)>
                                                                    </WithStyles(ForwardRef(InputLabel))>
                                                                    <WithStyles(ForwardRef(Input))
                                                                      autoFocus={true}
                                                                      fullWidth={true}
                                                                      multiline={false}
                                                                      onChange={[Function]}
                                                                      type="text"
                                                                      value=""
                                                                    >
                                                                      <ForwardRef(Input)
                                                                        autoFocus={true}
                                                                        classes={
                                                                          Object {
                                                                            "colorSecondary": "MuiInput-colorSecondary",
                                                                            "disabled": "Mui-disabled",
                                                                            "error": "Mui-error",
                                                                            "focused": "Mui-focused",
                                                                            "formControl": "MuiInput-formControl",
                                                                            "fullWidth": "MuiInput-fullWidth",
                                                                            "input": "MuiInput-input",
                                                                            "inputMarginDense": "MuiInput-inputMarginDense",
                                                                            "inputMultiline": "MuiInput-inputMultiline",
                                                                            "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                                            "marginDense": "MuiInput-marginDense",
                                                                            "multiline": "MuiInput-multiline",
                                                                            "root": "MuiInput-root",
                                                                            "underline": "MuiInput-underline",
                                                                          }
                                                                        }
                                                                        fullWidth={true}
                                                                        multiline={false}
                                                                        onChange={[Function]}
                                                                        type="text"
                                                                        value=""
                                                                      >
                                                                        <WithStyles(ForwardRef(InputBase))
                                                                          autoFocus={true}
                                                                          classes={
                                                                            Object {
                                                                              "colorSecondary": "MuiInput-colorSecondary",
                                                                              "disabled": "Mui-disabled",
                                                                              "error": "Mui-error",
                                                                              "focused": "Mui-focused",
                                                                              "formControl": "MuiInput-formControl",
                                                                              "fullWidth": "MuiInput-fullWidth",
                                                                              "input": "MuiInput-input",
                                                                              "inputMarginDense": "MuiInput-inputMarginDense",
                                                                              "inputMultiline": "MuiInput-inputMultiline",
                                                                              "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                                              "marginDense": "MuiInput-marginDense",
                                                                              "multiline": "MuiInput-multiline",
                                                                              "root": "MuiInput-root MuiInput-underline",
                                                                              "underline": null,
                                                                            }
                                                                          }
                                                                          fullWidth={true}
                                                                          inputComponent="input"
                                                                          multiline={false}
                                                                          onChange={[Function]}
                                                                          type="text"
                                                                          value=""
                                                                        >
                                                                          <ForwardRef(InputBase)
                                                                            autoFocus={true}
                                                                            classes={
                                                                              Object {
                                                                                "adornedEnd": "MuiInputBase-adornedEnd",
                                                                                "adornedStart": "MuiInputBase-adornedStart",
                                                                                "colorSecondary": "MuiInputBase-colorSecondary MuiInput-colorSecondary",
                                                                                "disabled": "Mui-disabled Mui-disabled",
                                                                                "error": "Mui-error Mui-error",
                                                                                "focused": "Mui-focused Mui-focused",
                                                                                "formControl": "MuiInputBase-formControl MuiInput-formControl",
                                                                                "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                                                                                "input": "MuiInputBase-input MuiInput-input",
                                                                                "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                                                                "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                                                                "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                                                                "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                                                                                "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                                                                                "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                                                                                "marginDense": "MuiInputBase-marginDense MuiInput-marginDense",
                                                                                "multiline": "MuiInputBase-multiline MuiInput-multiline",
                                                                                "root": "MuiInputBase-root MuiInput-root MuiInput-underline",
                                                                              }
                                                                            }
                                                                            fullWidth={true}
                                                                            inputComponent="input"
                                                                            multiline={false}
                                                                            onChange={[Function]}
                                                                            type="text"
                                                                            value=""
                                                                          >
                                                                            <div
                                                                              className="MuiInputBase-root MuiInput-root MuiInput-underline MuiInputBase-fullWidth MuiInput-fullWidth Mui-focused Mui-focused MuiInputBase-formControl MuiInput-formControl MuiInputBase-marginDense MuiInput-marginDense"
                                                                              onClick={[Function]}
                                                                            >
                                                                              <input
                                                                                aria-invalid={false}
                                                                                autoFocus={true}
                                                                                className="MuiInputBase-input MuiInput-input MuiInputBase-inputMarginDense MuiInput-inputMarginDense"
                                                                                disabled={false}
                                                                                onAnimationStart={[Function]}
                                                                                onBlur={[Function]}
                                                                                onChange={[Function]}
                                                                                onFocus={[Function]}
                                                                                required={false}
                                                                                type="text"
                                                                                value=""
                                                                              />
                                                                            </div>
                                                                          </ForwardRef(InputBase)>
                                                                        </WithStyles(ForwardRef(InputBase))>
                                                                      </ForwardRef(Input)>
                                                                    </WithStyles(ForwardRef(Input))>
                                                                  </div>
                                                                </ForwardRef(FormControl)>
                                                              </WithStyles(ForwardRef(FormControl))>
                                                            </ForwardRef(TextField)>
                                                          </WithStyles(ForwardRef(TextField))>
                                                        </div>
                                                      </ForwardRef(DialogContent)>
                                                    </WithStyles(ForwardRef(DialogContent))>
                                                    <WithStyles(ForwardRef(DialogActions))>
                                                      <ForwardRef(DialogActions)
                                                        classes={
                                                          Object {
                                                            "root": "MuiDialogActions-root",
                                                            "spacing": "MuiDialogActions-spacing",
                                                          }
                                                        }
                                                      >
                                                        <div
                                                          className="MuiDialogActions-root MuiDialogActions-spacing"
                                                        >
                                                          <WithStyles(ForwardRef(Button))
                                                            color="primary"
                                                            onClick={[Function]}
                                                          >
                                                            <ForwardRef(Button)
                                                              classes={
                                                                Object {
                                                                  "colorInherit": "MuiButton-colorInherit",
                                                                  "contained": "MuiButton-contained",
                                                                  "containedPrimary": "MuiButton-containedPrimary",
                                                                  "containedSecondary": "MuiButton-containedSecondary",
                                                                  "containedSizeLarge": "MuiButton-containedSizeLarge",
                                                                  "containedSizeSmall": "MuiButton-containedSizeSmall",
                                                                  "disableElevation": "MuiButton-disableElevation",
                                                                  "disabled": "Mui-disabled",
                                                                  "endIcon": "MuiButton-endIcon",
                                                                  "focusVisible": "Mui-focusVisible",
                                                                  "fullWidth": "MuiButton-fullWidth",
                                                                  "iconSizeLarge": "MuiButton-iconSizeLarge",
                                                                  "iconSizeMedium": "MuiButton-iconSizeMedium",
                                                                  "iconSizeSmall": "MuiButton-iconSizeSmall",
                                                                  "label": "MuiButton-label",
                                                                  "outlined": "MuiButton-outlined",
                                                                  "outlinedPrimary": "MuiButton-outlinedPrimary",
                                                                  "outlinedSecondary": "MuiButton-outlinedSecondary",
                                                                  "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                                                                  "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                                                                  "root": "MuiButton-root",
                                                                  "sizeLarge": "MuiButton-sizeLarge",
                                                                  "sizeSmall": "MuiButton-sizeSmall",
                                                                  "startIcon": "MuiButton-startIcon",
                                                                  "text": "MuiButton-text",
                                                                  "textPrimary": "MuiButton-textPrimary",
                                                                  "textSecondary": "MuiButton-textSecondary",
                                                                  "textSizeLarge": "MuiButton-textSizeLarge",
                                                                  "textSizeSmall": "MuiButton-textSizeSmall",
                                                                }
                                                              }
                                                              color="primary"
                                                              onClick={[Function]}
                                                            >
                                                              <WithStyles(ForwardRef(ButtonBase))
                                                                className="MuiButton-root MuiButton-text MuiButton-textPrimary"
                                                                component="button"
                                                                disabled={false}
                                                                focusRipple={true}
                                                                focusVisibleClassName="Mui-focusVisible"
                                                                onClick={[Function]}
                                                                type="button"
                                                              >
                                                                <ForwardRef(ButtonBase)
                                                                  className="MuiButton-root MuiButton-text MuiButton-textPrimary"
                                                                  classes={
                                                                    Object {
                                                                      "disabled": "Mui-disabled",
                                                                      "focusVisible": "Mui-focusVisible",
                                                                      "root": "MuiButtonBase-root",
                                                                    }
                                                                  }
                                                                  component="button"
                                                                  disabled={false}
                                                                  focusRipple={true}
                                                                  focusVisibleClassName="Mui-focusVisible"
                                                                  onClick={[Function]}
                                                                  type="button"
                                                                >
                                                                  <button
                                                                    className="MuiButtonBase-root MuiButton-root MuiButton-text MuiButton-textPrimary"
                                                                    disabled={false}
                                                                    onBlur={[Function]}
                                                                    onClick={[Function]}
                                                                    onDragLeave={[Function]}
                                                                    onFocus={[Function]}
                                                                    onKeyDown={[Function]}
                                                                    onKeyUp={[Function]}
                                                                    onMouseDown={[Function]}
                                                                    onMouseLeave={[Function]}
                                                                    onMouseUp={[Function]}
                                                                    onTouchEnd={[Function]}
                                                                    onTouchMove={[Function]}
                                                                    onTouchStart={[Function]}
                                                                    tabIndex={0}
                                                                    type="button"
                                                                  >
                                                                    <span
                                                                      className="MuiButton-label"
                                                                    >
                                                                      No
                                                                    </span>
                                                                    <WithStyles(memo)
                                                                      center={false}
                                                                    >
                                                                      <ForwardRef(TouchRipple)
                                                                        center={false}
                                                                        classes={
                                                                          Object {
                                                                            "child": "MuiTouchRipple-child",
                                                                            "childLeaving": "MuiTouchRipple-childLeaving",
                                                                            "childPulsate": "MuiTouchRipple-childPulsate",
                                                                            "ripple": "MuiTouchRipple-ripple",
                                                                            "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                            "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                            "root": "MuiTouchRipple-root",
                                                                          }
                                                                        }
                                                                      >
                                                                        <span
                                                                          className="MuiTouchRipple-root"
                                                                        >
                                                                          <TransitionGroup
                                                                            childFactory={[Function]}
                                                                            component={null}
                                                                            exit={true}
                                                                          />
                                                                        </span>
                                                                      </ForwardRef(TouchRipple)>
                                                                    </WithStyles(memo)>
                                                                  </button>
                                                                </ForwardRef(ButtonBase)>
                                                              </WithStyles(ForwardRef(ButtonBase))>
                                                            </ForwardRef(Button)>
                                                          </WithStyles(ForwardRef(Button))>
                                                          <WithStyles(ForwardRef(Button))
                                                            color="primary"
                                                            onClick={[Function]}
                                                          >
                                                            <ForwardRef(Button)
                                                              classes={
                                                                Object {
                                                                  "colorInherit": "MuiButton-colorInherit",
                                                                  "contained": "MuiButton-contained",
                                                                  "containedPrimary": "MuiButton-containedPrimary",
                                                                  "containedSecondary": "MuiButton-containedSecondary",
                                                                  "containedSizeLarge": "MuiButton-containedSizeLarge",
                                                                  "containedSizeSmall": "MuiButton-containedSizeSmall",
                                                                  "disableElevation": "MuiButton-disableElevation",
                                                                  "disabled": "Mui-disabled",
                                                                  "endIcon": "MuiButton-endIcon",
                                                                  "focusVisible": "Mui-focusVisible",
                                                                  "fullWidth": "MuiButton-fullWidth",
                                                                  "iconSizeLarge": "MuiButton-iconSizeLarge",
                                                                  "iconSizeMedium": "MuiButton-iconSizeMedium",
                                                                  "iconSizeSmall": "MuiButton-iconSizeSmall",
                                                                  "label": "MuiButton-label",
                                                                  "outlined": "MuiButton-outlined",
                                                                  "outlinedPrimary": "MuiButton-outlinedPrimary",
                                                                  "outlinedSecondary": "MuiButton-outlinedSecondary",
                                                                  "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                                                                  "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                                                                  "root": "MuiButton-root",
                                                                  "sizeLarge": "MuiButton-sizeLarge",
                                                                  "sizeSmall": "MuiButton-sizeSmall",
                                                                  "startIcon": "MuiButton-startIcon",
                                                                  "text": "MuiButton-text",
                                                                  "textPrimary": "MuiButton-textPrimary",
                                                                  "textSecondary": "MuiButton-textSecondary",
                                                                  "textSizeLarge": "MuiButton-textSizeLarge",
                                                                  "textSizeSmall": "MuiButton-textSizeSmall",
                                                                }
                                                              }
                                                              color="primary"
                                                              onClick={[Function]}
                                                            >
                                                              <WithStyles(ForwardRef(ButtonBase))
                                                                className="MuiButton-root MuiButton-text MuiButton-textPrimary"
                                                                component="button"
                                                                disabled={false}
                                                                focusRipple={true}
                                                                focusVisibleClassName="Mui-focusVisible"
                                                                onClick={[Function]}
                                                                type="button"
                                                              >
                                                                <ForwardRef(ButtonBase)
                                                                  className="MuiButton-root MuiButton-text MuiButton-textPrimary"
                                                                  classes={
                                                                    Object {
                                                                      "disabled": "Mui-disabled",
                                                                      "focusVisible": "Mui-focusVisible",
                                                                      "root": "MuiButtonBase-root",
                                                                    }
                                                                  }
                                                                  component="button"
                                                                  disabled={false}
                                                                  focusRipple={true}
                                                                  focusVisibleClassName="Mui-focusVisible"
                                                                  onClick={[Function]}
                                                                  type="button"
                                                                >
                                                                  <button
                                                                    className="MuiButtonBase-root MuiButton-root MuiButton-text MuiButton-textPrimary"
                                                                    disabled={false}
                                                                    onBlur={[Function]}
                                                                    onClick={[Function]}
                                                                    onDragLeave={[Function]}
                                                                    onFocus={[Function]}
                                                                    onKeyDown={[Function]}
                                                                    onKeyUp={[Function]}
                                                                    onMouseDown={[Function]}
                                                                    onMouseLeave={[Function]}
                                                                    onMouseUp={[Function]}
                                                                    onTouchEnd={[Function]}
                                                                    onTouchMove={[Function]}
                                                                    onTouchStart={[Function]}
                                                                    tabIndex={0}
                                                                    type="button"
                                                                  >
                                                                    <span
                                                                      className="MuiButton-label"
                                                                    >
                                                                      Yes
                                                                    </span>
                                                                    <WithStyles(memo)
                                                                      center={false}
                                                                    >
                                                                      <ForwardRef(TouchRipple)
                                                                        center={false}
                                                                        classes={
                                                                          Object {
                                                                            "child": "MuiTouchRipple-child",
                                                                            "childLeaving": "MuiTouchRipple-childLeaving",
                                                                            "childPulsate": "MuiTouchRipple-childPulsate",
                                                                            "ripple": "MuiTouchRipple-ripple",
                                                                            "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                            "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                            "root": "MuiTouchRipple-root",
                                                                          }
                                                                        }
                                                                      >
                                                                        <span
                                                                          className="MuiTouchRipple-root"
                                                                        >
                                                                          <TransitionGroup
                                                                            childFactory={[Function]}
                                                                            component={null}
                                                                            exit={true}
                                                                          />
                                                                        </span>
                                                                      </ForwardRef(TouchRipple)>
                                                                    </WithStyles(memo)>
                                                                  </button>
                                                                </ForwardRef(ButtonBase)>
                                                              </WithStyles(ForwardRef(ButtonBase))>
                                                            </ForwardRef(Button)>
                                                          </WithStyles(ForwardRef(Button))>
                                                        </div>
                                                      </ForwardRef(DialogActions)>
                                                    </WithStyles(ForwardRef(DialogActions))>
                                                  </div>
                                                </ForwardRef(Paper)>
                                              </WithStyles(ForwardRef(Paper))>
                                            </div>
                                          </Transition>
                                        </ForwardRef(Fade)>
                                        <div
                                          data-test="sentinelEnd"
                                          tabIndex={0}
                                        />
                                      </Unstable_TrapFocus>
                                    </div>
                                  </Portal>
                                </ForwardRef(Portal)>
                              </ForwardRef(Modal)>
                            </ForwardRef(Dialog)>
                          </WithStyles(ForwardRef(Dialog))>
                        </Memo(InputDialogRaw)>
                      </Memo(DialogContextProvider)>
                    </Router>
                  </Memo(PermissionContextProvider)>
                </QueryClientProvider>
              </ThemeProvider>
            </Memo(ThemeProvider)>
          </MuiPickersUtilsProvider>
        </Memo(MuiPickerUtils)>
      </I18nextProvider>
    </Memo(CCI18nProvider)>
  </Suspense>
</Memo(ComponentsCareFramework)>
`;
